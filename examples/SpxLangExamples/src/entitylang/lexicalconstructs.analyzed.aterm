CompilationUnit(
  []
, [ Package(
      QName(["languages", "Entitylang"])
    , [ Module(
          None()
        , SPXModuleName("Identifier"){Package(QName(["languages", "Entitylang"]))}
        , [ SDFSection(
              lexical-syntax(
                [ prod(
                    [ char-class(
                        simple-charclass(
                          present(
                            conc(
                              range(short("a"), short("z"))
                            , range(short("A"), short("Z"))
                            )
                          )
                        )
                      )
                    , iter-star(
                        char-class(
                          simple-charclass(
                            present(
                              conc(
                                range(short("a"), short("z"))
                              , conc(
                                  range(short("A"), short("Z"))
                                , range(short("0"), short("9"))
                                )
                              )
                            )
                          )
                        )
                      )
                    ]
                  , sort("ID")
                  , no-attrs()
                  )
                ]
              )
            )
          ]
        )
      , Module(
          None()
        , SPXModuleName("Literals"){Package(QName(["languages", "Entitylang"]))}
        , [ SDFSection(
              lexical-syntax(
                [ prod(
                    [ opt(lit("\"-\""))
                    , iter(
                        char-class(simple-charclass(present(range(short("0"), short("9")))))
                      )
                    ]
                  , sort("INT")
                  , no-attrs()
                  )
                , prod(
                    [lit("\"\\\"\""), iter-star(sort("StringChar")), lit("\"\\\"\"")]
                  , sort("STRING")
                  , no-attrs()
                  )
                , prod(
                    [char-class(
                       comp(simple-charclass(present(conc(short("\\\""), short("\\n")))))
                     )]
                  , sort("StringChar")
                  , no-attrs()
                  )
                , prod([lit("\"\\\\\\\"\"")], sort("StringChar"), no-attrs())
                , prod([sort("BackSlashChar")], sort("StringChar"), no-attrs())
                , prod([lit("\"\\\\\"")], sort("BackSlashChar"), no-attrs())
                ]
              )
            )
          , SDFSection(
              lexical-restrictions(
                [ follow(
                    [sort("CommentChar")]
                  , single(char-class(simple-charclass(present(short("\\/")))))
                  )
                , follow(
                    [sort("INT")]
                  , single(
                      char-class(simple-charclass(present(range(short("0"), short("9")))))
                    )
                  )
                , follow(
                    [sort("ID")]
                  , single(
                      char-class(
                        simple-charclass(
                          present(
                            conc(
                              range(short("a"), short("z"))
                            , conc(
                                range(short("A"), short("Z"))
                              , conc(range(short("0"), short("9")), short("\\_"))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , follow(
                    [sort("BackSlashChar")]
                  , single(char-class(simple-charclass(present(short("\\\"")))))
                  )
                ]
              )
            )
          ]
        )
      , Module(
          None()
        , SPXModuleName("Keywords"){Package(QName(["languages", "Entitylang"]))}
        , [ KeywordSection(
              KeywordSymbols([sort("ID")])
            , Keywords(["Int", "String"])
            , Some(
                FollowRestriction(
                  single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            range(short("A"), short("Z"))
                          , conc(
                              range(short("a"), short("z"))
                            , conc(range(short("0"), short("9")), short("\\_"))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          ]
        )
      , Module(
          None()
        , SPXModuleName("Layout"){Package(QName(["languages", "Entitylang"]))}
        , [ SDFSection(
              lexical-syntax(
                [ prod(
                    [ char-class(
                        simple-charclass(
                          present(
                            conc(
                              short("\\ ")
                            , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                            )
                          )
                        )
                      )
                    ]
                  , layout()
                  , no-attrs()
                  )
                , prod(
                    [char-class(simple-charclass(present(short("\\*"))))]
                  , sort("CommentChar")
                  , no-attrs()
                  )
                , prod(
                    [ lit("\"/*\"")
                    , iter-star(
                        alt(
                          char-class(comp(simple-charclass(present(short("\\*")))))
                        , sort("CommentChar")
                        )
                      )
                    , lit("\"*/\"")
                    ]
                  , layout()
                  , no-attrs()
                  )
                , prod(
                    [ lit("\"//\"")
                    , iter-star(
                        char-class(
                          comp(simple-charclass(present(conc(short("\\n"), short("\\r")))))
                        )
                      )
                    , alt(
                        char-class(simple-charclass(present(conc(short("\\n"), short("\\r")))))
                      , sort("EOF")
                      )
                    ]
                  , layout()
                  , no-attrs()
                  )
                , prod([], sort("EOF"), no-attrs())
                ]
              )
            )
          , SDFSection(
              lexical-restrictions(
                [follow(
                   [sort("EOF")]
                 , single(char-class(comp(simple-charclass(absent()))))
                 )]
              )
            )
          , SDFSection(
              context-free-restrictions(
                [ follow(
                    [opt(layout())]
                  , single(
                      char-class(
                        simple-charclass(
                          present(
                            conc(
                              short("\\ ")
                            , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                            )
                          )
                        )
                      )
                    )
                  )
                , follow(
                    [opt(layout())]
                  , single(
                      seq(
                        simple-charclass(present(short("\\/")))
                      , single(char-class(simple-charclass(present(short("\\/")))))
                      )
                    )
                  )
                , follow(
                    [opt(layout())]
                  , single(
                      seq(
                        simple-charclass(present(short("\\/")))
                      , single(char-class(simple-charclass(present(short("\\*")))))
                      )
                    )
                  )
                ]
              )
            )
          ]
        )
      ]
    )
  ]
)