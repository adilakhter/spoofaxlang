
regular tree grammar
  start Program
  productions
    ListStarOfExp0        -> ListPlusOfExp0
    ListStarOfExp0        -> <nil>()
    ListStarOfExp0        -> <conc>(ListStarOfExp0,ListStarOfExp0)
    ListPlusOfExp0        -> <conc>(ListStarOfExp0,ListPlusOfExp0)
    ListPlusOfExp0        -> <conc>(ListPlusOfExp0,ListStarOfExp0)
    ListPlusOfExp0        -> <conc>(ListPlusOfExp0,ListPlusOfExp0)
    ListPlusOfExp0        -> <cons>(Exp,ListStarOfExp0)
    ListStarOfStatement0  -> ListPlusOfStatement0
    ListStarOfStatement0  -> <nil>()
    ListStarOfStatement0  -> <conc>(ListStarOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0  -> <conc>(ListStarOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0  -> <conc>(ListPlusOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0  -> <conc>(ListPlusOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0  -> <cons>(Statement,ListStarOfStatement0)
    ListStarOfVarDecl0    -> ListPlusOfVarDecl0
    ListStarOfVarDecl0    -> <nil>()
    ListStarOfVarDecl0    -> <conc>(ListStarOfVarDecl0,ListStarOfVarDecl0)
    ListPlusOfVarDecl0    -> <conc>(ListStarOfVarDecl0,ListPlusOfVarDecl0)
    ListPlusOfVarDecl0    -> <conc>(ListPlusOfVarDecl0,ListStarOfVarDecl0)
    ListPlusOfVarDecl0    -> <conc>(ListPlusOfVarDecl0,ListPlusOfVarDecl0)
    ListPlusOfVarDecl0    -> <cons>(VarDecl,ListStarOfVarDecl0)
    ListStarOfParamDecl0  -> ListPlusOfParamDecl0
    ListStarOfParamDecl0  -> <nil>()
    ListStarOfParamDecl0  -> <conc>(ListStarOfParamDecl0,ListStarOfParamDecl0)
    ListPlusOfParamDecl0  -> <conc>(ListStarOfParamDecl0,ListPlusOfParamDecl0)
    ListPlusOfParamDecl0  -> <conc>(ListPlusOfParamDecl0,ListStarOfParamDecl0)
    ListPlusOfParamDecl0  -> <conc>(ListPlusOfParamDecl0,ListPlusOfParamDecl0)
    ListPlusOfParamDecl0  -> <cons>(ParamDecl,ListStarOfParamDecl0)
    ListStarOfMethodDecl0 -> ListPlusOfMethodDecl0
    ListStarOfMethodDecl0 -> <nil>()
    ListStarOfMethodDecl0 -> <conc>(ListStarOfMethodDecl0,ListStarOfMethodDecl0)
    ListPlusOfMethodDecl0 -> <conc>(ListStarOfMethodDecl0,ListPlusOfMethodDecl0)
    ListPlusOfMethodDecl0 -> <conc>(ListPlusOfMethodDecl0,ListStarOfMethodDecl0)
    ListPlusOfMethodDecl0 -> <conc>(ListPlusOfMethodDecl0,ListPlusOfMethodDecl0)
    ListPlusOfMethodDecl0 -> <cons>(MethodDecl,ListStarOfMethodDecl0)
    ListStarOfFieldDecl0  -> ListPlusOfFieldDecl0
    ListStarOfFieldDecl0  -> <nil>()
    ListStarOfFieldDecl0  -> <conc>(ListStarOfFieldDecl0,ListStarOfFieldDecl0)
    ListPlusOfFieldDecl0  -> <conc>(ListStarOfFieldDecl0,ListPlusOfFieldDecl0)
    ListPlusOfFieldDecl0  -> <conc>(ListPlusOfFieldDecl0,ListStarOfFieldDecl0)
    ListPlusOfFieldDecl0  -> <conc>(ListPlusOfFieldDecl0,ListPlusOfFieldDecl0)
    ListPlusOfFieldDecl0  -> <cons>(FieldDecl,ListStarOfFieldDecl0)
    ListStarOfClassDecl0  -> ListPlusOfClassDecl0
    ListStarOfClassDecl0  -> <nil>()
    ListStarOfClassDecl0  -> <conc>(ListStarOfClassDecl0,ListStarOfClassDecl0)
    ListPlusOfClassDecl0  -> <conc>(ListStarOfClassDecl0,ListPlusOfClassDecl0)
    ListPlusOfClassDecl0  -> <conc>(ListPlusOfClassDecl0,ListStarOfClassDecl0)
    ListPlusOfClassDecl0  -> <conc>(ListPlusOfClassDecl0,ListPlusOfClassDecl0)
    ListPlusOfClassDecl0  -> <cons>(ClassDecl,ListStarOfClassDecl0)
    ListStarOfCommPart0   -> <string>
    ListPlusOfCommPart0   -> <string>
    Exp                   -> New(ID)
    Exp                   -> ArrayLength(Exp)
    IndexExp              -> Exp
    Exp                   -> ArrayRef(Exp,IndexExp)
    Exp                   -> ArrayNew(Exp)
    Exp                   -> Call(Exp,ID,ListStarOfExp0)
    Exp                   -> And(Exp,Exp)
    Exp                   -> Lt(Exp,Exp)
    Exp                   -> Mul(Exp,Exp)
    Exp                   -> Sub(Exp,Exp)
    Exp                   -> Add(Exp,Exp)
    Exp                   -> Not(Exp)
    Exp                   -> VarRef
    Exp                   -> This()
    Exp                   -> False()
    Exp                   -> True()
    Exp                   -> IntValue(INT)
    Statement             -> Print(Exp)
    Statement             -> While(Exp,Statement)
    Statement             -> If(Exp,Statement,Statement)
    Statement             -> ArrayAssign(VarRef,Exp,Exp)
    Statement             -> Assign(VarRef,Exp)
    Statement             -> Block(ListStarOfStatement0)
    VarRef                -> VarRef(ID)
    Type                  -> ClassType(ID)
    Type                  -> Array()
    Type                  -> Bool()
    Type                  -> Int()
    ParamDecl             -> Param(Type,ID)
    VarDecl               -> Var(Type,ID)
    FieldDecl             -> Field(Type,ID)
    MethodDecl            -> Method(Type,ID,ListStarOfParamDecl0,ListStarOfVarDecl0,ListStarOfStatement0,Exp)
    ParentDecl            -> Parent(ID)
    ParentDecl            -> None()
    ClassDecl             -> Class(ID,ParentDecl,ListStarOfFieldDecl0,ListStarOfMethodDecl0)
    MainParamType         -> StringArray()
    MainType              -> Void()
    MainParamDecl         -> MParam(MainParamType,ID)
    MainMethod            -> MainMethod(MainType,MainID,MainParamDecl,Statement)
    MainClass             -> MainClass(ID,MainMethod)
    Program               -> Program(MainClass,ListStarOfClassDecl0)
    Slash                 -> <string>
    Asterisk              -> <string>
    CommPart              -> <string>
    BlockComment          -> <string>
    EOF                   -> <string>
    MainID                -> <string>
    ID                    -> <string>
    INT                   -> <string>
