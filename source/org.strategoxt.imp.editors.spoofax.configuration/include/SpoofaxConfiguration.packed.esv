Module("SpoofaxConfiguration.main.packed",Imports([Import("SpoofaxConfiguration.main"),Import("SpoofaxConfiguration-Builders"),Import("SpoofaxConfiguration-Colorer"),Import("SpoofaxConfiguration-Completions"),Import("SpoofaxConfiguration-Folding"),Import("SpoofaxConfiguration-Outliner"),Import("SpoofaxConfiguration-References"),Import("SpoofaxConfiguration-Syntax"),Import("SpoofaxConfiguration-Builders.generated"),Import("SpoofaxConfiguration-Completions.generated"),Import("SpoofaxConfiguration-Folding.generated"),Import("SpoofaxConfiguration-Outliner.generated"),Import("SpoofaxConfiguration-References.generated"),Import("SpoofaxConfiguration-Syntax.generated")]),[Language(" General properties",[LanguageName("SpoofaxConfiguration"),LanguageId("org.strategoxt.imp.editors.spoofax.configuration"),Extends(Values(["Root"])),Description(String("\"Spoofax/IMP-generated editor for the SpoofaxConfiguration language\"")),URL("http://strategoxt.org"),Extensions(Values(["config"])),Table("include/SpoofaxConfiguration.tbl"),StartSymbols([Sort("Start")])]),Builders("",[SemanticProvider("include/spoofaxconfiguration.ctree"),SemanticObserver(Strategy("editor-analyze")),Builder(String("\"Show abstract syntax (for selection)\""),Strategy("generate-aterm"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show Resolved Path(for selection)\""),Strategy("get-full-paths"),[OpenEditor,RealTime,Meta,Source])]),Colorer(" ",[ColorRule(Sort("DebugOption"),Attribute(ColorRGB("0","0","0"),NoColor,ITALIC)),ColorRule(Sort("STROutputMode"),Attribute(ColorRGB("0","0","0"),NoColor,ITALIC)),ColorRule(Sort("TemplateLangOption"),Attribute(ColorRGB("0","0","0"),NoColor,ITALIC))]),Colorer(" Default, token-based highlighting",[ColorRule(Token(TK_KEYWORD),Attribute(ColorRGB("255","69","0"),NoColor,NORMAL)),ColorRule(Token(TK_IDENTIFIER),Attribute(ColorRGB("0","0","255"),NoColor,ITALIC)),ColorRule(Token(TK_STRING),AttributeRef("blue")),ColorRule(Token(TK_NUMBER),AttributeRef("darkgreen")),ColorRule(Token(TK_VAR),Attribute(ColorRGB("255","0","100"),NoColor,ITALIC)),ColorRule(Token(TK_OPERATOR),Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorRule(Token(TK_LAYOUT),Attribute(ColorRGB("63","127","95"),NoColor,NORMAL))]),Colorer(" System colors",[ColorDef("darkred",Attribute(ColorRGB("128","0","0"),NoColor,NORMAL)),ColorDef("red",Attribute(ColorRGB("255","0","0"),NoColor,NORMAL)),ColorDef("darkgreen",Attribute(ColorRGB("0","128","0"),NoColor,NORMAL)),ColorDef("green",Attribute(ColorRGB("0","255","0"),NoColor,NORMAL)),ColorDef("darkblue",Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorDef("blue",Attribute(ColorRGB("0","0","255"),NoColor,NORMAL)),ColorDef("cyan",Attribute(ColorRGB("0","255","255"),NoColor,NORMAL)),ColorDef("magenta",Attribute(ColorRGB("255","0","255"),NoColor,NORMAL)),ColorDef("yellow",Attribute(ColorRGB("255","255","0"),NoColor,NORMAL)),ColorDef("white",Attribute(ColorRGB("255","255","255"),NoColor,NORMAL)),ColorDef("black",Attribute(ColorRGB("0","0","0"),NoColor,NORMAL)),ColorDef("gray",Attribute(ColorRGB("128","128","128"),NoColor,NORMAL)),ColorDef("grey",AttributeRef("gray")),ColorDef("orange",Attribute(ColorRGB("255","165","0"),NoColor,NORMAL)),ColorDef("pink",Attribute(ColorRGB("255","105","180"),NoColor,NORMAL)),ColorDef("brown",Attribute(ColorRGB("139","69","19"),NoColor,NORMAL)),ColorDef("default",Attribute(ColorDefault,NoColor,NORMAL))]),Folding(" Default folding definitions",[FoldRule(SortAndConstructor(Sort("Start"),Constructor("Configuration")),None),FoldRule(SortAndConstructor(Sort("ConfigSection"),Constructor("Includes")),None),FoldRule(SortAndConstructor(Sort("ConfigSection"),Constructor("SpxProjects")),None),FoldRule(SortAndConstructor(Sort("ConfigSection"),Constructor("Debug")),None),FoldRule(SortAndConstructor(Sort("ConfigSection"),Constructor("CodeGeneration")),None)]),References("",[ReferenceRule("_",Strategy("editor-resolve"))]),Language(" Syntax properties (static defaults)",[LineCommentPrefix(String("\"//\"")),BlockCommentDefs(BlockCommentDef(String("\"/*\""),"*",String("\"*/\""))),FenceDefs([FenceDef("[","]"),FenceDef("(",")"),FenceDef("{","}")]),IndentDefs([IndentDef(String("\"=\"")),IndentDef(String("\":\""))]),IdentifierLexical(String("\"[A-Za-z0-9_]+\""))])])