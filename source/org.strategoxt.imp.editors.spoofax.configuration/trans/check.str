module check

imports
  libstratego-lib
  include/SpoofaxConfiguration
  lib/editor-common.generated

rules
    
  // Reports an error if a property type is undefined.
  // This error is reported on the type name 'type'.
  constraint-error:
   SpxProjects(lst) -> <verify-project-references>lst
   
  constraint-error:
   Source(dir, includeoption) -> <verify-local-directories-exists>[dir]


  
rules  
  verify-local-directories-exists : [] -> [] 
  verify-local-directories-exists :[current | rest*] -> result 
  where 
  	not(?[])
  where 
  	result := <conc;flatten-list>(<verify-local-directory-exist>current , <verify-local-directories-exists>rest*)	
  	
  	
  verify-local-directory-exist : current -> result  
  where 
  	if (<is-dir-exist> current) then
		result := []
  	else
  		result := [(current, $[Direcotory "[current]" is not found.])]
	end
  	
rules  	
  
  verify-project-references : [] -> []
  
  verify-project-references : [current | rest*] -> result 
  where 
  	result := <conc;flatten-list>(<verify-project-reference>current , <verify-project-references>rest*)  

	verify-project-reference : current -> result
	where 
	?_{<id>};
	if not ( <eq>("" , <id>)) then
  	(	is-spx-config-exist
  		;result := []
	<+
  		result := [(current, $[Illegal project reference. spx.config file is not found in the following project : [current]])]
  	)
  	else
  		result := [(current, $[Illegal project reference. Following project [current] is not found in the current workspace])]
	end 
	
	
	is-dir-exist =  where(file-exists ; filemode ; isdir) 

	
	is-spx-config-exist  =
		where(
			<file-exists>$[[<id>]/spx.config]
		);
		where(
			spx-config-location := $[[<id>]/spx.config];
			rules (get-config-reference :+ current-project-ref ->spx-config-location)   
		) 
			
		 		 		