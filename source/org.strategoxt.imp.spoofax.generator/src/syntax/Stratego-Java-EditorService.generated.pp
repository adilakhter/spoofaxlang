[
   EmptyLine                                      -- KW["~\n"],
   EmptyLine                                      -- KW["~~\n"],
   PPTable                                        -- KW["pp-table"] KW[":"] _1,
   PrettyPrint                                    -- KW["pretty-print"] KW[":"] _1,
   Refactoring                                    -- KW["refactoring"] _1 KW[":"] _2 KW["="] _3 _4,
   Refactoring.1:iter-star                        -- _1,
   Refactoring.4:iter-star                        -- _1,
   SemanticObserver                               -- KW["observer"] KW[":"] _1,
   Builder                                        -- KW["builder"] KW[":"] _1 KW["="] _2 _3,
   Builder.3:iter-star                            -- _1,
   BuilderCaption                                 -- KW["builder"] KW["caption"] KW[":"] _1,
   OpenEditor                                     -- KW["(openeditor)"],
   RealTime                                       -- KW["(realtime)"],
   Persistent                                     -- KW["(persistent)"],
   Meta                                           -- KW["(meta)"],
   Cursor                                         -- KW["(cursor)"],
   Source                                         -- KW["(source)"],
   CompletionProposer                             -- KW["completion"] KW["proposer"] KW[":"] _1,
   IdentifierLexical                              -- KW["completion"] KW["lexical"] KW[":"] _1,
   IdentifierLexical                              -- KW["identifier"] KW["lexical"] KW[":"] _1,
   CompletionKeyword                              -- KW["completion"] KW["keyword"] KW[":"] _1 _2,
   CompletionTemplate                             -- KW["completion"] KW["template"] KW[":"] _1 _2 _3,
   CompletionTemplate.2:iter                      -- _1,
   CompletionTemplateWithSort                     -- KW["completion"] KW["template"] KW[":"] _1 KW["="] _2 _3 _4,
   CompletionTemplateWithSort.3:iter-star         -- _1,
   CompletionTemplateEx                           -- KW["completion"] KW["template"] _1 KW[":"] _2 _3 _4,
   CompletionTemplateEx.1:iter-star               -- _1,
   CompletionTemplateEx.3:iter-star               -- _1,
   CompletionTemplateEx.4:iter-star               -- _1,
   CompletionTrigger                              -- KW["completion"] KW["trigger"] KW[":"] _1 _2,
   CompletionTemplateEx                           -- KW["completion"] KW["template"] _1 KW[":"] _2 _3 _4,
   CompletionTemplateEx.1:iter-star               -- _1,
   CompletionTemplateEx.3:iter                    -- _1,
   CompletionTemplateEx.4:iter-star               -- _1,
   NoCompletionPrefix                             -- ,
   CompletionPrefix                               -- _1 KW["="],
   Placeholder                                    -- _1,
   Cursor                                         -- KW["(cursor)"],
   PlaceholderWithSort                            -- _1 _2 KW[">"],
   None                                           -- ,
   Disable                                        -- KW["(disabled)"],
   Disable                                        -- KW["(disable)"],
   Blank                                          -- KW["(blank)"],
   Linked                                         -- KW["(linked)"],
   ReferenceHoverRule                             -- KW["reference"] _1 KW[":"] _2 _3,
   ReferenceRule                                  -- KW["reference"] _1 KW[":"] _2,
   HoverRule                                      -- KW["hover"] _1 KW[":"] _2,
   OccurrenceRule                                 -- KW["occurrence"] _1 KW[":"] _2,
   ColorRuleAll                                   -- KW["environment"] _1 KW[":"] _2,
   ColorRule                                      -- _1 KW[":"] _2,
   ColorRuleAllNamed                              -- KW["environment"] _1 KW[":"] _2 KW["="] _3,
   ColorRuleNamed                                 -- _1 KW[":"] _2 KW["="] _3,
   Attribute                                      -- _1 _2 _3,
   AttributeRef                                   -- _1,
   Token                                          -- _1,
   Literal                                        -- KW["token"] _1,
   TK_IDENTIFIER                                  -- KW["identifier"],
   TK_NUMBER                                      -- KW["number"],
   TK_LAYOUT                                      -- KW["layout"],
   TK_STRING                                      -- KW["string"],
   TK_KEYWORD                                     -- KW["keyword"],
   TK_OPERATOR                                    -- KW["operator"],
   TK_VAR                                         -- KW["var"],
   TK_ERROR                                       -- KW["error"],
   TK_UNKNOWN                                     -- KW["unknown"],
   NORMAL                                         -- ,
   BOLD                                           -- KW["bold"],
   ITALIC                                         -- KW["italic"],
   BOLD_ITALIC                                    -- KW["bold"] KW["italic"],
   BOLD_ITALIC                                    -- KW["italic"] KW["bold"],
   ColorDefault                                   -- KW["_"],
   ColorRGB                                       -- _1 _2 _3,
   NoColor                                        -- ,
   ColorDef                                       -- _1 KW["="] _2,
   OutlineRule                                    -- _1,
   FoldRule                                       -- _1 _2,
   FoldRuleAll                                    -- KW["all"] _1 _2,
   Disable                                        -- KW["(disable)"],
   Disable                                        -- KW["(disabled)"],
   Folded                                         -- KW["(folded)"],
   None                                           -- ,
   SemanticProvider                               -- KW["provider"] _1,
   SemanticProvider                               -- KW["provider"] KW[":"] _1,
   OnSave                                         -- KW["on"] KW["save"] KW[":"] _1 _2,
   Strategy                                       -- _1,
   Attribute                                      -- KW["id"] KW["."] _1,
   None                                           -- ,
   Values                                         -- _1,
   Values.1:iter-star-sep                         -- _1 KW[","],
   LanguageName                                   -- KW["name"] KW[":"] _1,
   LanguageId                                     -- KW["id"] KW[":"] _1,
   Extensions                                     -- KW["extensions"] KW[":"] _1,
   Description                                    -- KW["description"] KW[":"] _1,
   Table                                          -- KW["table"] KW[":"] _1,
   TableProvider                                  -- KW["table"] KW["provider"] KW[":"] _1,
   StartSymbols                                   -- V  [H  [KW["start"] KW["symbols"] KW[":"]] _1],
   StartSymbols.1:iter-star                       -- _1,
   StartSymbols                                   -- KW["start"] KW["symbols"] KW[":"] _1,
   URL                                            -- KW["url"] KW[":"] _1,
   Extends                                        -- KW["extends"] KW[":"] _1,
   Aliases                                        -- KW["aliases"] KW[":"] _1,
   UnmanagedTablePrefix                           -- KW["unmanaged"] KW["table"] KW[":"] _1 KW["*"],
   Disambiguator                                  -- KW["disambiguator"] KW[":"] _1,
   LineCommentPrefix                              -- KW["line"] KW["comment"] KW[":"] _1,
   BlockCommentDefs                               -- KW["block"] KW["comment"] KW[":"] _1,
   FenceDefs                                      -- V  [H  [KW["fences"] KW[":"]] _1],
   FenceDefs.1:iter-star                          -- _1,
   IndentDefs                                     -- V  [H  [KW["indent"] KW["after"] KW[":"]] _1],
   IndentDefs.1:iter-star                         -- _1,
   IdentifierLexical                              -- KW["identifier"] KW["lexical"] KW[":"] _1,
   BlockCommentDef                                -- _1 _2 _3,
   BlockCommentDef                                -- _1 _2 _3,
   NoContinuation                                 -- ,
   FenceDef                                       -- _1 _2,
   IndentDef                                      -- _1,
   Sort                                           -- _1,
   ListSort                                       -- _1 KW["*"],
   String                                         -- _1,
   ConstructorOnly                                -- KW["_"] KW["."] _1,
   Constructor                                    -- _1,
   SortAndConstructor                             -- _1 KW["."] _2,
   Module                                         -- KW["module"] _1 _2 _3,
   Module.3:iter-star                             -- _1,
   Imports                                        -- V  [H  [KW["imports"]] _1],
   Imports.1:iter                                 -- _1,
   NoImports                                      -- ,
   Import                                         -- _1,
   ImportRenamed                                  -- _1 KW["["] _2 KW["]"],
   ConcatIds                                      -- _1,
   ConcatIds.1:iter-sep                           -- _1 KW["#"],
   PreEBlock                                      -- KW["{|"] _1 KW["|"] _2 KW["|}"],
   PreEBlock.1:iter-star                          -- _1,
   PostEBlock                                     -- KW["{|"] _1 KW["|"] _2 KW["|}"],
   PostEBlock.2:iter-star                         -- _1,
   InnerBlock                                     -- V  [V vs=2 [KW["{|"] _1] KW["|}"]],
   InnerBlock.1:iter-star                         -- _1,
   PrePostEBlock                                  -- KW["{|"] _1 KW["|"] _2 KW["|"] _3 KW["|}"],
   PrePostEBlock.1:iter-star                      -- _1,
   PrePostEBlock.3:iter-star                      -- _1,
   Assign                                         -- _1 KW["="] _2,
   AssignMul                                      -- _1 KW["*="] _2,
   AssignDiv                                      -- _1 KW["/="] _2,
   AssignRemain                                   -- _1 KW["%="] _2,
   AssignPlus                                     -- _1 KW["+="] _2,
   AssignMinus                                    -- _1 KW["-="] _2,
   AssignLeftShift                                -- _1 KW["<<="] _2,
   AssignRightShift                               -- _1 KW[">>="] _2,
   AssignURightShift                              -- _1 KW[">>>="] _2,
   AssignAnd                                      -- _1 KW["&="] _2,
   AssignExcOr                                    -- _1 KW["^="] _2,
   AssignOr                                       -- _1 KW["|="] _2,
   InstanceOf                                     -- _1 KW["instanceof"] _2,
   Mul                                            -- _1 KW["*"] _2,
   Div                                            -- _1 KW["/"] _2,
   Remain                                         -- _1 KW["%"] _2,
   Plus                                           -- _1 KW["+"] _2,
   Minus                                          -- _1 KW["-"] _2,
   LeftShift                                      -- _1 KW["<<"] _2,
   RightShift                                     -- _1 KW[">>"] _2,
   URightShift                                    -- _1 KW[">>>"] _2,
   Lt                                             -- _1 KW["<"] _2,
   Gt                                             -- _1 KW[">"] _2,
   LtEq                                           -- _1 KW["<="] _2,
   GtEq                                           -- _1 KW[">="] _2,
   Eq                                             -- _1 KW["=="] _2,
   NotEq                                          -- _1 KW["!="] _2,
   LazyAnd                                        -- _1 KW["&&"] _2,
   LazyOr                                         -- _1 KW["||"] _2,
   And                                            -- _1 KW["&"] _2,
   ExcOr                                          -- _1 KW["^"] _2,
   Or                                             -- _1 KW["|"] _2,
   Cond                                           -- _1 _2 _3,
   Plus                                           -- KW["+"] _1,
   Minus                                          -- KW["-"] _1,
   PreIncr                                        -- KW["++"] _1,
   PreDecr                                        -- KW["--"] _1,
   Complement                                     -- KW["~"] _1,
   Not                                            -- KW["!"] _1,
   CastPrim                                       -- KW["("] _1 KW[")"] _2,
   CastRef                                        -- KW["("] _1 KW[")"] _2,
   PostIncr                                       -- _1 KW["++"],
   PostDecr                                       -- _1 KW["--"],
   Invoke                                         -- _1 KW["("] _2 KW[")"],
   Invoke.2:iter-star-sep                         -- _1 KW[","],
   Method                                         -- _1,
   Method                                         -- _1 KW["."] _2 _3,
   Method.2:opt                                   -- _1,
   SuperMethod                                    -- KW["super"] KW["."] _1 _2,
   SuperMethod.1:opt                              -- _1,
   QSuperMethod                                   -- _1 KW["."] KW["super"] KW["."] _2 _3,
   QSuperMethod.2:opt                             -- _1,
   GenericMethod                                  -- _1 KW["."] _2 _3,
   ArrayAccess                                    -- _1 _2,
   Field                                          -- _1 KW["."] _2,
   SuperField                                     -- KW["super"] KW["."] _1,
   QSuperField                                    -- _1 KW["."] KW["super"] KW["."] _2,
   NewArray                                       -- KW["new"] _1 _2 _3,
   NewArray.2:iter                                -- _1,
   NewArray.3:iter-star                           -- _1,
   NewArray                                       -- KW["new"] _1 _2 _3,
   NewArray.2:iter                                -- _1,
   UnboundWld                                     -- _1 KW["<"] KW["?"] KW[">"],
   Dim                                            -- KW["["] _1 KW["]"],
   Dim                                            -- KW["["] KW["]"],
   NewInstance                                    -- KW["new"] _1 _2 KW["("] _3 KW[")"] _4,
   NewInstance.1:opt                              -- _1,
   NewInstance.3:iter-star-sep                    -- _1 KW[","],
   NewInstance.4:opt                              -- _1,
   QNewInstance                                   -- _1 KW["."] KW["new"] _2 _3 _4 KW["("] _5 KW[")"] _6,
   QNewInstance.2:opt                             -- _1,
   QNewInstance.4:opt                             -- _1,
   QNewInstance.5:iter-star-sep                   -- _1 KW[","],
   QNewInstance.6:opt                             -- _1,
   Lit                                            -- _1,
   Class                                          -- _1 KW["."] KW["class"],
   VoidClass                                      -- KW["void"] KW["."] KW["class"],
   This                                           -- KW["this"],
   QThis                                          -- _1 KW["."] KW["this"],
   PackageDec                                     -- _1 KW["package"] _2 KW[";"],
   PackageDec.1:iter-star                         -- _1,
   TypeImportDec                                  -- KW["import"] _1 KW[";"],
   TypeImportOnDemandDec                          -- KW["import"] _1 KW["."] KW["*"] KW[";"],
   StaticImportDec                                -- KW["import"] KW["static"] _1 KW["."] _2 KW[";"],
   StaticImportOnDemandDec                        -- KW["import"] KW["static"] _1 KW["."] KW["*"] KW[";"],
   AnnoDec                                        -- _1 KW["{"] _2 KW["}"],
   AnnoDec.2:iter-star                            -- _1,
   AnnoDecHead                                    -- _1 KW["@"] KW["interface"] _2,
   AnnoDecHead.1:iter-star                        -- _1,
   AnnoDecHead.1:iter-star.1:alt                  -- _1 _2,
   AnnoMethodDec                                  -- _1 _2 _3 KW["("] KW[")"] _4 KW[";"],
   AnnoMethodDec.1:iter-star                      -- _1,
   AnnoMethodDec.4:opt                            -- _1,
   Semicolon                                      -- KW[";"],
   DefaultVal                                     -- KW["default"] _1,
   AbstractMethodDec                              -- _1 _2 _3 _4 KW["("] _5 KW[")"] _6 KW[";"],
   AbstractMethodDec.1:iter-star                  -- _1,
   AbstractMethodDec.1:iter-star.1:alt            -- _1 _2,
   AbstractMethodDec.2:opt                        -- _1,
   AbstractMethodDec.5:iter-star-sep              -- _1 KW[","],
   AbstractMethodDec.6:opt                        -- _1,
   DeprAbstractMethodDec                          -- _1 _2 _3 _4 KW["("] _5 KW[")"] _6 _7 KW[";"],
   DeprAbstractMethodDec.1:iter-star              -- _1,
   DeprAbstractMethodDec.1:iter-star.1:alt        -- _1 _2,
   DeprAbstractMethodDec.2:opt                    -- _1,
   DeprAbstractMethodDec.5:iter-star-sep          -- _1 KW[","],
   DeprAbstractMethodDec.6:iter                   -- _1,
   DeprAbstractMethodDec.7:opt                    -- _1,
   ConstantDec                                    -- _1 _2 _3 KW[";"],
   ConstantDec.1:iter-star                        -- _1,
   ConstantDec.1:iter-star.1:alt                  -- _1 _2,
   ConstantDec.3:iter-sep                         -- _1 KW[","],
   InterfaceDec                                   -- _1 KW["{"] _2 KW["}"],
   InterfaceDec.2:iter-star                       -- _1,
   InterfaceDecHead                               -- _1 KW["interface"] _2 _3 _4,
   InterfaceDecHead.1:iter-star                   -- _1,
   InterfaceDecHead.1:iter-star.1:alt             -- _1 _2,
   InterfaceDecHead.3:opt                         -- _1,
   InterfaceDecHead.4:opt                         -- _1,
   ExtendsInterfaces                              -- V  [H  [KW["extends"]] _1],
   ExtendsInterfaces.1:iter-sep                   -- _1 KW[","],
   Semicolon                                      -- KW[";"],
   EnumDec                                        -- _1 _2,
   EnumDecHead                                    -- _1 KW["enum"] _2 _3,
   EnumDecHead.1:iter-star                        -- _1,
   EnumDecHead.1:iter-star.1:alt                  -- _1 _2,
   EnumDecHead.3:opt                              -- _1,
   EnumBody                                       -- KW["{"] _1 _2 KW["}"],
   EnumBody.1:iter-star-sep                       -- _1 KW[","],
   EnumBody.2:opt                                 -- _1,
   EnumBody                                       -- KW["{"] _1 KW[","] _2 KW["}"],
   EnumBody.1:iter-star-sep                       -- _1 KW[","],
   EnumBody.2:opt                                 -- _1,
   EnumConst                                      -- _1 _2 _3,
   EnumConst.2:opt                                -- _1,
   EnumConst.3:opt                                -- _1,
   EnumBodyDecs                                   -- V  [H  [KW[";"]] _1],
   EnumBodyDecs.1:iter-star                       -- _1,
   ConstrDec                                      -- _1 _2,
   ConstrDecHead                                  -- _1 _2 _3 KW["("] _4 KW[")"] _5,
   ConstrDecHead.1:iter-star                      -- _1,
   ConstrDecHead.1:iter-star.1:alt                -- _1 _2,
   ConstrDecHead.2:opt                            -- _1,
   ConstrDecHead.4:iter-star-sep                  -- _1 KW[","],
   ConstrDecHead.5:opt                            -- _1,
   ConstrBody                                     -- KW["{"] _1 _2 KW["}"],
   ConstrBody.1:opt                               -- _1,
   ConstrBody.2:iter-star                         -- _1,
   AltConstrInv                                   -- _1 KW["this"] KW["("] _2 KW[")"] KW[";"],
   AltConstrInv.1:opt                             -- _1,
   AltConstrInv.2:iter-star-sep                   -- _1 KW[","],
   SuperConstrInv                                 -- _1 KW["super"] KW["("] _2 KW[")"] KW[";"],
   SuperConstrInv.1:opt                           -- _1,
   SuperConstrInv.2:iter-star-sep                 -- _1 KW[","],
   QSuperConstrInv                                -- _1 KW["."] _2 KW["super"] KW["("] _3 KW[")"] KW[";"],
   QSuperConstrInv.2:opt                          -- _1,
   QSuperConstrInv.3:iter-star-sep                -- _1 KW[","],
   StaticInit                                     -- KW["static"] _1,
   InstanceInit                                   -- _1,
   Empty                                          -- KW[";"],
   Labeled                                        -- _1 KW[":"] _2,
   ExprStm                                        -- _1 KW[";"],
   If                                             -- KW["if"] KW["("] _1 KW[")"] _2,
   If                                             -- KW["if"] KW["("] _1 KW[")"] _2 KW["else"] _3,
   AssertStm                                      -- KW["assert"] _1 KW[";"],
   AssertStm                                      -- KW["assert"] _1 KW[":"] _2 KW[";"],
   Switch                                         -- KW["switch"] KW["("] _1 KW[")"] _2,
   SwitchBlock                                    -- KW["{"] _1 _2 KW["}"],
   SwitchBlock.1:iter-star                        -- _1,
   SwitchBlock.2:iter-star                        -- _1,
   SwitchGroup                                    -- _1 _2,
   SwitchGroup.1:iter                             -- _1,
   SwitchGroup.2:iter                             -- _1,
   Case                                           -- KW["case"] _1 KW[":"],
   Default                                        -- KW["default"] KW[":"],
   While                                          -- KW["while"] KW["("] _1 KW[")"] _2,
   DoWhile                                        -- KW["do"] _1 KW["while"] KW["("] _2 KW[")"] KW[";"],
   For                                            -- KW["for"] KW["("] _1 KW[";"] _2 KW[";"] _3 KW[")"] _4,
   For.2:opt                                      -- _1,
   For.3:iter-star-sep                            -- _1 KW[","],
   For                                            -- KW["for"] KW["("] _1 KW[";"] _2 KW[";"] _3 KW[")"] _4,
   For.1:iter-star-sep                            -- _1 KW[","],
   For.2:opt                                      -- _1,
   For.3:iter-star-sep                            -- _1 KW[","],
   ForEach                                        -- KW["for"] KW["("] _1 KW[":"] _2 KW[")"] _3,
   Break                                          -- KW["break"] _1 KW[";"],
   Break.1:opt                                    -- _1,
   Continue                                       -- KW["continue"] _1 KW[";"],
   Continue.1:opt                                 -- _1,
   Return                                         -- KW["return"] _1 KW[";"],
   Return.1:opt                                   -- _1,
   Throw                                          -- KW["throw"] _1 KW[";"],
   Synchronized                                   -- KW["synchronized"] KW["("] _1 KW[")"] _2,
   Try                                            -- KW["try"] _1 _2,
   Try.2:iter                                     -- _1,
   Try                                            -- KW["try"] _1 _2 KW["finally"] _3,
   Try.2:iter-star                                -- _1,
   Catch                                          -- KW["catch"] KW["("] _1 KW[")"] _2,
   LocalVarDecStm                                 -- _1 KW[";"],
   LocalVarDec                                    -- _1 _2 _3,
   LocalVarDec.1:iter-star                        -- _1,
   LocalVarDec.1:iter-star.1:alt                  -- _1 _2,
   LocalVarDec.3:iter-sep                         -- _1 KW[","],
   Block                                          -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   Block.1:iter-star                              -- _1,
   ClassDecStm                                    -- _1,
   MethodDec                                      -- _1 _2,
   MethodDecHead                                  -- _1 _2 _3 _4 KW["("] _5 KW[")"] _6,
   MethodDecHead.1:iter-star                      -- _1,
   MethodDecHead.1:iter-star.1:alt                -- _1 _2,
   MethodDecHead.2:opt                            -- _1,
   MethodDecHead.5:iter-star-sep                  -- _1 KW[","],
   MethodDecHead.6:opt                            -- _1,
   DeprMethodDecHead                              -- _1 _2 _3 _4 KW["("] _5 KW[")"] _6 _7,
   DeprMethodDecHead.1:iter-star                  -- _1,
   DeprMethodDecHead.1:iter-star.1:alt            -- _1 _2,
   DeprMethodDecHead.2:opt                        -- _1,
   DeprMethodDecHead.5:iter-star-sep              -- _1 KW[","],
   DeprMethodDecHead.6:iter                       -- _1,
   DeprMethodDecHead.7:opt                        -- _1,
   Void                                           -- KW["void"],
   Param                                          -- _1 _2 _3,
   Param.1:iter-star                              -- _1,
   Param.1:iter-star.1:alt                        -- _1 _2,
   VarArityParam                                  -- _1 _2 KW["..."] _3,
   VarArityParam.1:iter-star                      -- _1,
   VarArityParam.1:iter-star.1:alt                -- _1 _2,
   ThrowsDec                                      -- V  [H  [KW["throws"]] _1],
   ThrowsDec.1:iter-sep                           -- _1 KW[","],
   NoMethodBody                                   -- KW[";"],
   ArrayInit                                      -- KW["{"] _1 KW["}"],
   ArrayInit.1:iter-star-sep                      -- _1 KW[","],
   ArrayInit                                      -- KW["{"] _1 KW[","] KW["}"],
   ArrayInit.1:iter-star-sep                      -- _1 KW[","],
   Anno                                           -- KW["@"] _1 KW["("] _2 KW[")"],
   Anno.2:iter-star-sep                           -- _1 KW[","],
   SingleElemAnno                                 -- KW["@"] _1 KW["("] _2 KW[")"],
   MarkerAnno                                     -- KW["@"] _1,
   ElemValPair                                    -- _1 KW["="] _2,
   ElemValArrayInit                               -- KW["{"] _1 KW["}"],
   ElemValArrayInit.1:iter-star-sep               -- _1 KW[","],
   ElemValArrayInit                               -- KW["{"] _1 KW[","] KW["}"],
   ElemValArrayInit.1:iter-star-sep               -- _1 KW[","],
   FieldDec                                       -- _1 _2 _3 KW[";"],
   FieldDec.1:iter-star                           -- _1,
   FieldDec.1:iter-star.1:alt                     -- _1 _2,
   FieldDec.3:iter-sep                            -- _1 KW[","],
   VarDec                                         -- _1,
   VarDec                                         -- _1 KW["="] _2,
   ArrayVarDecId                                  -- _1 _2,
   ArrayVarDecId.2:iter                           -- _1,
   Dim                                            -- KW["["] KW["]"],
   ClassDec                                       -- _1 _2,
   ClassBody                                      -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   ClassBody.1:iter-star                          -- _1,
   ClassDecHead                                   -- _1 KW["class"] _2 _3 _4 _5,
   ClassDecHead.1:iter-star                       -- _1,
   ClassDecHead.1:iter-star.1:alt                 -- _1 _2,
   ClassDecHead.3:opt                             -- _1,
   ClassDecHead.4:opt                             -- _1,
   ClassDecHead.5:opt                             -- _1,
   SuperDec                                       -- KW["extends"] _1,
   ImplementsDec                                  -- V  [H  [KW["implements"]] _1],
   ImplementsDec.1:iter-sep                       -- _1 KW[","],
   Semicolon                                      -- KW[";"],
   Semicolon                                      -- KW[";"],
   CompilationUnit                                -- _1 _2 _3,
   CompilationUnit.1:opt                          -- _1,
   CompilationUnit.2:iter-star                    -- _1,
   CompilationUnit.3:iter                         -- _1,
   PackageName                                    -- _1,
   PackageName.1:iter-sep                         -- _1 KW["."],
   AmbName                                        -- _1,
   AmbName                                        -- _1 KW["."] _2,
   TypeName                                       -- _1,
   TypeName                                       -- _1 KW["."] _2,
   ExprName                                       -- _1,
   ExprName                                       -- _1 KW["."] _2,
   MethodName                                     -- _1,
   MethodName                                     -- _1 KW["."] _2,
   PackageOrTypeName                              -- _1,
   PackageOrTypeName                              -- _1 KW["."] _2,
   TypeArgs                                       -- KW["<"] _1 KW[">"],
   TypeArgs.1:iter-sep                            -- _1 KW[","],
   Wildcard                                       -- KW["?"] _1,
   Wildcard.1:opt                                 -- _1,
   WildcardUpperBound                             -- KW["extends"] _1,
   WildcardLowerBound                             -- KW["super"] _1,
   TypeParam                                      -- _1 _2,
   TypeParam.2:opt                                -- _1,
   TypeBound                                      -- V  [H  [KW["extends"]] _1],
   TypeBound.1:iter-sep                           -- _1 KW["&"],
   TypeParams                                     -- KW["<"] _1 KW[">"],
   TypeParams.1:iter-sep                          -- _1 KW[","],
   ClassOrInterfaceType                           -- _1 _2,
   ClassOrInterfaceType.2:opt                     -- _1,
   ClassType                                      -- _1 _2,
   ClassType.2:opt                                -- _1,
   InterfaceType                                  -- _1 _2,
   InterfaceType.2:opt                            -- _1,
   Member                                         -- _1 _2 KW["."] _3,
   TypeVar                                        -- _1,
   ArrayType                                      -- _1 KW["["] KW["]"],
   Boolean                                        -- KW["boolean"],
   Byte                                           -- KW["byte"],
   Short                                          -- KW["short"],
   Int                                            -- KW["int"],
   Long                                           -- KW["long"],
   Char                                           -- KW["char"],
   Float                                          -- KW["float"],
   Double                                         -- KW["double"],
   Null                                           -- KW["null"],
   Bool                                           -- _1,
   True                                           -- KW["true"],
   False                                          -- KW["false"],
   Float                                          -- _1,
   Float                                          -- _1,
   Deci                                           -- _1,
   Hexa                                           -- _1,
   Octa                                           -- _1,
   Public                                         -- KW["public"],
   Private                                        -- KW["private"],
   Protected                                      -- KW["protected"],
   Abstract                                       -- KW["abstract"],
   Final                                          -- KW["final"],
   Static                                         -- KW["static"],
   Native                                         -- KW["native"],
   Transient                                      -- KW["transient"],
   Volatile                                       -- KW["volatile"],
   Synchronized                                   -- KW["synchronized"],
   StrictFP                                       -- KW["strictfp"],
   Id                                             -- _1,
   ToMetaExpr                                     -- KW["e"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:expr"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["expr"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["var-init"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:bstm"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["bstm"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaListExpr                                 -- KW["java:bstm*"] KW["|["] _1 KW["]|"],
   ToMetaListExpr.1:iter-star                     -- _1,
   ToMetaListExpr                                 -- KW["bstm*"] KW["|["] _1 KW["]|"],
   ToMetaListExpr.1:iter-star                     -- _1,
   ToMetaExpr                                     -- KW["java:block-stm"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["block-stm"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaListExpr                                 -- KW["java:block-stm*"] KW["|["] _1 KW["]|"],
   ToMetaListExpr.1:iter-star                     -- _1,
   ToMetaListExpr                                 -- KW["block-stm*"] KW["|["] _1 KW["]|"],
   ToMetaListExpr.1:iter-star                     -- _1,
   ToMetaExpr                                     -- KW["java:stm"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["stm"] KW["|["] _1 KW["]|"],
   ToMetaListExpr                                 -- KW["switch-group"] KW["|["] _1 KW["]|"],
   ToMetaListExpr                                 -- KW["java:switch-group"] KW["|["] _1 KW["]|"],
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~bstm:"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   FromMetaExpr                                   -- KW["~bstm*:"] _1,
   FromMetaExpr                                   -- KW["~stm:"] _1,
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   FromMetaExpr                                   -- KW["~switch-group*:"] _1,
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~switch-group:"] _1,
   ToMetaExpr                                     -- KW["java:lvdec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["lvdec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:vdec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["vdec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["t"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["ty"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:type"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["type"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~type:"] _1,
   ToMetaExpr                                     -- KW["ambname"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["ename"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["fname"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["tname"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["pkgtname"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["mod"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["anno"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["param"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:param"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["param*"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star-sep                     -- _1 KW[","],
   ToMetaExpr                                     -- KW["java:param*"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star-sep                     -- _1 KW[","],
   ToMetaExpr                                     -- KW["java:formal-param"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["formal-param"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:formal-param*"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star-sep                     -- _1 KW[","],
   ToMetaExpr                                     -- KW["formal-param*"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star-sep                     -- _1 KW[","],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star-sep                     -- _1 KW[","],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star-sep                     -- _1 KW[","],
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   ToMetaExpr                                     -- KW["java:package-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["package-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:package-dec?"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:opt                               -- _1,
   ToMetaExpr                                     -- KW["package-dec?"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:opt                               -- _1,
   FromMetaExpr                                   -- KW["~package-dec:"] _1,
   FromMetaExpr                                   -- KW["~package-dec?:"] _1,
   ToMetaExpr                                     -- KW["java:import-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["import-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaListExpr                                 -- KW["java:import-dec*"] KW["|["] _1 KW["]|"],
   ToMetaListExpr.1:iter-star                     -- _1,
   ToMetaListExpr                                 -- KW["import-dec*"] KW["|["] _1 KW["]|"],
   ToMetaListExpr.1:iter-star                     -- _1,
   FromMetaExpr                                   -- KW["~import-dec:"] _1,
   FromMetaExpr                                   -- KW["~import-dec*:"] _1,
   ToMetaExpr                                     -- KW["e"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:expr"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["expr"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:compilation-unit"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["compilation-unit"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:importdecl"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["importdecl"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:type-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["type-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:class-body-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["class-body-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:interface-member-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["interface-member-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:constant-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["constant-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:class-body-dec*"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star                         -- _1,
   ToMetaExpr                                     -- KW["class-body-dec*"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star                         -- _1,
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star                         -- _1,
   ToMetaListExpr                                 -- V  [V vs=2 [KW["|["] _1] KW["]|"]],
   ToMetaListExpr.1:iter-star                     -- _1,
   ToMetaExpr                                     -- KW["java:stm"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["stm"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:imember-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["imember-dec"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["java:imember-dec*"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star                         -- _1,
   ToMetaExpr                                     -- KW["imember-dec*"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star                         -- _1,
   ToMetaExpr                                     -- KW["java"] KW["|["] _1 KW["]|"],
   ToMetaExpr.1:iter-star                         -- _1,
   ToMetaExpr                                     -- V  [V vs=2 [KW["|["] _1] KW["]|"]],
   ToMetaExpr.1:iter-star                         -- _1,
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~name:"] _1,
   FromMetaExpr                                   -- KW["~*:"] _1,
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~id:"] _1,
   FromMetaExpr                                   -- KW["~idd:"] _1 KW[":"],
   FromMetaExpr                                   -- KW["~x:"] _1,
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~e:"] _1,
   FromMetaExpr                                   -- KW["~expr:"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   FromMetaExpr                                   -- KW["~"] _1,
   FromMetaExpr                                   -- KW["~*"] _1,
   FromMetaExpr                                   -- KW["~i:"] _1,
   FromMetaExpr                                   -- KW["~deci:"] _1,
   FromMetaExpr                                   -- KW["~hexa:"] _1,
   FromMetaExpr                                   -- KW["~octa:"] _1,
   FromMetaExpr                                   -- KW["~float:"] _1,
   FromMetaExpr                                   -- KW["~string:"] _1,
   FromMetaExpr                                   -- KW["~char:"] _1,
   OverlayNoArgs                                  -- _1 KW["="] _2,
   Overlay                                        -- _1 KW["("] _2 KW[")"] KW["="] _3,
   Overlay.2:iter-star-sep                        -- _1 KW[","],
   DynRuleScope                                   -- KW["{|"] _1 KW[":"] _2 KW["|}"],
   ScopeLabels                                    -- KW["~"] _1,
   GenDynRules                                    -- KW["rules"] KW["("] _1 KW[")"],
   GenDynRules.1:iter-star                        -- _1,
   AddScopeLabel                                  -- _1 KW["+"] _2,
   UndefineDynRule                                -- _1 KW[":-"] _2,
   SetDynRule                                     -- _1 KW[":"] _2,
   AddDynRule                                     -- _1 KW[":+"] _2,
   SetDynRuleMatch                                -- _1 KW[":"] _2,
   DynRuleAssign                                  -- _1 KW[":="] _2,
   DynRuleAssignAdd                               -- _1 KW[":+="] _2,
   SetDynRuleDepends                              -- _1 KW[":"] _2 KW["depends"] KW["on"] _3,
   LabeledDynRuleId                               -- _1 KW["."] _2,
   AddLabelDynRuleId                              -- _1 KW["+"] _2,
   DynRuleId                                      -- _1,
   LabeledDynRuleScopeId                          -- _1 KW["."] _2,
   DynRuleScopeId                                 -- _1,
   RDecNoArgs                                     -- _1,
   RDec                                           -- _1 KW["("] _2 KW[")"],
   RDec.2:iter-star-sep                           -- _1 KW[","],
   RDecT                                          -- _1 KW["("] _2 KW["|"] _3 KW[")"],
   RDecT.2:iter-star-sep                          -- _1 KW[","],
   RDecT.3:iter-star-sep                          -- _1 KW[","],
   RuleNames                                      -- KW["~"] _1,
   DynRuleIntersectFix                            -- KW["/"] _1 KW["\\*"] _2,
   DynRuleIntersect                               -- _1 KW["/"] _2 KW["\\"] _3,
   DynRuleUnion                                   -- _1 KW["\\"] _2 KW["/"] _3,
   DynRuleIntersectUnion                          -- _1 KW["/"] _2 KW["\\"] _3 KW["/"] _4,
   RDefNoArgs                                     -- _1 KW[":"] _2,
   AnnoDef                                        -- _1 _2,
   AnnoDef.1:iter                                 -- _1,
   RDef                                           -- _1 KW["("] _2 KW[")"] KW[":"] _3,
   RDef.2:iter-star-sep                           -- _1 KW[","],
   RDefT                                          -- _1 KW["("] _2 KW["|"] _3 KW[")"] KW[":"] _4,
   RDefT.2:iter-star-sep                          -- _1 KW[","],
   RDefT.3:iter-star-sep                          -- _1 KW[","],
   RuleNoCond                                     -- _1 KW["->"] _2,
   Rule                                           -- _1 KW["->"] _2 KW["where"] _3,
   Rule                                           -- _1 KW["->"] _2 _3,
   Rule.3:iter                                    -- _1,
   WhereClause                                    -- KW["where"] _1,
   WithClause                                     -- KW["with"] _1,
   SDefNoArgs                                     -- _1 KW["="] _2,
   SDef                                           -- _1 KW["("] _2 KW[")"] KW["="] _3,
   SDef.2:iter-star-sep                           -- _1 KW[","],
   DefaultVarDec                                  -- _1,
   Call                                           -- _1 KW["("] _2 KW[")"],
   Call.2:iter-star-sep                           -- _1 KW[","],
   ScopeDefault                                   -- KW["{"] _1 KW["}"],
   BA                                             -- _1 _2,
   LChoice                                        -- _1 KW["<+"] _2,
   Rec                                            -- KW["rec"] _1 KW["("] _2 KW[")"],
   Not                                            -- KW["not"] KW["("] _1 KW[")"],
   Where                                          -- KW["where"] KW["("] _1 KW[")"],
   With                                           -- KW["with"] KW["("] _1 KW[")"],
   Test                                           -- KW["test"] KW["("] _1 KW[")"],
   PrimNoArgs                                     -- KW["prim"] KW["("] _1 KW[")"],
   Prim                                           -- KW["prim"] KW["("] _1 KW[","] _2 KW[")"],
   Prim.2:iter-star-sep                           -- _1 KW[","],
   StrCong                                        -- _1,
   IntCong                                        -- _1,
   RealCong                                       -- _1,
   CharCong                                       -- _1,
   CongQ                                          -- _1 KW["("] _2 KW[")"],
   CongQ.2:iter-star-sep                          -- _1 KW[","],
   AnnoCong                                       -- _1 _2,
   StrategyCurly                                  -- KW["{"] _1 KW["}"],
   EmptyTupleCong                                 -- KW["("] KW[")"],
   TupleCong                                      -- KW["("] _1 KW[","] _2 KW[")"],
   TupleCong.2:iter-sep                           -- _1 KW[","],
   ListCongNoTail                                 -- KW["["] _1 KW["]"],
   ListCongNoTail.1:iter-star-sep                 -- _1 KW[","],
   ListCong                                       -- KW["["] _1 KW["|"] _2 KW["]"],
   ListCong.1:iter-star-sep                       -- _1 KW[","],
   ExplodeCong                                    -- _1 KW["#"] _2,
   CallNoArgs                                     -- _1,
   LRule                                          -- KW["\\"] _1 KW["\\"],
   SRule                                          -- KW["("] _1 KW[")"],
   Choice                                         -- _1 KW["+"] _2,
   RChoice                                        -- _1 KW["+>"] _2,
   ProceedNoArgs                                  -- KW["proceed"],
   Proceed                                        -- KW["proceed"] KW["("] _1 KW[")"],
   Proceed.1:iter-sep                             -- _1 KW[","],
   CondChoice                                     -- KW["if"] _1 KW["then"] _2 KW["else"] _3 KW["end"],
   IfThen                                         -- KW["if"] _1 KW["then"] _2 KW["end"],
   SwitchChoiceNoOtherwise                        -- KW["switch"] _1 _2 KW["end"],
   SwitchChoiceNoOtherwise.2:iter-star            -- _1,
   SwitchChoice                                   -- KW["switch"] _1 _2 KW["otherwise"] KW[":"] _3 KW["end"],
   SwitchChoice.2:iter-star                       -- _1,
   SwitchCase                                     -- KW["case"] _1 KW[":"] _2,
   AM                                             -- _1 KW["=>"] _2,
   Assign                                         -- _1 KW[":="] _2,
   ListVar                                        -- _1,
   Var                                            -- _1,
   BuildDefaultPT                                 -- KW["_"] _1,
   BuildDefault                                   -- KW["_"] _1,
   Char                                           -- _1,
   AnnoList                                       -- _1 KW["{"] _2 KW["}"],
   AnnoList.2:iter-star-sep                       -- _1 KW[","],
   NoAnnoList                                     -- _1,
   App                                            -- KW["<"] _1 KW[">"] _2,
   App                                            -- KW["<"] _1 KW[">"] _2,
   RootApp                                        -- _1,
   RootApp                                        -- _1,
   Tuple                                          -- KW["("] _1 KW[")"],
   Tuple.1:iter-star-sep                          -- _1 KW[","],
   List                                           -- KW["["] _1 KW["]"],
   List.1:iter-star-sep                           -- _1 KW[","],
   ListTail                                       -- KW["["] _1 KW["|"] _2 KW["]"],
   ListTail.1:iter-star-sep                       -- _1 KW[","],
   SortList                                       -- KW["["] _1 KW["]"],
   SortList.1:iter-star-sep                       -- _1 KW[","],
   SortListTl                                     -- KW["["] _1 KW["|"] _2 KW["]"],
   SortListTl.1:iter-star-sep                     -- _1 KW[","],
   SortTuple                                      -- KW["("] _1 KW[")"],
   SortTuple.1:iter-star-sep                      -- _1 KW[","],
   Star                                           -- KW["*"],
   StarStar                                       -- KW["**"],
   Sorts                                          -- V  [H  [KW["sorts"]] _1],
   Sorts.1:iter-star                              -- _1,
   Constructors                                   -- V  [H  [KW["constructors"]] _1],
   Constructors.1:iter-star                       -- _1,
   SortVar                                        -- _1,
   SortNoArgs                                     -- _1,
   Sort                                           -- _1 KW["("] _2 KW[")"],
   Sort.2:iter-star-sep                           -- _1 KW[","],
   OpDecl                                         -- _1 KW[":"] _2,
   OpDeclQ                                        -- _1 KW[":"] _2,
   OpDeclInj                                      -- KW[":"] _1,
   ExtOpDecl                                      -- KW["external"] _1 KW[":"] _2,
   ExtOpDeclQ                                     -- KW["external"] _1 KW[":"] _2,
   ExtOpDeclInj                                   -- KW["external"] KW[":"] _1,
   ConstType                                      -- _1,
   FunType                                        -- _1 KW["->"] _2,
   FunType.1:iter-sep                             -- _1 KW["*"],
   Var                                            -- _1,
   Wld                                            -- KW["_"],
   Int                                            -- _1,
   Real                                           -- _1,
   Str                                            -- _1,
   Op                                             -- _1 KW["("] _2 KW[")"],
   Op.2:iter-star-sep                             -- _1 KW[","],
   OpQ                                            -- _1 KW["("] _2 KW[")"],
   OpQ.2:iter-star-sep                            -- _1 KW[","],
   Explode                                        -- _1 KW["#"] KW["("] _2 KW[")"],
   Anno                                           -- _1 KW["{^"] _2 KW["}"],
   As                                             -- _1 KW["@"] _2,
   As                                             -- _1 KW["@"] _2,
   SVar                                           -- _1,
   Let                                            -- KW["let"] _1 KW["in"] _2 KW["end"],
   Let.1:iter-star                                -- _1,
   CallT                                          -- _1 KW["("] _2 KW["|"] _3 KW[")"],
   CallT.2:iter-star-sep                          -- _1 KW[","],
   CallT.3:iter-star-sep                          -- _1 KW[","],
   CallDynamic                                    -- KW["call"] KW["("] _1 KW["|"] _2 KW["|"] _3 KW[")"],
   CallDynamic.2:iter-star-sep                    -- _1 KW[","],
   CallDynamic.3:iter-star-sep                    -- _1 KW[","],
   SDefT                                          -- _1 KW["("] _2 KW["|"] _3 KW[")"] KW["="] _4,
   SDefT.2:iter-star-sep                          -- _1 KW[","],
   SDefT.3:iter-star-sep                          -- _1 KW[","],
   AnnoDef                                        -- _1 _2,
   AnnoDef.1:iter                                 -- _1,
   ExtSDefInl                                     -- KW["external"] _1 KW["("] _2 KW["|"] _3 KW[")"] KW["="] _4,
   ExtSDefInl.2:iter-star-sep                     -- _1 KW[","],
   ExtSDefInl.3:iter-star-sep                     -- _1 KW[","],
   ExtSDef                                        -- KW["external"] _1 KW["("] _2 KW["|"] _3 KW[")"],
   ExtSDef.2:iter-star-sep                        -- _1 KW[","],
   ExtSDef.3:iter-star-sep                        -- _1 KW[","],
   ExtSDef                                        -- KW["external"] _1 KW["("] _2 KW["|"] _3 KW[")"],
   ExtSDef.2:iter-star-sep                        -- _1 KW[","],
   ExtSDef.3:iter-star-sep                        -- _1 KW[","],
   Extend                                         -- KW["extend"],
   Override                                       -- KW["override"],
   Internal                                       -- KW["internal"],
   VarDec                                         -- _1 KW[":"] _2,
   ParenStrat                                     -- KW["("] _1 KW[")"],
   Fail                                           -- KW["fail"],
   Id                                             -- KW["id"],
   ProceedT                                       -- KW["proceed"] KW["("] _1 KW["|"] _2 KW[")"],
   ProceedT.1:iter-star-sep                       -- _1 KW[","],
   ProceedT.2:iter-star-sep                       -- _1 KW[","],
   ProceedNoArgs                                  -- KW["proceed"],
   Match                                          -- KW["?"] _1,
   Build                                          -- KW["!"] _1,
   Scope                                          -- KW["{"] _1 KW[":"] _2 KW["}"],
   Scope.1:iter-star-sep                          -- _1 KW[","],
   Seq                                            -- _1 KW[";"] _2,
   GuardedLChoice                                 -- _1 KW["<"] _2 KW["+"] _3,
   PrimT                                          -- KW["prim"] KW["("] _1 KW[","] _2 KW["|"] _3 KW[")"],
   PrimT.2:iter-star-sep                          -- _1 KW[","],
   PrimT.3:iter-star-sep                          -- _1 KW[","],
   Some                                           -- KW["some"] KW["("] _1 KW[")"],
   One                                            -- KW["one"] KW["("] _1 KW[")"],
   All                                            -- KW["all"] KW["("] _1 KW[")"],
   ImportTerm                                     -- KW["import-term"] KW["("] _1 KW[")"],
   Module                                         -- KW["module"] _1 _2,
   Module.2:iter-star                             -- _1,
   Specification                                  -- V  [H  [KW["specification"]] _1],
   Specification.1:iter-star                      -- _1,
   Imports                                        -- V  [H  [KW["imports"]] _1],
   Imports.1:iter-star                            -- _1,
   Strategies                                     -- V  [H  [KW["strategies"]] _1],
   Strategies.1:iter-star                         -- _1,
   Signature                                      -- V  [H  [KW["signature"]] _1],
   Signature.1:iter-star                          -- _1,
   Import                                         -- _1,
   Rules                                          -- V  [H  [KW["rules"]] _1],
   Rules.1:iter-star                              -- _1,
   Overlays                                       -- V  [H  [KW["overlays"]] _1],
   Overlays.1:iter-star                           -- _1,
   ToMetaExpr                                     -- KW["descriptor"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["descriptor"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["descriptor"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["descriptor"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["descriptor"] KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   ToMetaExpr                                     -- KW["|["] _1 KW["]|"],
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- _1,
   FromMetaExpr                                   -- KW["~sort:"] _1,
   FromMetaExpr.1:parameterized-sort              -- _1 _2,
   FromMetaExpr.1:parameterized-sort.1:"Term"     -- ,
   App                                            -- KW["<"] _1 KW[">"] _2,
   App.1:parameterized-sort                       -- _1 _2,
   App.1:parameterized-sort.1:"Strategy"          -- ,
   App.2:parameterized-sort                       -- _1 _2,
   App.2:parameterized-sort.1:"Term"              -- ,
   RootApp                                        -- _1,
   RootApp.1:parameterized-sort                   -- _1 _2,
   RootApp.1:parameterized-sort.1:"StrategyAngle" -- 
]