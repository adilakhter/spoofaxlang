/**
 * Support for implementing tools that have multiple inputs and outputs.
 *
 * @author Martin Bravenboer <martin@cs.uu.nl>
 */
module sdf2imp/lib/multi-options // dryad/lib-ext/multi-options

rules

  /**
   * Handles a command-line option that allows multiple values.
   *
   * This strategy is similar to ArgOption, but allows multiple
   * values. e.g. -i A.java B.java. The values are not allowed to
   * start with a -, since the - distinguishes values from option 
   * flags.
   *
   * Usage is identical to ArgOption. The handle-value will get
   * a list of values.
   *
   * @type  handle-value  List(String) -> _
   * @type  is-flag       String ->?
   */
  MultiArgOption(is-flag, handle-value, usage) :
    [flag | options] -> [() | rest]
    where
      <is-flag> flag

      ; let splitter =
              split-fetch-keep(where(explode-string => ['-' | _]))
              ; \ (args, next-opt, tail) -> (args, [next-opt | tail]) \
              <+ !(<id>, [])

         in <splitter> options => (args, rest)
          ; <handle-value> args
        end

  MultiArgOption(is-flag, label, usage) =
    "register-usage-info"
    ; register-usage(usage)
