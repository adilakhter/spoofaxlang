package org.strategoxt.imp.spoofax.generator;

import org.strategoxt.stratego_lib.*;
import org.strategoxt.stratego_lib.*;
import org.strategoxt.stratego_sglr.*;
import org.strategoxt.stratego_gpp.*;
import org.strategoxt.stratego_xtc.*;
import org.strategoxt.stratego_aterm.*;
import org.strategoxt.stratego_rtg.*;
import org.strategoxt.stratego_sdf.*;
import org.strategoxt.stratego_tool_doc.*;
import org.strategoxt.java_front.*;
import org.strategoxt.lang.*;
import org.spoofax.interpreter.terms.*;
import static org.strategoxt.lang.Term.*;
import org.spoofax.interpreter.library.AbstractPrimitive;
import java.util.ArrayList;
import java.lang.ref.WeakReference;

@SuppressWarnings("unused") public class InteropRegisterer extends org.strategoxt.lang.InteropRegisterer 
{ 
  @Override public void register(org.spoofax.interpreter.core.IContext context, Context compiledContext)
  { 
    register(context, compiledContext, context.getVarScope());
  }

  @Override public void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader)
  { 
    registerLazy(context, compiledContext, classLoader, context.getVarScope());
  }

  private void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope)
  { 
    register7(context, compiledContext, varScope);
    varScope.addSVar("MAX__TINY__LIST__PARTS__COMMAS_0_0", new InteropSDefT($M$A$X__$T$I$N$Y__$L$I$S$T__$P$A$R$T$S__$C$O$M$M$A$S_0_0.instance, context));
    varScope.addSVar("conc_prod_1_0", new InteropSDefT(conc_prod_1_0.instance, context));
    varScope.addSVar("iter_inj_prod_1_0", new InteropSDefT(iter_inj_prod_1_0.instance, context));
    varScope.addSVar("af_iter_inj_2_0", new InteropSDefT(af_iter_inj_2_0.instance, context));
    varScope.addSVar("af_conc_4_0", new InteropSDefT(af_conc_4_0.instance, context));
    varScope.addSVar("flatlit_1_0", new InteropSDefT(flatlit_1_0.instance, context));
    varScope.addSVar("white_1_0", new InteropSDefT(white_1_0.instance, context));
    varScope.addSVar("start_4_0", new InteropSDefT(start_4_0.instance, context));
    varScope.addSVar("CfLayout_1_0", new InteropSDefT($Cf$Layout_1_0.instance, context));
    varScope.addSVar("ConcCfLayout_2_0", new InteropSDefT($Conc$Cf$Layout_2_0.instance, context));
    varScope.addSVar("NoCfLayout_0_0", new InteropSDefT($No$Cf$Layout_0_0.instance, context));
    varScope.addSVar("CfOptLayout_1_0", new InteropSDefT($Cf$Opt$Layout_1_0.instance, context));
    varScope.addSVar("Space_0_0", new InteropSDefT($Space_0_0.instance, context));
    varScope.addSVar("NewLine_0_0", new InteropSDefT($New$Line_0_0.instance, context));
    varScope.addSVar("OptNewLine_0_0", new InteropSDefT($Opt$New$Line_0_0.instance, context));
    varScope.addSVar("tname__ASTNODE_0_0", new InteropSDefT(tname__$A$S$T$N$O$D$E_0_0.instance, context));
    varScope.addSVar("tname__VISITOR_0_0", new InteropSDefT(tname__$V$I$S$I$T$O$R_0_0.instance, context));
    varScope.addSVar("tname__OUTLINERBASE_0_0", new InteropSDefT(tname__$O$U$T$L$I$N$E$R$B$A$S$E_0_0.instance, context));
    varScope.addSVar("tname__FOLDINGBASE_0_0", new InteropSDefT(tname__$F$O$L$D$I$N$G$B$A$S$E_0_0.instance, context));
    varScope.addSVar("tname__ITOKEN_0_0", new InteropSDefT(tname__$I$T$O$K$E$N_0_0.instance, context));
    varScope.addSVar("innermost_scope_SourcePathName_1_0", new InteropSDefT(innermost_scope_$Source$Path$Name_1_0.instance, context));
    varScope.addSVar("DYNAMIC__CALLS_0_0", new InteropSDefT($D$Y$N$A$M$I$C__$C$A$L$L$S_0_0.instance, context));
    varScope.addSVar("undefine_SourcePathName_0_1", new InteropSDefT(undefine_$Source$Path$Name_0_1.instance, context));
    varScope.addSVar("throw_SourcePathName_1_1", new InteropSDefT(throw_$Source$Path$Name_1_1.instance, context));
    varScope.addSVar("continue_to_label_SourcePathName_0_1", new InteropSDefT(continue_to_label_$Source$Path$Name_0_1.instance, context));
    varScope.addSVar("continue_SourcePathName_0_0", new InteropSDefT(continue_$Source$Path$Name_0_0.instance, context));
    varScope.addSVar("break_bp_SourcePathName_0_0", new InteropSDefT(break_bp_$Source$Path$Name_0_0.instance, context));
    varScope.addSVar("break_to_label_SourcePathName_0_1", new InteropSDefT(break_to_label_$Source$Path$Name_0_1.instance, context));
    varScope.addSVar("break_SourcePathName_0_0", new InteropSDefT(break_$Source$Path$Name_0_0.instance, context));
    varScope.addSVar("all_keys_SourcePathName_0_0", new InteropSDefT(all_keys_$Source$Path$Name_0_0.instance, context));
    varScope.addSVar("bigfold_SourcePathName_1_0", new InteropSDefT(bigfold_$Source$Path$Name_1_0.instance, context));
    varScope.addSVar("fold_SourcePathName_1_0", new InteropSDefT(fold_$Source$Path$Name_1_0.instance, context));
    varScope.addSVar("bigchain_SourcePathName_0_0", new InteropSDefT(bigchain_$Source$Path$Name_0_0.instance, context));
    varScope.addSVar("chain_SourcePathName_0_0", new InteropSDefT(chain_$Source$Path$Name_0_0.instance, context));
    varScope.addSVar("bigbagof_SourcePathName_0_0", new InteropSDefT(bigbagof_$Source$Path$Name_0_0.instance, context));
    varScope.addSVar("once_SourcePathName_0_0", new InteropSDefT(once_$Source$Path$Name_0_0.instance, context));
    varScope.addSVar("reverse_bagof_SourcePathName_1_0", new InteropSDefT(reverse_bagof_$Source$Path$Name_1_0.instance, context));
    varScope.addSVar("bagof_SourcePathName_0_0", new InteropSDefT(bagof_$Source$Path$Name_0_0.instance, context));
    varScope.addSVar("SourcePathName_0_0", new InteropSDefT($Source$Path$Name_0_0.instance, context));
    varScope.addSVar("aux_SourcePathName_0_2", new InteropSDefT(aux_$Source$Path$Name_0_2.instance, context));
    varScope.addSVar("innermost_scope_PackSDFTable_1_0", new InteropSDefT(innermost_scope_$Pack$S$D$F$Table_1_0.instance, context));
    varScope.addSVar("undefine_PackSDFTable_0_1", new InteropSDefT(undefine_$Pack$S$D$F$Table_0_1.instance, context));
    varScope.addSVar("throw_PackSDFTable_1_1", new InteropSDefT(throw_$Pack$S$D$F$Table_1_1.instance, context));
    varScope.addSVar("continue_to_label_PackSDFTable_0_1", new InteropSDefT(continue_to_label_$Pack$S$D$F$Table_0_1.instance, context));
    varScope.addSVar("continue_PackSDFTable_0_0", new InteropSDefT(continue_$Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("break_bp_PackSDFTable_0_0", new InteropSDefT(break_bp_$Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("break_to_label_PackSDFTable_0_1", new InteropSDefT(break_to_label_$Pack$S$D$F$Table_0_1.instance, context));
    varScope.addSVar("break_PackSDFTable_0_0", new InteropSDefT(break_$Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("all_keys_PackSDFTable_0_0", new InteropSDefT(all_keys_$Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("bigfold_PackSDFTable_1_0", new InteropSDefT(bigfold_$Pack$S$D$F$Table_1_0.instance, context));
    varScope.addSVar("fold_PackSDFTable_1_0", new InteropSDefT(fold_$Pack$S$D$F$Table_1_0.instance, context));
    varScope.addSVar("bigchain_PackSDFTable_0_0", new InteropSDefT(bigchain_$Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("chain_PackSDFTable_0_0", new InteropSDefT(chain_$Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("bigbagof_PackSDFTable_0_0", new InteropSDefT(bigbagof_$Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("once_PackSDFTable_0_0", new InteropSDefT(once_$Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("reverse_bagof_PackSDFTable_1_0", new InteropSDefT(reverse_bagof_$Pack$S$D$F$Table_1_0.instance, context));
    varScope.addSVar("bagof_PackSDFTable_0_0", new InteropSDefT(bagof_$Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("PackSDFTable_0_0", new InteropSDefT($Pack$S$D$F$Table_0_0.instance, context));
    varScope.addSVar("aux_PackSDFTable_0_1", new InteropSDefT(aux_$Pack$S$D$F$Table_0_1.instance, context));
    varScope.addSVar("innermost_scope_ImportedFrom_1_0", new InteropSDefT(innermost_scope_$Imported$From_1_0.instance, context));
    varScope.addSVar("undefine_ImportedFrom_0_1", new InteropSDefT(undefine_$Imported$From_0_1.instance, context));
    varScope.addSVar("throw_ImportedFrom_1_1", new InteropSDefT(throw_$Imported$From_1_1.instance, context));
    varScope.addSVar("continue_to_label_ImportedFrom_0_1", new InteropSDefT(continue_to_label_$Imported$From_0_1.instance, context));
    varScope.addSVar("continue_ImportedFrom_0_0", new InteropSDefT(continue_$Imported$From_0_0.instance, context));
    varScope.addSVar("break_bp_ImportedFrom_0_0", new InteropSDefT(break_bp_$Imported$From_0_0.instance, context));
    varScope.addSVar("break_to_label_ImportedFrom_0_1", new InteropSDefT(break_to_label_$Imported$From_0_1.instance, context));
    varScope.addSVar("break_ImportedFrom_0_0", new InteropSDefT(break_$Imported$From_0_0.instance, context));
    varScope.addSVar("all_keys_ImportedFrom_0_0", new InteropSDefT(all_keys_$Imported$From_0_0.instance, context));
    varScope.addSVar("bigfold_ImportedFrom_1_0", new InteropSDefT(bigfold_$Imported$From_1_0.instance, context));
    varScope.addSVar("fold_ImportedFrom_1_0", new InteropSDefT(fold_$Imported$From_1_0.instance, context));
    varScope.addSVar("bigchain_ImportedFrom_0_0", new InteropSDefT(bigchain_$Imported$From_0_0.instance, context));
    varScope.addSVar("chain_ImportedFrom_0_0", new InteropSDefT(chain_$Imported$From_0_0.instance, context));
    varScope.addSVar("bigbagof_ImportedFrom_0_0", new InteropSDefT(bigbagof_$Imported$From_0_0.instance, context));
    varScope.addSVar("once_ImportedFrom_0_0", new InteropSDefT(once_$Imported$From_0_0.instance, context));
    varScope.addSVar("reverse_bagof_ImportedFrom_1_0", new InteropSDefT(reverse_bagof_$Imported$From_1_0.instance, context));
    varScope.addSVar("bagof_ImportedFrom_0_0", new InteropSDefT(bagof_$Imported$From_0_0.instance, context));
    varScope.addSVar("ImportedFrom_0_0", new InteropSDefT($Imported$From_0_0.instance, context));
    varScope.addSVar("aux_ImportedFrom_0_2", new InteropSDefT(aux_$Imported$From_0_2.instance, context));
    varScope.addSVar("innermost_scope_DescriptorPPTable_1_0", new InteropSDefT(innermost_scope_$Descriptor$P$P$Table_1_0.instance, context));
    varScope.addSVar("undefine_DescriptorPPTable_0_1", new InteropSDefT(undefine_$Descriptor$P$P$Table_0_1.instance, context));
    varScope.addSVar("throw_DescriptorPPTable_1_1", new InteropSDefT(throw_$Descriptor$P$P$Table_1_1.instance, context));
    varScope.addSVar("continue_to_label_DescriptorPPTable_0_1", new InteropSDefT(continue_to_label_$Descriptor$P$P$Table_0_1.instance, context));
    varScope.addSVar("continue_DescriptorPPTable_0_0", new InteropSDefT(continue_$Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("break_bp_DescriptorPPTable_0_0", new InteropSDefT(break_bp_$Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("break_to_label_DescriptorPPTable_0_1", new InteropSDefT(break_to_label_$Descriptor$P$P$Table_0_1.instance, context));
    varScope.addSVar("break_DescriptorPPTable_0_0", new InteropSDefT(break_$Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("all_keys_DescriptorPPTable_0_0", new InteropSDefT(all_keys_$Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("bigfold_DescriptorPPTable_1_0", new InteropSDefT(bigfold_$Descriptor$P$P$Table_1_0.instance, context));
    varScope.addSVar("fold_DescriptorPPTable_1_0", new InteropSDefT(fold_$Descriptor$P$P$Table_1_0.instance, context));
    varScope.addSVar("bigchain_DescriptorPPTable_0_0", new InteropSDefT(bigchain_$Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("chain_DescriptorPPTable_0_0", new InteropSDefT(chain_$Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("bigbagof_DescriptorPPTable_0_0", new InteropSDefT(bigbagof_$Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("once_DescriptorPPTable_0_0", new InteropSDefT(once_$Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("reverse_bagof_DescriptorPPTable_1_0", new InteropSDefT(reverse_bagof_$Descriptor$P$P$Table_1_0.instance, context));
    varScope.addSVar("bagof_DescriptorPPTable_0_0", new InteropSDefT(bagof_$Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("DescriptorPPTable_0_0", new InteropSDefT($Descriptor$P$P$Table_0_0.instance, context));
    varScope.addSVar("aux_DescriptorPPTable_0_1", new InteropSDefT(aux_$Descriptor$P$P$Table_0_1.instance, context));
    varScope.addSVar("innermost_scope_InputDirPrefix_1_0", new InteropSDefT(innermost_scope_$Input$Dir$Prefix_1_0.instance, context));
    varScope.addSVar("undefine_InputDirPrefix_0_1", new InteropSDefT(undefine_$Input$Dir$Prefix_0_1.instance, context));
    varScope.addSVar("throw_InputDirPrefix_1_1", new InteropSDefT(throw_$Input$Dir$Prefix_1_1.instance, context));
    varScope.addSVar("continue_to_label_InputDirPrefix_0_1", new InteropSDefT(continue_to_label_$Input$Dir$Prefix_0_1.instance, context));
    varScope.addSVar("continue_InputDirPrefix_0_0", new InteropSDefT(continue_$Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("break_bp_InputDirPrefix_0_0", new InteropSDefT(break_bp_$Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("break_to_label_InputDirPrefix_0_1", new InteropSDefT(break_to_label_$Input$Dir$Prefix_0_1.instance, context));
    varScope.addSVar("break_InputDirPrefix_0_0", new InteropSDefT(break_$Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("all_keys_InputDirPrefix_0_0", new InteropSDefT(all_keys_$Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("bigfold_InputDirPrefix_1_0", new InteropSDefT(bigfold_$Input$Dir$Prefix_1_0.instance, context));
    varScope.addSVar("fold_InputDirPrefix_1_0", new InteropSDefT(fold_$Input$Dir$Prefix_1_0.instance, context));
    varScope.addSVar("bigchain_InputDirPrefix_0_0", new InteropSDefT(bigchain_$Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("chain_InputDirPrefix_0_0", new InteropSDefT(chain_$Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("bigbagof_InputDirPrefix_0_0", new InteropSDefT(bigbagof_$Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("once_InputDirPrefix_0_0", new InteropSDefT(once_$Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("reverse_bagof_InputDirPrefix_1_0", new InteropSDefT(reverse_bagof_$Input$Dir$Prefix_1_0.instance, context));
    varScope.addSVar("bagof_InputDirPrefix_0_0", new InteropSDefT(bagof_$Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("InputDirPrefix_0_0", new InteropSDefT($Input$Dir$Prefix_0_0.instance, context));
    varScope.addSVar("aux_InputDirPrefix_0_1", new InteropSDefT(aux_$Input$Dir$Prefix_0_1.instance, context));
    varScope.addSVar("innermost_scope_IsImported_1_0", new InteropSDefT(innermost_scope_$Is$Imported_1_0.instance, context));
    varScope.addSVar("undefine_IsImported_0_1", new InteropSDefT(undefine_$Is$Imported_0_1.instance, context));
    varScope.addSVar("throw_IsImported_1_1", new InteropSDefT(throw_$Is$Imported_1_1.instance, context));
    varScope.addSVar("continue_to_label_IsImported_0_1", new InteropSDefT(continue_to_label_$Is$Imported_0_1.instance, context));
    varScope.addSVar("continue_IsImported_0_0", new InteropSDefT(continue_$Is$Imported_0_0.instance, context));
    varScope.addSVar("break_bp_IsImported_0_0", new InteropSDefT(break_bp_$Is$Imported_0_0.instance, context));
    varScope.addSVar("break_to_label_IsImported_0_1", new InteropSDefT(break_to_label_$Is$Imported_0_1.instance, context));
    varScope.addSVar("break_IsImported_0_0", new InteropSDefT(break_$Is$Imported_0_0.instance, context));
    varScope.addSVar("all_keys_IsImported_0_0", new InteropSDefT(all_keys_$Is$Imported_0_0.instance, context));
    varScope.addSVar("bigfold_IsImported_1_0", new InteropSDefT(bigfold_$Is$Imported_1_0.instance, context));
    varScope.addSVar("fold_IsImported_1_0", new InteropSDefT(fold_$Is$Imported_1_0.instance, context));
    varScope.addSVar("bigchain_IsImported_0_0", new InteropSDefT(bigchain_$Is$Imported_0_0.instance, context));
    varScope.addSVar("chain_IsImported_0_0", new InteropSDefT(chain_$Is$Imported_0_0.instance, context));
    varScope.addSVar("bigbagof_IsImported_0_0", new InteropSDefT(bigbagof_$Is$Imported_0_0.instance, context));
    varScope.addSVar("once_IsImported_0_0", new InteropSDefT(once_$Is$Imported_0_0.instance, context));
    varScope.addSVar("reverse_bagof_IsImported_1_0", new InteropSDefT(reverse_bagof_$Is$Imported_1_0.instance, context));
    varScope.addSVar("bagof_IsImported_0_0", new InteropSDefT(bagof_$Is$Imported_0_0.instance, context));
    varScope.addSVar("IsImported_0_0", new InteropSDefT($Is$Imported_0_0.instance, context));
    varScope.addSVar("aux_IsImported_0_2", new InteropSDefT(aux_$Is$Imported_0_2.instance, context));
    varScope.addSVar("innermost_scope_CachedParseTableDescriptor_1_0", new InteropSDefT(innermost_scope_$Cached$Parse$Table$Descriptor_1_0.instance, context));
    varScope.addSVar("undefine_CachedParseTableDescriptor_0_1", new InteropSDefT(undefine_$Cached$Parse$Table$Descriptor_0_1.instance, context));
    varScope.addSVar("throw_CachedParseTableDescriptor_1_1", new InteropSDefT(throw_$Cached$Parse$Table$Descriptor_1_1.instance, context));
    varScope.addSVar("continue_to_label_CachedParseTableDescriptor_0_1", new InteropSDefT(continue_to_label_$Cached$Parse$Table$Descriptor_0_1.instance, context));
    varScope.addSVar("continue_CachedParseTableDescriptor_0_0", new InteropSDefT(continue_$Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("break_bp_CachedParseTableDescriptor_0_0", new InteropSDefT(break_bp_$Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("break_to_label_CachedParseTableDescriptor_0_1", new InteropSDefT(break_to_label_$Cached$Parse$Table$Descriptor_0_1.instance, context));
    varScope.addSVar("break_CachedParseTableDescriptor_0_0", new InteropSDefT(break_$Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("all_keys_CachedParseTableDescriptor_0_0", new InteropSDefT(all_keys_$Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("bigfold_CachedParseTableDescriptor_1_0", new InteropSDefT(bigfold_$Cached$Parse$Table$Descriptor_1_0.instance, context));
    varScope.addSVar("fold_CachedParseTableDescriptor_1_0", new InteropSDefT(fold_$Cached$Parse$Table$Descriptor_1_0.instance, context));
    varScope.addSVar("bigchain_CachedParseTableDescriptor_0_0", new InteropSDefT(bigchain_$Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("chain_CachedParseTableDescriptor_0_0", new InteropSDefT(chain_$Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("bigbagof_CachedParseTableDescriptor_0_0", new InteropSDefT(bigbagof_$Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("once_CachedParseTableDescriptor_0_0", new InteropSDefT(once_$Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("reverse_bagof_CachedParseTableDescriptor_1_0", new InteropSDefT(reverse_bagof_$Cached$Parse$Table$Descriptor_1_0.instance, context));
    varScope.addSVar("bagof_CachedParseTableDescriptor_0_0", new InteropSDefT(bagof_$Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("CachedParseTableDescriptor_0_0", new InteropSDefT($Cached$Parse$Table$Descriptor_0_0.instance, context));
    varScope.addSVar("aux_CachedParseTableDescriptor_0_1", new InteropSDefT(aux_$Cached$Parse$Table$Descriptor_0_1.instance, context));
    varScope.addSVar("innermost_scope_IsReservedClassName_1_0", new InteropSDefT(innermost_scope_$Is$Reserved$Class$Name_1_0.instance, context));
    varScope.addSVar("undefine_IsReservedClassName_0_1", new InteropSDefT(undefine_$Is$Reserved$Class$Name_0_1.instance, context));
    varScope.addSVar("throw_IsReservedClassName_1_1", new InteropSDefT(throw_$Is$Reserved$Class$Name_1_1.instance, context));
    varScope.addSVar("continue_to_label_IsReservedClassName_0_1", new InteropSDefT(continue_to_label_$Is$Reserved$Class$Name_0_1.instance, context));
    varScope.addSVar("continue_IsReservedClassName_0_0", new InteropSDefT(continue_$Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("break_bp_IsReservedClassName_0_0", new InteropSDefT(break_bp_$Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("break_to_label_IsReservedClassName_0_1", new InteropSDefT(break_to_label_$Is$Reserved$Class$Name_0_1.instance, context));
    varScope.addSVar("break_IsReservedClassName_0_0", new InteropSDefT(break_$Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("all_keys_IsReservedClassName_0_0", new InteropSDefT(all_keys_$Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("bigfold_IsReservedClassName_1_0", new InteropSDefT(bigfold_$Is$Reserved$Class$Name_1_0.instance, context));
    varScope.addSVar("fold_IsReservedClassName_1_0", new InteropSDefT(fold_$Is$Reserved$Class$Name_1_0.instance, context));
    varScope.addSVar("bigchain_IsReservedClassName_0_0", new InteropSDefT(bigchain_$Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("chain_IsReservedClassName_0_0", new InteropSDefT(chain_$Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("bigbagof_IsReservedClassName_0_0", new InteropSDefT(bigbagof_$Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("once_IsReservedClassName_0_0", new InteropSDefT(once_$Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("reverse_bagof_IsReservedClassName_1_0", new InteropSDefT(reverse_bagof_$Is$Reserved$Class$Name_1_0.instance, context));
    varScope.addSVar("bagof_IsReservedClassName_0_0", new InteropSDefT(bagof_$Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("IsReservedClassName_0_0", new InteropSDefT($Is$Reserved$Class$Name_0_0.instance, context));
    varScope.addSVar("aux_IsReservedClassName_0_2", new InteropSDefT(aux_$Is$Reserved$Class$Name_0_2.instance, context));
    varScope.addSVar("innermost_scope_MainDescriptor_1_0", new InteropSDefT(innermost_scope_$Main$Descriptor_1_0.instance, context));
    varScope.addSVar("undefine_MainDescriptor_0_1", new InteropSDefT(undefine_$Main$Descriptor_0_1.instance, context));
    varScope.addSVar("throw_MainDescriptor_1_1", new InteropSDefT(throw_$Main$Descriptor_1_1.instance, context));
    varScope.addSVar("continue_to_label_MainDescriptor_0_1", new InteropSDefT(continue_to_label_$Main$Descriptor_0_1.instance, context));
    varScope.addSVar("continue_MainDescriptor_0_0", new InteropSDefT(continue_$Main$Descriptor_0_0.instance, context));
    varScope.addSVar("break_bp_MainDescriptor_0_0", new InteropSDefT(break_bp_$Main$Descriptor_0_0.instance, context));
    varScope.addSVar("break_to_label_MainDescriptor_0_1", new InteropSDefT(break_to_label_$Main$Descriptor_0_1.instance, context));
    varScope.addSVar("break_MainDescriptor_0_0", new InteropSDefT(break_$Main$Descriptor_0_0.instance, context));
    varScope.addSVar("all_keys_MainDescriptor_0_0", new InteropSDefT(all_keys_$Main$Descriptor_0_0.instance, context));
    varScope.addSVar("bigfold_MainDescriptor_1_0", new InteropSDefT(bigfold_$Main$Descriptor_1_0.instance, context));
    varScope.addSVar("fold_MainDescriptor_1_0", new InteropSDefT(fold_$Main$Descriptor_1_0.instance, context));
    varScope.addSVar("bigchain_MainDescriptor_0_0", new InteropSDefT(bigchain_$Main$Descriptor_0_0.instance, context));
    varScope.addSVar("chain_MainDescriptor_0_0", new InteropSDefT(chain_$Main$Descriptor_0_0.instance, context));
    varScope.addSVar("bigbagof_MainDescriptor_0_0", new InteropSDefT(bigbagof_$Main$Descriptor_0_0.instance, context));
    varScope.addSVar("once_MainDescriptor_0_0", new InteropSDefT(once_$Main$Descriptor_0_0.instance, context));
    varScope.addSVar("reverse_bagof_MainDescriptor_1_0", new InteropSDefT(reverse_bagof_$Main$Descriptor_1_0.instance, context));
    varScope.addSVar("bagof_MainDescriptor_0_0", new InteropSDefT(bagof_$Main$Descriptor_0_0.instance, context));
    varScope.addSVar("MainDescriptor_0_0", new InteropSDefT($Main$Descriptor_0_0.instance, context));
    varScope.addSVar("aux_MainDescriptor_0_1", new InteropSDefT(aux_$Main$Descriptor_0_1.instance, context));
    varScope.addSVar("innermost_scope_EditorExtensions_1_0", new InteropSDefT(innermost_scope_$Editor$Extensions_1_0.instance, context));
    varScope.addSVar("undefine_EditorExtensions_0_1", new InteropSDefT(undefine_$Editor$Extensions_0_1.instance, context));
    varScope.addSVar("throw_EditorExtensions_1_1", new InteropSDefT(throw_$Editor$Extensions_1_1.instance, context));
    varScope.addSVar("continue_to_label_EditorExtensions_0_1", new InteropSDefT(continue_to_label_$Editor$Extensions_0_1.instance, context));
    varScope.addSVar("continue_EditorExtensions_0_0", new InteropSDefT(continue_$Editor$Extensions_0_0.instance, context));
    varScope.addSVar("break_bp_EditorExtensions_0_0", new InteropSDefT(break_bp_$Editor$Extensions_0_0.instance, context));
    varScope.addSVar("break_to_label_EditorExtensions_0_1", new InteropSDefT(break_to_label_$Editor$Extensions_0_1.instance, context));
    varScope.addSVar("break_EditorExtensions_0_0", new InteropSDefT(break_$Editor$Extensions_0_0.instance, context));
    varScope.addSVar("all_keys_EditorExtensions_0_0", new InteropSDefT(all_keys_$Editor$Extensions_0_0.instance, context));
    varScope.addSVar("bigfold_EditorExtensions_1_0", new InteropSDefT(bigfold_$Editor$Extensions_1_0.instance, context));
    varScope.addSVar("fold_EditorExtensions_1_0", new InteropSDefT(fold_$Editor$Extensions_1_0.instance, context));
    varScope.addSVar("bigchain_EditorExtensions_0_0", new InteropSDefT(bigchain_$Editor$Extensions_0_0.instance, context));
    varScope.addSVar("chain_EditorExtensions_0_0", new InteropSDefT(chain_$Editor$Extensions_0_0.instance, context));
    varScope.addSVar("bigbagof_EditorExtensions_0_0", new InteropSDefT(bigbagof_$Editor$Extensions_0_0.instance, context));
    varScope.addSVar("once_EditorExtensions_0_0", new InteropSDefT(once_$Editor$Extensions_0_0.instance, context));
    varScope.addSVar("reverse_bagof_EditorExtensions_1_0", new InteropSDefT(reverse_bagof_$Editor$Extensions_1_0.instance, context));
    varScope.addSVar("bagof_EditorExtensions_0_0", new InteropSDefT(bagof_$Editor$Extensions_0_0.instance, context));
    varScope.addSVar("EditorExtensions_0_0", new InteropSDefT($Editor$Extensions_0_0.instance, context));
    varScope.addSVar("aux_EditorExtensions_0_1", new InteropSDefT(aux_$Editor$Extensions_0_1.instance, context));
    varScope.addSVar("innermost_scope_BasePackage_1_0", new InteropSDefT(innermost_scope_$Base$Package_1_0.instance, context));
    varScope.addSVar("undefine_BasePackage_0_1", new InteropSDefT(undefine_$Base$Package_0_1.instance, context));
    varScope.addSVar("throw_BasePackage_1_1", new InteropSDefT(throw_$Base$Package_1_1.instance, context));
    varScope.addSVar("continue_to_label_BasePackage_0_1", new InteropSDefT(continue_to_label_$Base$Package_0_1.instance, context));
    varScope.addSVar("continue_BasePackage_0_0", new InteropSDefT(continue_$Base$Package_0_0.instance, context));
    varScope.addSVar("break_bp_BasePackage_0_0", new InteropSDefT(break_bp_$Base$Package_0_0.instance, context));
    varScope.addSVar("break_to_label_BasePackage_0_1", new InteropSDefT(break_to_label_$Base$Package_0_1.instance, context));
    varScope.addSVar("break_BasePackage_0_0", new InteropSDefT(break_$Base$Package_0_0.instance, context));
    varScope.addSVar("all_keys_BasePackage_0_0", new InteropSDefT(all_keys_$Base$Package_0_0.instance, context));
    varScope.addSVar("bigfold_BasePackage_1_0", new InteropSDefT(bigfold_$Base$Package_1_0.instance, context));
    varScope.addSVar("fold_BasePackage_1_0", new InteropSDefT(fold_$Base$Package_1_0.instance, context));
    varScope.addSVar("bigchain_BasePackage_0_0", new InteropSDefT(bigchain_$Base$Package_0_0.instance, context));
    varScope.addSVar("chain_BasePackage_0_0", new InteropSDefT(chain_$Base$Package_0_0.instance, context));
    varScope.addSVar("bigbagof_BasePackage_0_0", new InteropSDefT(bigbagof_$Base$Package_0_0.instance, context));
    varScope.addSVar("once_BasePackage_0_0", new InteropSDefT(once_$Base$Package_0_0.instance, context));
    varScope.addSVar("reverse_bagof_BasePackage_1_0", new InteropSDefT(reverse_bagof_$Base$Package_1_0.instance, context));
    varScope.addSVar("bagof_BasePackage_0_0", new InteropSDefT(bagof_$Base$Package_0_0.instance, context));
    varScope.addSVar("BasePackage_0_0", new InteropSDefT($Base$Package_0_0.instance, context));
    varScope.addSVar("aux_BasePackage_0_1", new InteropSDefT(aux_$Base$Package_0_1.instance, context));
    varScope.addSVar("innermost_scope_StartSymbol_1_0", new InteropSDefT(innermost_scope_$Start$Symbol_1_0.instance, context));
    varScope.addSVar("undefine_StartSymbol_0_1", new InteropSDefT(undefine_$Start$Symbol_0_1.instance, context));
    varScope.addSVar("throw_StartSymbol_1_1", new InteropSDefT(throw_$Start$Symbol_1_1.instance, context));
    varScope.addSVar("continue_to_label_StartSymbol_0_1", new InteropSDefT(continue_to_label_$Start$Symbol_0_1.instance, context));
    varScope.addSVar("continue_StartSymbol_0_0", new InteropSDefT(continue_$Start$Symbol_0_0.instance, context));
    varScope.addSVar("break_bp_StartSymbol_0_0", new InteropSDefT(break_bp_$Start$Symbol_0_0.instance, context));
    varScope.addSVar("break_to_label_StartSymbol_0_1", new InteropSDefT(break_to_label_$Start$Symbol_0_1.instance, context));
    varScope.addSVar("break_StartSymbol_0_0", new InteropSDefT(break_$Start$Symbol_0_0.instance, context));
    varScope.addSVar("all_keys_StartSymbol_0_0", new InteropSDefT(all_keys_$Start$Symbol_0_0.instance, context));
    varScope.addSVar("bigfold_StartSymbol_1_0", new InteropSDefT(bigfold_$Start$Symbol_1_0.instance, context));
    varScope.addSVar("fold_StartSymbol_1_0", new InteropSDefT(fold_$Start$Symbol_1_0.instance, context));
    varScope.addSVar("bigchain_StartSymbol_0_0", new InteropSDefT(bigchain_$Start$Symbol_0_0.instance, context));
    varScope.addSVar("chain_StartSymbol_0_0", new InteropSDefT(chain_$Start$Symbol_0_0.instance, context));
    varScope.addSVar("bigbagof_StartSymbol_0_0", new InteropSDefT(bigbagof_$Start$Symbol_0_0.instance, context));
    varScope.addSVar("once_StartSymbol_0_0", new InteropSDefT(once_$Start$Symbol_0_0.instance, context));
    varScope.addSVar("reverse_bagof_StartSymbol_1_0", new InteropSDefT(reverse_bagof_$Start$Symbol_1_0.instance, context));
    varScope.addSVar("bagof_StartSymbol_0_0", new InteropSDefT(bagof_$Start$Symbol_0_0.instance, context));
    varScope.addSVar("StartSymbol_0_0", new InteropSDefT($Start$Symbol_0_0.instance, context));
    varScope.addSVar("aux_StartSymbol_0_1", new InteropSDefT(aux_$Start$Symbol_0_1.instance, context));
    varScope.addSVar("innermost_scope_NoExistingDescriptor_1_0", new InteropSDefT(innermost_scope_$No$Existing$Descriptor_1_0.instance, context));
    varScope.addSVar("undefine_NoExistingDescriptor_0_1", new InteropSDefT(undefine_$No$Existing$Descriptor_0_1.instance, context));
    varScope.addSVar("throw_NoExistingDescriptor_1_1", new InteropSDefT(throw_$No$Existing$Descriptor_1_1.instance, context));
    varScope.addSVar("continue_to_label_NoExistingDescriptor_0_1", new InteropSDefT(continue_to_label_$No$Existing$Descriptor_0_1.instance, context));
    varScope.addSVar("continue_NoExistingDescriptor_0_0", new InteropSDefT(continue_$No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("break_bp_NoExistingDescriptor_0_0", new InteropSDefT(break_bp_$No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("break_to_label_NoExistingDescriptor_0_1", new InteropSDefT(break_to_label_$No$Existing$Descriptor_0_1.instance, context));
    varScope.addSVar("break_NoExistingDescriptor_0_0", new InteropSDefT(break_$No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("all_keys_NoExistingDescriptor_0_0", new InteropSDefT(all_keys_$No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("bigfold_NoExistingDescriptor_1_0", new InteropSDefT(bigfold_$No$Existing$Descriptor_1_0.instance, context));
    varScope.addSVar("fold_NoExistingDescriptor_1_0", new InteropSDefT(fold_$No$Existing$Descriptor_1_0.instance, context));
    varScope.addSVar("bigchain_NoExistingDescriptor_0_0", new InteropSDefT(bigchain_$No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("chain_NoExistingDescriptor_0_0", new InteropSDefT(chain_$No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("bigbagof_NoExistingDescriptor_0_0", new InteropSDefT(bigbagof_$No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("once_NoExistingDescriptor_0_0", new InteropSDefT(once_$No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("reverse_bagof_NoExistingDescriptor_1_0", new InteropSDefT(reverse_bagof_$No$Existing$Descriptor_1_0.instance, context));
    varScope.addSVar("bagof_NoExistingDescriptor_0_0", new InteropSDefT(bagof_$No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("NoExistingDescriptor_0_0", new InteropSDefT($No$Existing$Descriptor_0_0.instance, context));
    varScope.addSVar("aux_NoExistingDescriptor_0_2", new InteropSDefT(aux_$No$Existing$Descriptor_0_2.instance, context));
    varScope.addSVar("innermost_scope_OnImportFailure_1_0", new InteropSDefT(innermost_scope_$On$Import$Failure_1_0.instance, context));
    varScope.addSVar("undefine_OnImportFailure_0_1", new InteropSDefT(undefine_$On$Import$Failure_0_1.instance, context));
    varScope.addSVar("throw_OnImportFailure_1_1", new InteropSDefT(throw_$On$Import$Failure_1_1.instance, context));
    varScope.addSVar("continue_to_label_OnImportFailure_0_1", new InteropSDefT(continue_to_label_$On$Import$Failure_0_1.instance, context));
    varScope.addSVar("continue_OnImportFailure_0_0", new InteropSDefT(continue_$On$Import$Failure_0_0.instance, context));
    varScope.addSVar("break_bp_OnImportFailure_0_0", new InteropSDefT(break_bp_$On$Import$Failure_0_0.instance, context));
    varScope.addSVar("break_to_label_OnImportFailure_0_1", new InteropSDefT(break_to_label_$On$Import$Failure_0_1.instance, context));
    varScope.addSVar("break_OnImportFailure_0_0", new InteropSDefT(break_$On$Import$Failure_0_0.instance, context));
    varScope.addSVar("all_keys_OnImportFailure_0_0", new InteropSDefT(all_keys_$On$Import$Failure_0_0.instance, context));
    varScope.addSVar("bigfold_OnImportFailure_1_0", new InteropSDefT(bigfold_$On$Import$Failure_1_0.instance, context));
    varScope.addSVar("fold_OnImportFailure_1_0", new InteropSDefT(fold_$On$Import$Failure_1_0.instance, context));
    varScope.addSVar("bigchain_OnImportFailure_0_0", new InteropSDefT(bigchain_$On$Import$Failure_0_0.instance, context));
    varScope.addSVar("chain_OnImportFailure_0_0", new InteropSDefT(chain_$On$Import$Failure_0_0.instance, context));
    varScope.addSVar("bigbagof_OnImportFailure_0_0", new InteropSDefT(bigbagof_$On$Import$Failure_0_0.instance, context));
    varScope.addSVar("once_OnImportFailure_0_0", new InteropSDefT(once_$On$Import$Failure_0_0.instance, context));
    varScope.addSVar("reverse_bagof_OnImportFailure_1_0", new InteropSDefT(reverse_bagof_$On$Import$Failure_1_0.instance, context));
    varScope.addSVar("bagof_OnImportFailure_0_0", new InteropSDefT(bagof_$On$Import$Failure_0_0.instance, context));
    varScope.addSVar("OnImportFailure_0_0", new InteropSDefT($On$Import$Failure_0_0.instance, context));
    varScope.addSVar("aux_OnImportFailure_0_2", new InteropSDefT(aux_$On$Import$Failure_0_2.instance, context));
    varScope.addSVar("innermost_scope_Productions_1_0", new InteropSDefT(innermost_scope_$Productions_1_0.instance, context));
    varScope.addSVar("undefine_Productions_0_1", new InteropSDefT(undefine_$Productions_0_1.instance, context));
    varScope.addSVar("throw_Productions_1_1", new InteropSDefT(throw_$Productions_1_1.instance, context));
    varScope.addSVar("continue_to_label_Productions_0_1", new InteropSDefT(continue_to_label_$Productions_0_1.instance, context));
    varScope.addSVar("continue_Productions_0_0", new InteropSDefT(continue_$Productions_0_0.instance, context));
    varScope.addSVar("break_bp_Productions_0_0", new InteropSDefT(break_bp_$Productions_0_0.instance, context));
    varScope.addSVar("break_to_label_Productions_0_1", new InteropSDefT(break_to_label_$Productions_0_1.instance, context));
    varScope.addSVar("break_Productions_0_0", new InteropSDefT(break_$Productions_0_0.instance, context));
    varScope.addSVar("all_keys_Productions_0_0", new InteropSDefT(all_keys_$Productions_0_0.instance, context));
    varScope.addSVar("bigfold_Productions_1_0", new InteropSDefT(bigfold_$Productions_1_0.instance, context));
    varScope.addSVar("fold_Productions_1_0", new InteropSDefT(fold_$Productions_1_0.instance, context));
    varScope.addSVar("bigchain_Productions_0_0", new InteropSDefT(bigchain_$Productions_0_0.instance, context));
    varScope.addSVar("chain_Productions_0_0", new InteropSDefT(chain_$Productions_0_0.instance, context));
    varScope.addSVar("bigbagof_Productions_0_0", new InteropSDefT(bigbagof_$Productions_0_0.instance, context));
    varScope.addSVar("once_Productions_0_0", new InteropSDefT(once_$Productions_0_0.instance, context));
    varScope.addSVar("reverse_bagof_Productions_1_0", new InteropSDefT(reverse_bagof_$Productions_1_0.instance, context));
    varScope.addSVar("bagof_Productions_0_0", new InteropSDefT(bagof_$Productions_0_0.instance, context));
    varScope.addSVar("Productions_0_0", new InteropSDefT($Productions_0_0.instance, context));
    varScope.addSVar("aux_Productions_0_2", new InteropSDefT(aux_$Productions_0_2.instance, context));
    varScope.addSVar("innermost_scope_CollectAllVisited_1_0", new InteropSDefT(innermost_scope_$Collect$All$Visited_1_0.instance, context));
    varScope.addSVar("undefine_CollectAllVisited_0_1", new InteropSDefT(undefine_$Collect$All$Visited_0_1.instance, context));
    varScope.addSVar("throw_CollectAllVisited_1_1", new InteropSDefT(throw_$Collect$All$Visited_1_1.instance, context));
    varScope.addSVar("continue_to_label_CollectAllVisited_0_1", new InteropSDefT(continue_to_label_$Collect$All$Visited_0_1.instance, context));
    varScope.addSVar("continue_CollectAllVisited_0_0", new InteropSDefT(continue_$Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("break_bp_CollectAllVisited_0_0", new InteropSDefT(break_bp_$Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("break_to_label_CollectAllVisited_0_1", new InteropSDefT(break_to_label_$Collect$All$Visited_0_1.instance, context));
    varScope.addSVar("break_CollectAllVisited_0_0", new InteropSDefT(break_$Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("all_keys_CollectAllVisited_0_0", new InteropSDefT(all_keys_$Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("bigfold_CollectAllVisited_1_0", new InteropSDefT(bigfold_$Collect$All$Visited_1_0.instance, context));
    varScope.addSVar("fold_CollectAllVisited_1_0", new InteropSDefT(fold_$Collect$All$Visited_1_0.instance, context));
    varScope.addSVar("bigchain_CollectAllVisited_0_0", new InteropSDefT(bigchain_$Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("chain_CollectAllVisited_0_0", new InteropSDefT(chain_$Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("bigbagof_CollectAllVisited_0_0", new InteropSDefT(bigbagof_$Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("once_CollectAllVisited_0_0", new InteropSDefT(once_$Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("reverse_bagof_CollectAllVisited_1_0", new InteropSDefT(reverse_bagof_$Collect$All$Visited_1_0.instance, context));
    varScope.addSVar("bagof_CollectAllVisited_0_0", new InteropSDefT(bagof_$Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("CollectAllVisited_0_0", new InteropSDefT($Collect$All$Visited_0_0.instance, context));
    varScope.addSVar("aux_CollectAllVisited_0_2", new InteropSDefT(aux_$Collect$All$Visited_0_2.instance, context));
    varScope.addSVar("innermost_scope_FollowVisited_1_0", new InteropSDefT(innermost_scope_$Follow$Visited_1_0.instance, context));
    varScope.addSVar("undefine_FollowVisited_0_1", new InteropSDefT(undefine_$Follow$Visited_0_1.instance, context));
    varScope.addSVar("throw_FollowVisited_1_1", new InteropSDefT(throw_$Follow$Visited_1_1.instance, context));
    varScope.addSVar("continue_to_label_FollowVisited_0_1", new InteropSDefT(continue_to_label_$Follow$Visited_0_1.instance, context));
    varScope.addSVar("continue_FollowVisited_0_0", new InteropSDefT(continue_$Follow$Visited_0_0.instance, context));
    varScope.addSVar("break_bp_FollowVisited_0_0", new InteropSDefT(break_bp_$Follow$Visited_0_0.instance, context));
    varScope.addSVar("break_to_label_FollowVisited_0_1", new InteropSDefT(break_to_label_$Follow$Visited_0_1.instance, context));
    varScope.addSVar("break_FollowVisited_0_0", new InteropSDefT(break_$Follow$Visited_0_0.instance, context));
    varScope.addSVar("all_keys_FollowVisited_0_0", new InteropSDefT(all_keys_$Follow$Visited_0_0.instance, context));
    varScope.addSVar("bigfold_FollowVisited_1_0", new InteropSDefT(bigfold_$Follow$Visited_1_0.instance, context));
    varScope.addSVar("fold_FollowVisited_1_0", new InteropSDefT(fold_$Follow$Visited_1_0.instance, context));
    varScope.addSVar("bigchain_FollowVisited_0_0", new InteropSDefT(bigchain_$Follow$Visited_0_0.instance, context));
    varScope.addSVar("chain_FollowVisited_0_0", new InteropSDefT(chain_$Follow$Visited_0_0.instance, context));
    varScope.addSVar("bigbagof_FollowVisited_0_0", new InteropSDefT(bigbagof_$Follow$Visited_0_0.instance, context));
    varScope.addSVar("once_FollowVisited_0_0", new InteropSDefT(once_$Follow$Visited_0_0.instance, context));
    varScope.addSVar("reverse_bagof_FollowVisited_1_0", new InteropSDefT(reverse_bagof_$Follow$Visited_1_0.instance, context));
    varScope.addSVar("bagof_FollowVisited_0_0", new InteropSDefT(bagof_$Follow$Visited_0_0.instance, context));
    varScope.addSVar("FollowVisited_0_0", new InteropSDefT($Follow$Visited_0_0.instance, context));
    varScope.addSVar("aux_FollowVisited_0_2", new InteropSDefT(aux_$Follow$Visited_0_2.instance, context));
    varScope.addSVar("innermost_scope_FollowSuccess_1_0", new InteropSDefT(innermost_scope_$Follow$Success_1_0.instance, context));
    varScope.addSVar("undefine_FollowSuccess_0_1", new InteropSDefT(undefine_$Follow$Success_0_1.instance, context));
    varScope.addSVar("throw_FollowSuccess_1_1", new InteropSDefT(throw_$Follow$Success_1_1.instance, context));
    varScope.addSVar("continue_to_label_FollowSuccess_0_1", new InteropSDefT(continue_to_label_$Follow$Success_0_1.instance, context));
    varScope.addSVar("continue_FollowSuccess_0_0", new InteropSDefT(continue_$Follow$Success_0_0.instance, context));
    varScope.addSVar("break_bp_FollowSuccess_0_0", new InteropSDefT(break_bp_$Follow$Success_0_0.instance, context));
    varScope.addSVar("break_to_label_FollowSuccess_0_1", new InteropSDefT(break_to_label_$Follow$Success_0_1.instance, context));
    varScope.addSVar("break_FollowSuccess_0_0", new InteropSDefT(break_$Follow$Success_0_0.instance, context));
    varScope.addSVar("all_keys_FollowSuccess_0_0", new InteropSDefT(all_keys_$Follow$Success_0_0.instance, context));
    varScope.addSVar("bigfold_FollowSuccess_1_0", new InteropSDefT(bigfold_$Follow$Success_1_0.instance, context));
    varScope.addSVar("fold_FollowSuccess_1_0", new InteropSDefT(fold_$Follow$Success_1_0.instance, context));
    varScope.addSVar("bigchain_FollowSuccess_0_0", new InteropSDefT(bigchain_$Follow$Success_0_0.instance, context));
    varScope.addSVar("chain_FollowSuccess_0_0", new InteropSDefT(chain_$Follow$Success_0_0.instance, context));
    varScope.addSVar("bigbagof_FollowSuccess_0_0", new InteropSDefT(bigbagof_$Follow$Success_0_0.instance, context));
    varScope.addSVar("once_FollowSuccess_0_0", new InteropSDefT(once_$Follow$Success_0_0.instance, context));
    varScope.addSVar("reverse_bagof_FollowSuccess_1_0", new InteropSDefT(reverse_bagof_$Follow$Success_1_0.instance, context));
    varScope.addSVar("bagof_FollowSuccess_0_0", new InteropSDefT(bagof_$Follow$Success_0_0.instance, context));
    varScope.addSVar("FollowSuccess_0_0", new InteropSDefT($Follow$Success_0_0.instance, context));
    varScope.addSVar("aux_FollowSuccess_0_2", new InteropSDefT(aux_$Follow$Success_0_2.instance, context));
    varScope.addSVar("innermost_scope_ProductionVisited_1_0", new InteropSDefT(innermost_scope_$Production$Visited_1_0.instance, context));
    varScope.addSVar("undefine_ProductionVisited_0_1", new InteropSDefT(undefine_$Production$Visited_0_1.instance, context));
    varScope.addSVar("throw_ProductionVisited_1_1", new InteropSDefT(throw_$Production$Visited_1_1.instance, context));
    varScope.addSVar("continue_to_label_ProductionVisited_0_1", new InteropSDefT(continue_to_label_$Production$Visited_0_1.instance, context));
    varScope.addSVar("continue_ProductionVisited_0_0", new InteropSDefT(continue_$Production$Visited_0_0.instance, context));
    varScope.addSVar("break_bp_ProductionVisited_0_0", new InteropSDefT(break_bp_$Production$Visited_0_0.instance, context));
    varScope.addSVar("break_to_label_ProductionVisited_0_1", new InteropSDefT(break_to_label_$Production$Visited_0_1.instance, context));
    varScope.addSVar("break_ProductionVisited_0_0", new InteropSDefT(break_$Production$Visited_0_0.instance, context));
    varScope.addSVar("all_keys_ProductionVisited_0_0", new InteropSDefT(all_keys_$Production$Visited_0_0.instance, context));
    varScope.addSVar("bigfold_ProductionVisited_1_0", new InteropSDefT(bigfold_$Production$Visited_1_0.instance, context));
    varScope.addSVar("fold_ProductionVisited_1_0", new InteropSDefT(fold_$Production$Visited_1_0.instance, context));
    varScope.addSVar("bigchain_ProductionVisited_0_0", new InteropSDefT(bigchain_$Production$Visited_0_0.instance, context));
    varScope.addSVar("chain_ProductionVisited_0_0", new InteropSDefT(chain_$Production$Visited_0_0.instance, context));
    varScope.addSVar("bigbagof_ProductionVisited_0_0", new InteropSDefT(bigbagof_$Production$Visited_0_0.instance, context));
    varScope.addSVar("once_ProductionVisited_0_0", new InteropSDefT(once_$Production$Visited_0_0.instance, context));
    varScope.addSVar("reverse_bagof_ProductionVisited_1_0", new InteropSDefT(reverse_bagof_$Production$Visited_1_0.instance, context));
    varScope.addSVar("bagof_ProductionVisited_0_0", new InteropSDefT(bagof_$Production$Visited_0_0.instance, context));
    varScope.addSVar("ProductionVisited_0_0", new InteropSDefT($Production$Visited_0_0.instance, context));
    varScope.addSVar("aux_ProductionVisited_0_2", new InteropSDefT(aux_$Production$Visited_0_2.instance, context));
    varScope.addSVar("innermost_scope_InputFile_1_0", new InteropSDefT(innermost_scope_$Input$File_1_0.instance, context));
    varScope.addSVar("undefine_InputFile_0_1", new InteropSDefT(undefine_$Input$File_0_1.instance, context));
    varScope.addSVar("throw_InputFile_1_1", new InteropSDefT(throw_$Input$File_1_1.instance, context));
    varScope.addSVar("continue_to_label_InputFile_0_1", new InteropSDefT(continue_to_label_$Input$File_0_1.instance, context));
    varScope.addSVar("continue_InputFile_0_0", new InteropSDefT(continue_$Input$File_0_0.instance, context));
    varScope.addSVar("break_bp_InputFile_0_0", new InteropSDefT(break_bp_$Input$File_0_0.instance, context));
    varScope.addSVar("break_to_label_InputFile_0_1", new InteropSDefT(break_to_label_$Input$File_0_1.instance, context));
    varScope.addSVar("break_InputFile_0_0", new InteropSDefT(break_$Input$File_0_0.instance, context));
    varScope.addSVar("all_keys_InputFile_0_0", new InteropSDefT(all_keys_$Input$File_0_0.instance, context));
    varScope.addSVar("bigfold_InputFile_1_0", new InteropSDefT(bigfold_$Input$File_1_0.instance, context));
    varScope.addSVar("fold_InputFile_1_0", new InteropSDefT(fold_$Input$File_1_0.instance, context));
    varScope.addSVar("bigchain_InputFile_0_0", new InteropSDefT(bigchain_$Input$File_0_0.instance, context));
    varScope.addSVar("chain_InputFile_0_0", new InteropSDefT(chain_$Input$File_0_0.instance, context));
    varScope.addSVar("bigbagof_InputFile_0_0", new InteropSDefT(bigbagof_$Input$File_0_0.instance, context));
    varScope.addSVar("once_InputFile_0_0", new InteropSDefT(once_$Input$File_0_0.instance, context));
    varScope.addSVar("reverse_bagof_InputFile_1_0", new InteropSDefT(reverse_bagof_$Input$File_1_0.instance, context));
    varScope.addSVar("bagof_InputFile_0_0", new InteropSDefT(bagof_$Input$File_0_0.instance, context));
    varScope.addSVar("InputFile_0_0", new InteropSDefT($Input$File_0_0.instance, context));
    varScope.addSVar("aux_InputFile_0_1", new InteropSDefT(aux_$Input$File_0_1.instance, context));
    varScope.addSVar("innermost_scope_ParseTable_1_0", new InteropSDefT(innermost_scope_$Parse$Table_1_0.instance, context));
    varScope.addSVar("undefine_ParseTable_0_1", new InteropSDefT(undefine_$Parse$Table_0_1.instance, context));
    varScope.addSVar("throw_ParseTable_1_1", new InteropSDefT(throw_$Parse$Table_1_1.instance, context));
    varScope.addSVar("continue_to_label_ParseTable_0_1", new InteropSDefT(continue_to_label_$Parse$Table_0_1.instance, context));
    varScope.addSVar("continue_ParseTable_0_0", new InteropSDefT(continue_$Parse$Table_0_0.instance, context));
    varScope.addSVar("break_bp_ParseTable_0_0", new InteropSDefT(break_bp_$Parse$Table_0_0.instance, context));
    varScope.addSVar("break_to_label_ParseTable_0_1", new InteropSDefT(break_to_label_$Parse$Table_0_1.instance, context));
    varScope.addSVar("break_ParseTable_0_0", new InteropSDefT(break_$Parse$Table_0_0.instance, context));
    varScope.addSVar("all_keys_ParseTable_0_0", new InteropSDefT(all_keys_$Parse$Table_0_0.instance, context));
    varScope.addSVar("bigfold_ParseTable_1_0", new InteropSDefT(bigfold_$Parse$Table_1_0.instance, context));
    varScope.addSVar("fold_ParseTable_1_0", new InteropSDefT(fold_$Parse$Table_1_0.instance, context));
    varScope.addSVar("bigchain_ParseTable_0_0", new InteropSDefT(bigchain_$Parse$Table_0_0.instance, context));
    varScope.addSVar("chain_ParseTable_0_0", new InteropSDefT(chain_$Parse$Table_0_0.instance, context));
    varScope.addSVar("bigbagof_ParseTable_0_0", new InteropSDefT(bigbagof_$Parse$Table_0_0.instance, context));
    varScope.addSVar("once_ParseTable_0_0", new InteropSDefT(once_$Parse$Table_0_0.instance, context));
    varScope.addSVar("reverse_bagof_ParseTable_1_0", new InteropSDefT(reverse_bagof_$Parse$Table_1_0.instance, context));
    varScope.addSVar("bagof_ParseTable_0_0", new InteropSDefT(bagof_$Parse$Table_0_0.instance, context));
    varScope.addSVar("ParseTable_0_0", new InteropSDefT($Parse$Table_0_0.instance, context));
    varScope.addSVar("aux_ParseTable_0_1", new InteropSDefT(aux_$Parse$Table_0_1.instance, context));
    varScope.addSVar("innermost_scope_ProjectName_1_0", new InteropSDefT(innermost_scope_$Project$Name_1_0.instance, context));
    varScope.addSVar("undefine_ProjectName_0_1", new InteropSDefT(undefine_$Project$Name_0_1.instance, context));
    varScope.addSVar("throw_ProjectName_1_1", new InteropSDefT(throw_$Project$Name_1_1.instance, context));
    varScope.addSVar("continue_to_label_ProjectName_0_1", new InteropSDefT(continue_to_label_$Project$Name_0_1.instance, context));
    varScope.addSVar("continue_ProjectName_0_0", new InteropSDefT(continue_$Project$Name_0_0.instance, context));
    varScope.addSVar("break_bp_ProjectName_0_0", new InteropSDefT(break_bp_$Project$Name_0_0.instance, context));
    varScope.addSVar("break_to_label_ProjectName_0_1", new InteropSDefT(break_to_label_$Project$Name_0_1.instance, context));
    varScope.addSVar("break_ProjectName_0_0", new InteropSDefT(break_$Project$Name_0_0.instance, context));
    varScope.addSVar("all_keys_ProjectName_0_0", new InteropSDefT(all_keys_$Project$Name_0_0.instance, context));
    varScope.addSVar("bigfold_ProjectName_1_0", new InteropSDefT(bigfold_$Project$Name_1_0.instance, context));
    varScope.addSVar("fold_ProjectName_1_0", new InteropSDefT(fold_$Project$Name_1_0.instance, context));
    varScope.addSVar("bigchain_ProjectName_0_0", new InteropSDefT(bigchain_$Project$Name_0_0.instance, context));
    varScope.addSVar("chain_ProjectName_0_0", new InteropSDefT(chain_$Project$Name_0_0.instance, context));
    varScope.addSVar("bigbagof_ProjectName_0_0", new InteropSDefT(bigbagof_$Project$Name_0_0.instance, context));
    varScope.addSVar("once_ProjectName_0_0", new InteropSDefT(once_$Project$Name_0_0.instance, context));
    varScope.addSVar("reverse_bagof_ProjectName_1_0", new InteropSDefT(reverse_bagof_$Project$Name_1_0.instance, context));
    varScope.addSVar("bagof_ProjectName_0_0", new InteropSDefT(bagof_$Project$Name_0_0.instance, context));
    varScope.addSVar("ProjectName_0_0", new InteropSDefT($Project$Name_0_0.instance, context));
    varScope.addSVar("aux_ProjectName_0_1", new InteropSDefT(aux_$Project$Name_0_1.instance, context));
    varScope.addSVar("innermost_scope_JarLocations_1_0", new InteropSDefT(innermost_scope_$Jar$Locations_1_0.instance, context));
    varScope.addSVar("undefine_JarLocations_0_1", new InteropSDefT(undefine_$Jar$Locations_0_1.instance, context));
    varScope.addSVar("throw_JarLocations_1_1", new InteropSDefT(throw_$Jar$Locations_1_1.instance, context));
    varScope.addSVar("continue_to_label_JarLocations_0_1", new InteropSDefT(continue_to_label_$Jar$Locations_0_1.instance, context));
    varScope.addSVar("continue_JarLocations_0_0", new InteropSDefT(continue_$Jar$Locations_0_0.instance, context));
    varScope.addSVar("break_bp_JarLocations_0_0", new InteropSDefT(break_bp_$Jar$Locations_0_0.instance, context));
    varScope.addSVar("break_to_label_JarLocations_0_1", new InteropSDefT(break_to_label_$Jar$Locations_0_1.instance, context));
    varScope.addSVar("break_JarLocations_0_0", new InteropSDefT(break_$Jar$Locations_0_0.instance, context));
    varScope.addSVar("all_keys_JarLocations_0_0", new InteropSDefT(all_keys_$Jar$Locations_0_0.instance, context));
    varScope.addSVar("bigfold_JarLocations_1_0", new InteropSDefT(bigfold_$Jar$Locations_1_0.instance, context));
    varScope.addSVar("fold_JarLocations_1_0", new InteropSDefT(fold_$Jar$Locations_1_0.instance, context));
    varScope.addSVar("bigchain_JarLocations_0_0", new InteropSDefT(bigchain_$Jar$Locations_0_0.instance, context));
    varScope.addSVar("chain_JarLocations_0_0", new InteropSDefT(chain_$Jar$Locations_0_0.instance, context));
    varScope.addSVar("bigbagof_JarLocations_0_0", new InteropSDefT(bigbagof_$Jar$Locations_0_0.instance, context));
    varScope.addSVar("once_JarLocations_0_0", new InteropSDefT(once_$Jar$Locations_0_0.instance, context));
    varScope.addSVar("reverse_bagof_JarLocations_1_0", new InteropSDefT(reverse_bagof_$Jar$Locations_1_0.instance, context));
    varScope.addSVar("bagof_JarLocations_0_0", new InteropSDefT(bagof_$Jar$Locations_0_0.instance, context));
    varScope.addSVar("JarLocations_0_0", new InteropSDefT($Jar$Locations_0_0.instance, context));
    varScope.addSVar("aux_JarLocations_0_1", new InteropSDefT(aux_$Jar$Locations_0_1.instance, context));
    varScope.addSVar("innermost_scope_NewProject_1_0", new InteropSDefT(innermost_scope_$New$Project_1_0.instance, context));
    varScope.addSVar("undefine_NewProject_0_1", new InteropSDefT(undefine_$New$Project_0_1.instance, context));
    varScope.addSVar("throw_NewProject_1_1", new InteropSDefT(throw_$New$Project_1_1.instance, context));
    varScope.addSVar("continue_to_label_NewProject_0_1", new InteropSDefT(continue_to_label_$New$Project_0_1.instance, context));
    varScope.addSVar("continue_NewProject_0_0", new InteropSDefT(continue_$New$Project_0_0.instance, context));
    varScope.addSVar("break_bp_NewProject_0_0", new InteropSDefT(break_bp_$New$Project_0_0.instance, context));
    varScope.addSVar("break_to_label_NewProject_0_1", new InteropSDefT(break_to_label_$New$Project_0_1.instance, context));
    varScope.addSVar("break_NewProject_0_0", new InteropSDefT(break_$New$Project_0_0.instance, context));
    varScope.addSVar("all_keys_NewProject_0_0", new InteropSDefT(all_keys_$New$Project_0_0.instance, context));
    varScope.addSVar("bigfold_NewProject_1_0", new InteropSDefT(bigfold_$New$Project_1_0.instance, context));
    varScope.addSVar("fold_NewProject_1_0", new InteropSDefT(fold_$New$Project_1_0.instance, context));
    varScope.addSVar("bigchain_NewProject_0_0", new InteropSDefT(bigchain_$New$Project_0_0.instance, context));
    varScope.addSVar("chain_NewProject_0_0", new InteropSDefT(chain_$New$Project_0_0.instance, context));
    varScope.addSVar("bigbagof_NewProject_0_0", new InteropSDefT(bigbagof_$New$Project_0_0.instance, context));
    varScope.addSVar("once_NewProject_0_0", new InteropSDefT(once_$New$Project_0_0.instance, context));
    varScope.addSVar("reverse_bagof_NewProject_1_0", new InteropSDefT(reverse_bagof_$New$Project_1_0.instance, context));
    varScope.addSVar("bagof_NewProject_0_0", new InteropSDefT(bagof_$New$Project_0_0.instance, context));
    varScope.addSVar("NewProject_0_0", new InteropSDefT($New$Project_0_0.instance, context));
    varScope.addSVar("aux_NewProject_0_2", new InteropSDefT(aux_$New$Project_0_2.instance, context));
    varScope.addSVar("innermost_scope_ResetFiles_1_0", new InteropSDefT(innermost_scope_$Reset$Files_1_0.instance, context));
    varScope.addSVar("undefine_ResetFiles_0_1", new InteropSDefT(undefine_$Reset$Files_0_1.instance, context));
    varScope.addSVar("throw_ResetFiles_1_1", new InteropSDefT(throw_$Reset$Files_1_1.instance, context));
    varScope.addSVar("continue_to_label_ResetFiles_0_1", new InteropSDefT(continue_to_label_$Reset$Files_0_1.instance, context));
    varScope.addSVar("continue_ResetFiles_0_0", new InteropSDefT(continue_$Reset$Files_0_0.instance, context));
    varScope.addSVar("break_bp_ResetFiles_0_0", new InteropSDefT(break_bp_$Reset$Files_0_0.instance, context));
    varScope.addSVar("break_to_label_ResetFiles_0_1", new InteropSDefT(break_to_label_$Reset$Files_0_1.instance, context));
    varScope.addSVar("break_ResetFiles_0_0", new InteropSDefT(break_$Reset$Files_0_0.instance, context));
    varScope.addSVar("all_keys_ResetFiles_0_0", new InteropSDefT(all_keys_$Reset$Files_0_0.instance, context));
    varScope.addSVar("bigfold_ResetFiles_1_0", new InteropSDefT(bigfold_$Reset$Files_1_0.instance, context));
    varScope.addSVar("fold_ResetFiles_1_0", new InteropSDefT(fold_$Reset$Files_1_0.instance, context));
    varScope.addSVar("bigchain_ResetFiles_0_0", new InteropSDefT(bigchain_$Reset$Files_0_0.instance, context));
    varScope.addSVar("chain_ResetFiles_0_0", new InteropSDefT(chain_$Reset$Files_0_0.instance, context));
    varScope.addSVar("bigbagof_ResetFiles_0_0", new InteropSDefT(bigbagof_$Reset$Files_0_0.instance, context));
    varScope.addSVar("once_ResetFiles_0_0", new InteropSDefT(once_$Reset$Files_0_0.instance, context));
    varScope.addSVar("reverse_bagof_ResetFiles_1_0", new InteropSDefT(reverse_bagof_$Reset$Files_1_0.instance, context));
    varScope.addSVar("bagof_ResetFiles_0_0", new InteropSDefT(bagof_$Reset$Files_0_0.instance, context));
    varScope.addSVar("ResetFiles_0_0", new InteropSDefT($Reset$Files_0_0.instance, context));
    varScope.addSVar("aux_ResetFiles_0_2", new InteropSDefT(aux_$Reset$Files_0_2.instance, context));
    varScope.addSVar("innermost_scope_IsLaunchedFromEclipse_1_0", new InteropSDefT(innermost_scope_$Is$Launched$From$Eclipse_1_0.instance, context));
    varScope.addSVar("undefine_IsLaunchedFromEclipse_0_1", new InteropSDefT(undefine_$Is$Launched$From$Eclipse_0_1.instance, context));
    varScope.addSVar("throw_IsLaunchedFromEclipse_1_1", new InteropSDefT(throw_$Is$Launched$From$Eclipse_1_1.instance, context));
    varScope.addSVar("continue_to_label_IsLaunchedFromEclipse_0_1", new InteropSDefT(continue_to_label_$Is$Launched$From$Eclipse_0_1.instance, context));
    varScope.addSVar("continue_IsLaunchedFromEclipse_0_0", new InteropSDefT(continue_$Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("break_bp_IsLaunchedFromEclipse_0_0", new InteropSDefT(break_bp_$Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("break_to_label_IsLaunchedFromEclipse_0_1", new InteropSDefT(break_to_label_$Is$Launched$From$Eclipse_0_1.instance, context));
    varScope.addSVar("break_IsLaunchedFromEclipse_0_0", new InteropSDefT(break_$Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("all_keys_IsLaunchedFromEclipse_0_0", new InteropSDefT(all_keys_$Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("bigfold_IsLaunchedFromEclipse_1_0", new InteropSDefT(bigfold_$Is$Launched$From$Eclipse_1_0.instance, context));
    varScope.addSVar("fold_IsLaunchedFromEclipse_1_0", new InteropSDefT(fold_$Is$Launched$From$Eclipse_1_0.instance, context));
    varScope.addSVar("bigchain_IsLaunchedFromEclipse_0_0", new InteropSDefT(bigchain_$Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("chain_IsLaunchedFromEclipse_0_0", new InteropSDefT(chain_$Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("bigbagof_IsLaunchedFromEclipse_0_0", new InteropSDefT(bigbagof_$Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("once_IsLaunchedFromEclipse_0_0", new InteropSDefT(once_$Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("reverse_bagof_IsLaunchedFromEclipse_1_0", new InteropSDefT(reverse_bagof_$Is$Launched$From$Eclipse_1_0.instance, context));
    varScope.addSVar("bagof_IsLaunchedFromEclipse_0_0", new InteropSDefT(bagof_$Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("IsLaunchedFromEclipse_0_0", new InteropSDefT($Is$Launched$From$Eclipse_0_0.instance, context));
    varScope.addSVar("aux_IsLaunchedFromEclipse_0_2", new InteropSDefT(aux_$Is$Launched$From$Eclipse_0_2.instance, context));
    varScope.addSVar("innermost_scope_DescriptorNamePrefix_1_0", new InteropSDefT(innermost_scope_$Descriptor$Name$Prefix_1_0.instance, context));
    varScope.addSVar("undefine_DescriptorNamePrefix_0_1", new InteropSDefT(undefine_$Descriptor$Name$Prefix_0_1.instance, context));
    varScope.addSVar("throw_DescriptorNamePrefix_1_1", new InteropSDefT(throw_$Descriptor$Name$Prefix_1_1.instance, context));
    varScope.addSVar("continue_to_label_DescriptorNamePrefix_0_1", new InteropSDefT(continue_to_label_$Descriptor$Name$Prefix_0_1.instance, context));
    varScope.addSVar("continue_DescriptorNamePrefix_0_0", new InteropSDefT(continue_$Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("break_bp_DescriptorNamePrefix_0_0", new InteropSDefT(break_bp_$Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("break_to_label_DescriptorNamePrefix_0_1", new InteropSDefT(break_to_label_$Descriptor$Name$Prefix_0_1.instance, context));
    varScope.addSVar("break_DescriptorNamePrefix_0_0", new InteropSDefT(break_$Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("all_keys_DescriptorNamePrefix_0_0", new InteropSDefT(all_keys_$Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("bigfold_DescriptorNamePrefix_1_0", new InteropSDefT(bigfold_$Descriptor$Name$Prefix_1_0.instance, context));
    varScope.addSVar("fold_DescriptorNamePrefix_1_0", new InteropSDefT(fold_$Descriptor$Name$Prefix_1_0.instance, context));
    varScope.addSVar("bigchain_DescriptorNamePrefix_0_0", new InteropSDefT(bigchain_$Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("chain_DescriptorNamePrefix_0_0", new InteropSDefT(chain_$Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("bigbagof_DescriptorNamePrefix_0_0", new InteropSDefT(bigbagof_$Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("once_DescriptorNamePrefix_0_0", new InteropSDefT(once_$Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("reverse_bagof_DescriptorNamePrefix_1_0", new InteropSDefT(reverse_bagof_$Descriptor$Name$Prefix_1_0.instance, context));
    varScope.addSVar("bagof_DescriptorNamePrefix_0_0", new InteropSDefT(bagof_$Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("DescriptorNamePrefix_0_0", new InteropSDefT($Descriptor$Name$Prefix_0_0.instance, context));
    varScope.addSVar("aux_DescriptorNamePrefix_0_1", new InteropSDefT(aux_$Descriptor$Name$Prefix_0_1.instance, context));
    varScope.addSVar("innermost_scope_MainDescriptorName_1_0", new InteropSDefT(innermost_scope_$Main$Descriptor$Name_1_0.instance, context));
    varScope.addSVar("undefine_MainDescriptorName_0_1", new InteropSDefT(undefine_$Main$Descriptor$Name_0_1.instance, context));
    varScope.addSVar("throw_MainDescriptorName_1_1", new InteropSDefT(throw_$Main$Descriptor$Name_1_1.instance, context));
    varScope.addSVar("continue_to_label_MainDescriptorName_0_1", new InteropSDefT(continue_to_label_$Main$Descriptor$Name_0_1.instance, context));
    varScope.addSVar("continue_MainDescriptorName_0_0", new InteropSDefT(continue_$Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("break_bp_MainDescriptorName_0_0", new InteropSDefT(break_bp_$Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("break_to_label_MainDescriptorName_0_1", new InteropSDefT(break_to_label_$Main$Descriptor$Name_0_1.instance, context));
    varScope.addSVar("break_MainDescriptorName_0_0", new InteropSDefT(break_$Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("all_keys_MainDescriptorName_0_0", new InteropSDefT(all_keys_$Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("bigfold_MainDescriptorName_1_0", new InteropSDefT(bigfold_$Main$Descriptor$Name_1_0.instance, context));
    varScope.addSVar("fold_MainDescriptorName_1_0", new InteropSDefT(fold_$Main$Descriptor$Name_1_0.instance, context));
    varScope.addSVar("bigchain_MainDescriptorName_0_0", new InteropSDefT(bigchain_$Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("chain_MainDescriptorName_0_0", new InteropSDefT(chain_$Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("bigbagof_MainDescriptorName_0_0", new InteropSDefT(bigbagof_$Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("once_MainDescriptorName_0_0", new InteropSDefT(once_$Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("reverse_bagof_MainDescriptorName_1_0", new InteropSDefT(reverse_bagof_$Main$Descriptor$Name_1_0.instance, context));
    varScope.addSVar("bagof_MainDescriptorName_0_0", new InteropSDefT(bagof_$Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("MainDescriptorName_0_0", new InteropSDefT($Main$Descriptor$Name_0_0.instance, context));
    varScope.addSVar("aux_MainDescriptorName_0_1", new InteropSDefT(aux_$Main$Descriptor$Name_0_1.instance, context));
    varScope.addSVar("innermost_scope_DefaultDefFile_1_0", new InteropSDefT(innermost_scope_$Default$Def$File_1_0.instance, context));
    varScope.addSVar("undefine_DefaultDefFile_0_1", new InteropSDefT(undefine_$Default$Def$File_0_1.instance, context));
    varScope.addSVar("throw_DefaultDefFile_1_1", new InteropSDefT(throw_$Default$Def$File_1_1.instance, context));
    varScope.addSVar("continue_to_label_DefaultDefFile_0_1", new InteropSDefT(continue_to_label_$Default$Def$File_0_1.instance, context));
    varScope.addSVar("continue_DefaultDefFile_0_0", new InteropSDefT(continue_$Default$Def$File_0_0.instance, context));
    varScope.addSVar("break_bp_DefaultDefFile_0_0", new InteropSDefT(break_bp_$Default$Def$File_0_0.instance, context));
    varScope.addSVar("break_to_label_DefaultDefFile_0_1", new InteropSDefT(break_to_label_$Default$Def$File_0_1.instance, context));
    varScope.addSVar("break_DefaultDefFile_0_0", new InteropSDefT(break_$Default$Def$File_0_0.instance, context));
    varScope.addSVar("all_keys_DefaultDefFile_0_0", new InteropSDefT(all_keys_$Default$Def$File_0_0.instance, context));
    varScope.addSVar("bigfold_DefaultDefFile_1_0", new InteropSDefT(bigfold_$Default$Def$File_1_0.instance, context));
    varScope.addSVar("fold_DefaultDefFile_1_0", new InteropSDefT(fold_$Default$Def$File_1_0.instance, context));
    varScope.addSVar("bigchain_DefaultDefFile_0_0", new InteropSDefT(bigchain_$Default$Def$File_0_0.instance, context));
    varScope.addSVar("chain_DefaultDefFile_0_0", new InteropSDefT(chain_$Default$Def$File_0_0.instance, context));
    varScope.addSVar("bigbagof_DefaultDefFile_0_0", new InteropSDefT(bigbagof_$Default$Def$File_0_0.instance, context));
    varScope.addSVar("once_DefaultDefFile_0_0", new InteropSDefT(once_$Default$Def$File_0_0.instance, context));
    varScope.addSVar("reverse_bagof_DefaultDefFile_1_0", new InteropSDefT(reverse_bagof_$Default$Def$File_1_0.instance, context));
    varScope.addSVar("bagof_DefaultDefFile_0_0", new InteropSDefT(bagof_$Default$Def$File_0_0.instance, context));
    varScope.addSVar("DefaultDefFile_0_0", new InteropSDefT($Default$Def$File_0_0.instance, context));
    varScope.addSVar("aux_DefaultDefFile_0_1", new InteropSDefT(aux_$Default$Def$File_0_1.instance, context));
  }

  private void register7(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope)
  { 
    compiledContext.registerComponent("generator");
    generator.init(compiledContext);
    varScope.addSVar("main_xml_doc2abox_0_0", new InteropSDefT(main_xml_doc2abox_0_0.instance, context));
    varScope.addSVar("xml_doc2abox_0_0", new InteropSDefT(xml_doc2abox_0_0.instance, context));
    varScope.addSVar("xml_to_box_0_0", new InteropSDefT(xml_to_box_0_0.instance, context));
    varScope.addSVar("get_prolog_lines_0_0", new InteropSDefT(get_prolog_lines_0_0.instance, context));
    varScope.addSVar("decl_to_attribute_0_0", new InteropSDefT(decl_to_attribute_0_0.instance, context));
    varScope.addSVar("simple_element_to_box_0_0", new InteropSDefT(simple_element_to_box_0_0.instance, context));
    varScope.addSVar("element_to_box_0_0", new InteropSDefT(element_to_box_0_0.instance, context));
    varScope.addSVar("open_tag_to_box_0_0", new InteropSDefT(open_tag_to_box_0_0.instance, context));
    varScope.addSVar("main_sdf2rtg_0_0", new InteropSDefT(main_sdf2rtg_0_0.instance, context));
    varScope.addSVar("ignore_option_0_0", new InteropSDefT(ignore_option_0_0.instance, context));
    varScope.addSVar("sdf2rtg_usage_0_0", new InteropSDefT(sdf2rtg_usage_0_0.instance, context));
    varScope.addSVar("sdf2rtg_about_0_0", new InteropSDefT(sdf2rtg_about_0_0.instance, context));
    varScope.addSVar("sdf_main_module_option_0_0", new InteropSDefT(sdf_main_module_option_0_0.instance, context));
    varScope.addSVar("sdf_main_module_option_1_0", new InteropSDefT(sdf_main_module_option_1_0.instance, context));
    varScope.addSVar("pass_sdf_main_module_0_0", new InteropSDefT(pass_sdf_main_module_0_0.instance, context));
    varScope.addSVar("get_sdf_main_module_0_0", new InteropSDefT(get_sdf_main_module_0_0.instance, context));
    varScope.addSVar("sdf_main_module_error_0_0", new InteropSDefT(sdf_main_module_error_0_0.instance, context));
    varScope.addSVar("sdf_desugar_0_0", new InteropSDefT(sdf_desugar_0_0.instance, context));
    varScope.addSVar("SdfDesugar_0_0", new InteropSDefT($Sdf$Desugar_0_0.instance, context));
    varScope.addSVar("SdfDesugarOnce_0_0", new InteropSDefT($Sdf$Desugar$Once_0_0.instance, context));
    varScope.addSVar("EnsureQuotes_0_0", new InteropSDefT($Ensure$Quotes_0_0.instance, context));
    varScope.addSVar("main_pack_sdf_0_0", new InteropSDefT(main_pack_sdf_0_0.instance, context));
    varScope.addSVar("pack_sdf_0_1", new InteropSDefT(pack_sdf_0_1.instance, context));
    varScope.addSVar("report_module_not_found_0_0", new InteropSDefT(report_module_not_found_0_0.instance, context));
    varScope.addSVar("pack_sdf_parse_sdf_0_0", new InteropSDefT(pack_sdf_parse_sdf_0_0.instance, context));
    varScope.addSVar("include_pathname_0_0", new InteropSDefT(include_pathname_0_0.instance, context));
    varScope.addSVar("include_from_dir_0_1", new InteropSDefT(include_from_dir_0_1.instance, context));
    varScope.addSVar("include_from_xtc_0_1", new InteropSDefT(include_from_xtc_0_1.instance, context));
    varScope.addSVar("include_from_def_0_1", new InteropSDefT(include_from_def_0_1.instance, context));
    varScope.addSVar("register_source_pathname_0_1", new InteropSDefT(register_source_pathname_0_1.instance, context));
    varScope.addSVar("get_source_pathname_0_0", new InteropSDefT(get_source_pathname_0_0.instance, context));
    varScope.addSVar("parse_sdf2_module_to_asfix_0_0", new InteropSDefT(parse_sdf2_module_to_asfix_0_0.instance, context));
    varScope.addSVar("parse_sdf2_module_to_asfix_0_1", new InteropSDefT(parse_sdf2_module_to_asfix_0_1.instance, context));
    varScope.addSVar("parse_sdf2_module_to_asfix_1_0", new InteropSDefT(parse_sdf2_module_to_asfix_1_0.instance, context));
    varScope.addSVar("pack_sdf_table_0_0", new InteropSDefT(pack_sdf_table_0_0.instance, context));
    varScope.addSVar("check_module_name_1_1", new InteropSDefT(check_module_name_1_1.instance, context));
    varScope.addSVar("get_module_name_from_asfix_0_0", new InteropSDefT(get_module_name_from_asfix_0_0.instance, context));
    varScope.addSVar("h_4225", new InteropSDefT(h_4225.instance, context));
    varScope.addSVar("i_4225", new InteropSDefT(i_4225.instance, context));
    varScope.addSVar("asfix_lex_yield_0_0", new InteropSDefT(asfix_lex_yield_0_0.instance, context));
    varScope.addSVar("get_sdf_imports_0_0", new InteropSDefT(get_sdf_imports_0_0.instance, context));
    varScope.addSVar("skip_non_imports_2_0", new InteropSDefT(skip_non_imports_2_0.instance, context));
    varScope.addSVar("get_module_name_0_0", new InteropSDefT(get_module_name_0_0.instance, context));
    varScope.addSVar("module_to_module_name_0_0", new InteropSDefT(module_to_module_name_0_0.instance, context));
    varScope.addSVar("ConcatModules_0_0", new InteropSDefT($Concat$Modules_0_0.instance, context));
    varScope.addSVar("concat_modules_0_0", new InteropSDefT(concat_modules_0_0.instance, context));
    varScope.addSVar("pack_sdf_options_0_0", new InteropSDefT(pack_sdf_options_0_0.instance, context));
    varScope.addSVar("of_config_0_0", new InteropSDefT(of_config_0_0.instance, context));
    varScope.addSVar("of_option_0_0", new InteropSDefT(of_option_0_0.instance, context));
    varScope.addSVar("OutputFormatOption_0_1", new InteropSDefT($Output$Format$Option_0_1.instance, context));
    varScope.addSVar("include_from_def_option_0_0", new InteropSDefT(include_from_def_option_0_0.instance, context));
    varScope.addSVar("process_options_0_0", new InteropSDefT(process_options_0_0.instance, context));
    varScope.addSVar("process_Idef_0_0", new InteropSDefT(process_$Idef_0_0.instance, context));
    varScope.addSVar("include_from_dir_option_0_0", new InteropSDefT(include_from_dir_option_0_0.instance, context));
    varScope.addSVar("ensure_directory_0_0", new InteropSDefT(ensure_directory_0_0.instance, context));
    varScope.addSVar("dep_options_0_0", new InteropSDefT(dep_options_0_0.instance, context));
    varScope.addSVar("include_path_0_0", new InteropSDefT(include_path_0_0.instance, context));
    varScope.addSVar("depfile_from_config_0_0", new InteropSDefT(depfile_from_config_0_0.instance, context));
    varScope.addSVar("maybe_create_depfile_0_0", new InteropSDefT(maybe_create_depfile_0_0.instance, context));
    varScope.addSVar("create_dep_file_0_0", new InteropSDefT(create_dep_file_0_0.instance, context));
    varScope.addSVar("MultiArgOption_3_0", new InteropSDefT($Multi$Arg$Option_3_0.instance, context));
    varScope.addSVar("verbose_msg_1_0", new InteropSDefT(verbose_msg_1_0.instance, context));
    varScope.addSVar("verbose_msg_2_0", new InteropSDefT(verbose_msg_2_0.instance, context));
    varScope.addSVar("verbose_msg_3_0", new InteropSDefT(verbose_msg_3_0.instance, context));
    varScope.addSVar("verbose_msg_4_0", new InteropSDefT(verbose_msg_4_0.instance, context));
    varScope.addSVar("verbose_msg_5_0", new InteropSDefT(verbose_msg_5_0.instance, context));
    varScope.addSVar("verbose_msg_6_0", new InteropSDefT(verbose_msg_6_0.instance, context));
    varScope.addSVar("verbose_msg_7_0", new InteropSDefT(verbose_msg_7_0.instance, context));
    varScope.addSVar("verbose_msg_8_0", new InteropSDefT(verbose_msg_8_0.instance, context));
    varScope.addSVar("as_string_1_0", new InteropSDefT(as_string_1_0.instance, context));
    varScope.addSVar("as_string_0_0", new InteropSDefT(as_string_0_0.instance, context));
    varScope.addSVar("verbose_msg_0_0", new InteropSDefT(verbose_msg_0_0.instance, context));
    varScope.addSVar("with_1_0", new InteropSDefT(with_1_0.instance, context));
    varScope.addSVar("verify_1_0", new InteropSDefT(verify_1_0.instance, context));
    varScope.addSVar("verify_2_0", new InteropSDefT(verify_2_0.instance, context));
    varScope.addSVar("verify_3_0", new InteropSDefT(verify_3_0.instance, context));
    varScope.addSVar("verify_4_0", new InteropSDefT(verify_4_0.instance, context));
    varScope.addSVar("tiny_debug_0_0", new InteropSDefT(tiny_debug_0_0.instance, context));
    varScope.addSVar("tiny_debug_1_0", new InteropSDefT(tiny_debug_1_0.instance, context));
    varScope.addSVar("to_tiny_string_0_0", new InteropSDefT(to_tiny_string_0_0.instance, context));
    varScope.addSVar("to_tiny_list_0_0", new InteropSDefT(to_tiny_list_0_0.instance, context));
    varScope.addSVar("to_tiny_substring_0_0", new InteropSDefT(to_tiny_substring_0_0.instance, context));
    varScope.addSVar("xtc_implode_asfix_0_0", new InteropSDefT(xtc_implode_asfix_0_0.instance, context));
    varScope.addSVar("xtc_asfix_yield_0_0", new InteropSDefT(xtc_asfix_yield_0_0.instance, context));
    varScope.addSVar("xtc_abox_format_0_0", new InteropSDefT(xtc_abox_format_0_0.instance, context));
    varScope.addSVar("xtc_ast2abox_1_0", new InteropSDefT(xtc_ast2abox_1_0.instance, context));
    varScope.addSVar("xtc_abox2text_0_0", new InteropSDefT(xtc_abox2text_0_0.instance, context));
    varScope.addSVar("xtc_abox2text_1_0", new InteropSDefT(xtc_abox2text_1_0.instance, context));
    varScope.addSVar("xtc_parse_pp_table_0_0", new InteropSDefT(xtc_parse_pp_table_0_0.instance, context));
    varScope.addSVar("xtc_sglr_1_0", new InteropSDefT(xtc_sglr_1_0.instance, context));
    varScope.addSVar("xtc_sglr_2_0", new InteropSDefT(xtc_sglr_2_0.instance, context));
    varScope.addSVar("xtc_sglri_0_1", new InteropSDefT(xtc_sglri_0_1.instance, context));
    varScope.addSVar("xtc_sglri_0_2", new InteropSDefT(xtc_sglri_0_2.instance, context));
    varScope.addSVar("xtc_pp_astratego_0_0", new InteropSDefT(xtc_pp_astratego_0_0.instance, context));
    varScope.addSVar("xtc_stratego_ensugar_0_0", new InteropSDefT(xtc_stratego_ensugar_0_0.instance, context));
    varScope.addSVar("pass_v_verbose_0_0", new InteropSDefT(pass_v_verbose_0_0.instance, context));
    varScope.addSVar("add_arg_flags_0_0", new InteropSDefT(add_arg_flags_0_0.instance, context));
    varScope.addSVar("xtc_parse_sdf2_module_0_0", new InteropSDefT(xtc_parse_sdf2_module_0_0.instance, context));
    varScope.addSVar("xtc_parse_sdf2_definition_0_0", new InteropSDefT(xtc_parse_sdf2_definition_0_0.instance, context));
    varScope.addSVar("xtc_parse_sdf2_0_0", new InteropSDefT(xtc_parse_sdf2_0_0.instance, context));
    varScope.addSVar("xtc_parse_sdf2_0_1", new InteropSDefT(xtc_parse_sdf2_0_1.instance, context));
    varScope.addSVar("xtc_pp_sdf2_0_0", new InteropSDefT(xtc_pp_sdf2_0_0.instance, context));
    varScope.addSVar("xtc_sdf2_normalize_0_1", new InteropSDefT(xtc_sdf2_normalize_0_1.instance, context));
    varScope.addSVar("core_sdf_grammar2rtg_0_0", new InteropSDefT(core_sdf_grammar2rtg_0_0.instance, context));
    varScope.addSVar("grammar2prodrules_0_0", new InteropSDefT(grammar2prodrules_0_0.instance, context));
    varScope.addSVar("cycle_error_0_0", new InteropSDefT(cycle_error_0_0.instance, context));
    varScope.addSVar("ignore_prod_0_0", new InteropSDefT(ignore_prod_0_0.instance, context));
    varScope.addSVar("match_sort_1_0", new InteropSDefT(match_sort_1_0.instance, context));
    varScope.addSVar("is_start_prod_0_0", new InteropSDefT(is_start_prod_0_0.instance, context));
    varScope.addSVar("start_prod2tree_0_0", new InteropSDefT(start_prod2tree_0_0.instance, context));
    varScope.addSVar("prod2prodrule_0_0", new InteropSDefT(prod2prodrule_0_0.instance, context));
    varScope.addSVar("inj2prodrule_0_0", new InteropSDefT(inj2prodrule_0_0.instance, context));
    varScope.addSVar("seq2prodrule_0_0", new InteropSDefT(seq2prodrule_0_0.instance, context));
    varScope.addSVar("alt2prodrule_0_0", new InteropSDefT(alt2prodrule_0_0.instance, context));
    varScope.addSVar("listinj2prodrule_0_0", new InteropSDefT(listinj2prodrule_0_0.instance, context));
    varScope.addSVar("opt2prodrule_0_0", new InteropSDefT(opt2prodrule_0_0.instance, context));
    varScope.addSVar("var2prodrule_0_0", new InteropSDefT(var2prodrule_0_0.instance, context));
    varScope.addSVar("get_nonterm_of_0_0", new InteropSDefT(get_nonterm_of_0_0.instance, context));
    varScope.addSVar("is_seq_symbol_0_0", new InteropSDefT(is_seq_symbol_0_0.instance, context));
    varScope.addSVar("is_alt_symbol_0_0", new InteropSDefT(is_alt_symbol_0_0.instance, context));
    varScope.addSVar("is_list_symbol_0_0", new InteropSDefT(is_list_symbol_0_0.instance, context));
    varScope.addSVar("is_nonterm_generator_0_0", new InteropSDefT(is_nonterm_generator_0_0.instance, context));
    varScope.addSVar("syms2trees_0_0", new InteropSDefT(syms2trees_0_0.instance, context));
    varScope.addSVar("is_empty_sym_0_0", new InteropSDefT(is_empty_sym_0_0.instance, context));
    varScope.addSVar("sym2tree_0_0", new InteropSDefT(sym2tree_0_0.instance, context));
    varScope.addSVar("sym2nonterm_0_0", new InteropSDefT(sym2nonterm_0_0.instance, context));
    varScope.addSVar("sort2nonterm_0_0", new InteropSDefT(sort2nonterm_0_0.instance, context));
    varScope.addSVar("get_cnstr_name_0_0", new InteropSDefT(get_cnstr_name_0_0.instance, context));
    varScope.addSVar("contains_bracket_0_0", new InteropSDefT(contains_bracket_0_0.instance, context));
    varScope.addSVar("contains_reject_0_0", new InteropSDefT(contains_reject_0_0.instance, context));
    varScope.addSVar("contains_rtg_1_0", new InteropSDefT(contains_rtg_1_0.instance, context));
    varScope.addSVar("err_1_0", new InteropSDefT(err_1_0.instance, context));
    varScope.addSVar("dbg_1_0", new InteropSDefT(dbg_1_0.instance, context));
    varScope.addSVar("sdf_symbol_to_string_0_0", new InteropSDefT(sdf_symbol_to_string_0_0.instance, context));
    varScope.addSVar("Symbol2String_0_0", new InteropSDefT($Symbol2$String_0_0.instance, context));
    varScope.addSVar("log_sym_0_3", new InteropSDefT(log_sym_0_3.instance, context));
    varScope.addSVar("log_prod_0_3", new InteropSDefT(log_prod_0_3.instance, context));
    varScope.addSVar("yield_0_0", new InteropSDefT(yield_0_0.instance, context));
    varScope.addSVar("flatten_0_0", new InteropSDefT(flatten_0_0.instance, context));
    varScope.addSVar("lit_tree_0_0", new InteropSDefT(lit_tree_0_0.instance, context));
    varScope.addSVar("conc_layout1_0_0", new InteropSDefT(conc_layout1_0_0.instance, context));
    varScope.addSVar("conc_layout2_0_0", new InteropSDefT(conc_layout2_0_0.instance, context));
    varScope.addSVar("conc_layout3_0_0", new InteropSDefT(conc_layout3_0_0.instance, context));
    varScope.addSVar("conc_layout_0_0", new InteropSDefT(conc_layout_0_0.instance, context));
    varScope.addSVar("UnStart_0_0", new InteropSDefT($Un$Start_0_0.instance, context));
    varScope.addSVar("CombineLayout_2_0", new InteropSDefT($Combine$Layout_2_0.instance, context));
    varScope.addSVar("concat_layout_0_0", new InteropSDefT(concat_layout_0_0.instance, context));
    varScope.addSVar("foldr1a_1_0", new InteropSDefT(foldr1a_1_0.instance, context));
    varScope.addSVar("pp_descriptor_to_string_0_0", new InteropSDefT(pp_descriptor_to_string_0_0.instance, context));
    varScope.addSVar("descriptor_to_abox_0_0", new InteropSDefT(descriptor_to_abox_0_0.instance, context));
    varScope.addSVar("descriptor_pp_table_0_0", new InteropSDefT(descriptor_pp_table_0_0.instance, context));
    varScope.addSVar("pp_fix_string_quotes_0_0", new InteropSDefT(pp_fix_string_quotes_0_0.instance, context));
    varScope.addSVar("pp_descriptor_contents_0_0", new InteropSDefT(pp_descriptor_contents_0_0.instance, context));
    varScope.addSVar("output_main_descriptor_file_2_0", new InteropSDefT(output_main_descriptor_file_2_0.instance, context));
    varScope.addSVar("output_initial_descriptor_file_2_0", new InteropSDefT(output_initial_descriptor_file_2_0.instance, context));
    varScope.addSVar("output_derived_descriptor_file_2_0", new InteropSDefT(output_derived_descriptor_file_2_0.instance, context));
    varScope.addSVar("output_descriptor_file_3_0", new InteropSDefT(output_descriptor_file_3_0.instance, context));
    varScope.addSVar("output_packed_descriptor_file_0_1", new InteropSDefT(output_packed_descriptor_file_0_1.instance, context));
    varScope.addSVar("is_descriptor_imported_0_1", new InteropSDefT(is_descriptor_imported_0_1.instance, context));
    varScope.addSVar("output_java_file_0_0", new InteropSDefT(output_java_file_0_0.instance, context));
    varScope.addSVar("output_java_file_0_1", new InteropSDefT(output_java_file_0_1.instance, context));
    varScope.addSVar("java_to_path_0_0", new InteropSDefT(java_to_path_0_0.instance, context));
    varScope.addSVar("output_xml_file_0_2", new InteropSDefT(output_xml_file_0_2.instance, context));
    varScope.addSVar("output_text_file_0_2", new InteropSDefT(output_text_file_0_2.instance, context));
    varScope.addSVar("output_text_file_p__0_2", new InteropSDefT(output_text_file_p__0_2.instance, context));
    varScope.addSVar("output_text_file_p__0_1", new InteropSDefT(output_text_file_p__0_1.instance, context));
    varScope.addSVar("pp_java_string_fallback_0_0", new InteropSDefT(pp_java_string_fallback_0_0.instance, context));
    varScope.addSVar("print_filename_0_2", new InteropSDefT(print_filename_0_2.instance, context));
    varScope.addSVar("create_dirs_0_0", new InteropSDefT(create_dirs_0_0.instance, context));
    varScope.addSVar("to_package_name_0_0", new InteropSDefT(to_package_name_0_0.instance, context));
    varScope.addSVar("class_name_0_0", new InteropSDefT(class_name_0_0.instance, context));
    varScope.addSVar("origin_term_0_0", new InteropSDefT(origin_term_0_0.instance, context));
    varScope.addSVar("origin_text_0_0", new InteropSDefT(origin_text_0_0.instance, context));
    varScope.addSVar("origin_equal_0_1", new InteropSDefT(origin_equal_0_1.instance, context));
    varScope.addSVar("origin_equal_0_0", new InteropSDefT(origin_equal_0_0.instance, context));
    varScope.addSVar("origin_set_relation_0_1", new InteropSDefT(origin_set_relation_0_1.instance, context));
    varScope.addSVar("origin_sublist_term_0_0", new InteropSDefT(origin_sublist_term_0_0.instance, context));
    varScope.addSVar("origin_offset_0_0", new InteropSDefT(origin_offset_0_0.instance, context));
    varScope.addSVar("origin_offset_with_layout_0_0", new InteropSDefT(origin_offset_with_layout_0_0.instance, context));
    varScope.addSVar("origin_offset_with_comments_0_0", new InteropSDefT(origin_offset_with_comments_0_0.instance, context));
    varScope.addSVar("origin_offset_comment_before_0_0", new InteropSDefT(origin_offset_comment_before_0_0.instance, context));
    varScope.addSVar("origin_offset_comment_after_0_0", new InteropSDefT(origin_offset_comment_after_0_0.instance, context));
    varScope.addSVar("origin_has_comments_0_0", new InteropSDefT(origin_has_comments_0_0.instance, context));
    varScope.addSVar("origin_indent_node_0_0", new InteropSDefT(origin_indent_node_0_0.instance, context));
    varScope.addSVar("origin_indent_value_node_0_0", new InteropSDefT(origin_indent_value_node_0_0.instance, context));
    varScope.addSVar("origin_separating_ws_0_0", new InteropSDefT(origin_separating_ws_0_0.instance, context));
    varScope.addSVar("origin_separator_offset_0_0", new InteropSDefT(origin_separator_offset_0_0.instance, context));
    varScope.addSVar("origin_separator_offset_with_lo_0_0", new InteropSDefT(origin_separator_offset_with_lo_0_0.instance, context));
    varScope.addSVar("origin_separator_text_0_0", new InteropSDefT(origin_separator_text_0_0.instance, context));
    varScope.addSVar("origin_separator_text_with_lo_0_0", new InteropSDefT(origin_separator_text_with_lo_0_0.instance, context));
    varScope.addSVar("origin_separator_with_lo_0_0", new InteropSDefT(origin_separator_with_lo_0_0.instance, context));
    varScope.addSVar("origin_separator_0_0", new InteropSDefT(origin_separator_0_0.instance, context));
    varScope.addSVar("origin_text_with_comments_0_0", new InteropSDefT(origin_text_with_comments_0_0.instance, context));
    varScope.addSVar("origin_textfragment_0_0", new InteropSDefT(origin_textfragment_0_0.instance, context));
    varScope.addSVar("prim_origin_textfragment_0_0", new InteropSDefT(prim_origin_textfragment_0_0.instance, context));
    varScope.addSVar("origin_sourcetext_0_0", new InteropSDefT(origin_sourcetext_0_0.instance, context));
    varScope.addSVar("prim_origin_offset_0_0", new InteropSDefT(prim_origin_offset_0_0.instance, context));
    varScope.addSVar("prim_origin_offset_with_layout_0_0", new InteropSDefT(prim_origin_offset_with_layout_0_0.instance, context));
    varScope.addSVar("prim_origin_offset_comment_before_0_0", new InteropSDefT(prim_origin_offset_comment_before_0_0.instance, context));
    varScope.addSVar("prim_origin_offset_comment_after_0_0", new InteropSDefT(prim_origin_offset_comment_after_0_0.instance, context));
    varScope.addSVar("prim_origin_indent_node_0_0", new InteropSDefT(prim_origin_indent_node_0_0.instance, context));
    varScope.addSVar("prim_origin_separating_ws_0_0", new InteropSDefT(prim_origin_separating_ws_0_0.instance, context));
    varScope.addSVar("prim_origin_separator_0_0", new InteropSDefT(prim_origin_separator_0_0.instance, context));
    varScope.addSVar("prim_origin_separator_with_lo_0_0", new InteropSDefT(prim_origin_separator_with_lo_0_0.instance, context));
    varScope.addSVar("tabsize_0_0", new InteropSDefT(tabsize_0_0.instance, context));
    varScope.addSVar("support_sublist_1_0", new InteropSDefT(support_sublist_1_0.instance, context));
    varScope.addSVar("spx_file_relative_path_0_0", new InteropSDefT(spx_file_relative_path_0_0.instance, context));
    varScope.addSVar("input_descriptor_file_0_0", new InteropSDefT(input_descriptor_file_0_0.instance, context));
    varScope.addSVar("set_input_dir_prefix_0_0", new InteropSDefT(set_input_dir_prefix_0_0.instance, context));
    varScope.addSVar("add_input_dir_prefix_0_0", new InteropSDefT(add_input_dir_prefix_0_0.instance, context));
    varScope.addSVar("include_input_dir_prefix_0_0", new InteropSDefT(include_input_dir_prefix_0_0.instance, context));
    varScope.addSVar("input_descriptor_import_0_0", new InteropSDefT(input_descriptor_import_0_0.instance, context));
    varScope.addSVar("rename_sort_0_1", new InteropSDefT(rename_sort_0_1.instance, context));
    varScope.addSVar("fetch_imports_0_0", new InteropSDefT(fetch_imports_0_0.instance, context));
    varScope.addSVar("is_older_than_0_0", new InteropSDefT(is_older_than_0_0.instance, context));
    varScope.addSVar("parse_table_descriptor_0_0", new InteropSDefT(parse_table_descriptor_0_0.instance, context));
    varScope.addSVar("postprocess_feedback_results_0_0", new InteropSDefT(postprocess_feedback_results_0_0.instance, context));
    varScope.addSVar("simplify_ambiguity_report_0_0", new InteropSDefT(simplify_ambiguity_report_0_0.instance, context));
    varScope.addSVar("simplify_ambiguity_element_0_0", new InteropSDefT(simplify_ambiguity_element_0_0.instance, context));
    varScope.addSVar("position_of_term_1_0", new InteropSDefT(position_of_term_1_0.instance, context));
    varScope.addSVar("position_of_term_1_1", new InteropSDefT(position_of_term_1_1.instance, context));
    varScope.addSVar("term_at_position_0_1", new InteropSDefT(term_at_position_0_1.instance, context));
    varScope.addSVar("at_position_1_1", new InteropSDefT(at_position_1_1.instance, context));
    varScope.addSVar("construct_textual_change_1_1", new InteropSDefT(construct_textual_change_1_1.instance, context));
    varScope.addSVar("construct_text_1_1", new InteropSDefT(construct_text_1_1.instance, context));
    varScope.addSVar("construct_text_for_primitive_0_0", new InteropSDefT(construct_text_for_primitive_0_0.instance, context));
    varScope.addSVar("construct_text_from_origin_1_1", new InteropSDefT(construct_text_from_origin_1_1.instance, context));
    varScope.addSVar("construct_text_by_compare_1_1", new InteropSDefT(construct_text_by_compare_1_1.instance, context));
    varScope.addSVar("construct_text_base_list_1_1", new InteropSDefT(construct_text_base_list_1_1.instance, context));
    varScope.addSVar("construct_text_by_pp_rec_1_1", new InteropSDefT(construct_text_by_pp_rec_1_1.instance, context));
    varScope.addSVar("construct_text_by_pp_1_1", new InteropSDefT(construct_text_by_pp_1_1.instance, context));
    varScope.addSVar("add_origin_comments_0_1", new InteropSDefT(add_origin_comments_0_1.instance, context));
    varScope.addSVar("construct_list_text_1_2", new InteropSDefT(construct_list_text_1_2.instance, context));
    varScope.addSVar("construct_list_fragments_1_1", new InteropSDefT(construct_list_fragments_1_1.instance, context));
    varScope.addSVar("construct_list_fragments_base_1_1", new InteropSDefT(construct_list_fragments_base_1_1.instance, context));
    varScope.addSVar("concat_fragments_0_1", new InteropSDefT(concat_fragments_0_1.instance, context));
    varScope.addSVar("is_whitespace_char_0_0", new InteropSDefT(is_whitespace_char_0_0.instance, context));
    varScope.addSVar("remove_indentation_0_1", new InteropSDefT(remove_indentation_0_1.instance, context));
    varScope.addSVar("dedent_line_chars_0_1", new InteropSDefT(dedent_line_chars_0_1.instance, context));
    varScope.addSVar("collect_ast_changes_0_0", new InteropSDefT(collect_ast_changes_0_0.instance, context));
    varScope.addSVar("collect_ast_changes_keep_parent_path_0_1", new InteropSDefT(collect_ast_changes_keep_parent_path_0_1.instance, context));
    varScope.addSVar("collect_ast_changes_in_list_0_0", new InteropSDefT(collect_ast_changes_in_list_0_0.instance, context));
    varScope.addSVar("at_least_one_match_0_0", new InteropSDefT(at_least_one_match_0_0.instance, context));
    varScope.addSVar("collect_ast_changes_in_list_0_1", new InteropSDefT(collect_ast_changes_in_list_0_1.instance, context));
    varScope.addSVar("collect_ast_changes_in_list_match_header_0_1", new InteropSDefT(collect_ast_changes_in_list_match_header_0_1.instance, context));
    varScope.addSVar("collect_ast_changes_in_list_match_header_0_2", new InteropSDefT(collect_ast_changes_in_list_match_header_0_2.instance, context));
    varScope.addSVar("collect_ast_changes_in_list_no_header_match_0_1", new InteropSDefT(collect_ast_changes_in_list_no_header_match_0_1.instance, context));
    varScope.addSVar("collect_ast_changes_in_list_insert_at_end_0_1", new InteropSDefT(collect_ast_changes_in_list_insert_at_end_0_1.instance, context));
    varScope.addSVar("same_signature_0_0", new InteropSDefT(same_signature_0_0.instance, context));
    varScope.addSVar("unmodified_list_0_0", new InteropSDefT(unmodified_list_0_0.instance, context));
    varScope.addSVar("origin_equivalent_0_0", new InteropSDefT(origin_equivalent_0_0.instance, context));
    varScope.addSVar("origin_equivalent_0_1", new InteropSDefT(origin_equivalent_0_1.instance, context));
    varScope.addSVar("ast_change_to_text_change_1_1", new InteropSDefT(ast_change_to_text_change_1_1.instance, context));
    varScope.addSVar("ast_change_to_text_change_1_2", new InteropSDefT(ast_change_to_text_change_1_2.instance, context));
    varScope.addSVar("get_separator_from_table_0_1", new InteropSDefT(get_separator_from_table_0_1.instance, context));
    varScope.addSVar("apply_text_changes_0_0", new InteropSDefT(apply_text_changes_0_0.instance, context));
    varScope.addSVar("apply_textual_change_0_0", new InteropSDefT(apply_textual_change_0_0.instance, context));
    varScope.addSVar("replace_in_text_0_0", new InteropSDefT(replace_in_text_0_0.instance, context));
    varScope.addSVar("compare_text_change_0_0", new InteropSDefT(compare_text_change_0_0.instance, context));
    varScope.addSVar("is_modification_0_0", new InteropSDefT(is_modification_0_0.instance, context));
    varScope.addSVar("reserve_class_name_0_0", new InteropSDefT(reserve_class_name_0_0.instance, context));
    varScope.addSVar("to_java_class_name_0_0", new InteropSDefT(to_java_class_name_0_0.instance, context));
    varScope.addSVar("is_java_identifier_char_0_0", new InteropSDefT(is_java_identifier_char_0_0.instance, context));
    varScope.addSVar("get_main_class_name_0_0", new InteropSDefT(get_main_class_name_0_0.instance, context));
    varScope.addSVar("build_syntax_descriptor_0_0", new InteropSDefT(build_syntax_descriptor_0_0.instance, context));
    varScope.addSVar("build_syntax_descriptor_generated_0_0", new InteropSDefT(build_syntax_descriptor_generated_0_0.instance, context));
    varScope.addSVar("create_syntax_descriptor_0_0", new InteropSDefT(create_syntax_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_derived_syntax_descriptor_0_0", new InteropSDefT(create_spx_derived_syntax_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_syntax_descriptor_0_0", new InteropSDefT(create_spx_syntax_descriptor_0_0.instance, context));
    varScope.addSVar("create_spxlang_main_descriptor_0_0", new InteropSDefT(create_spxlang_main_descriptor_0_0.instance, context));
    varScope.addSVar("create_spxlang_editorservices_0_0", new InteropSDefT(create_spxlang_editorservices_0_0.instance, context));
    varScope.addSVar("output_spx_derived_editor_services_0_0", new InteropSDefT(output_spx_derived_editor_services_0_0.instance, context));
    varScope.addSVar("output_spx_editor_services_0_0", new InteropSDefT(output_spx_editor_services_0_0.instance, context));
    varScope.addSVar("build_derived_references_descriptor_0_0", new InteropSDefT(build_derived_references_descriptor_0_0.instance, context));
    varScope.addSVar("build_references_descriptor_0_0", new InteropSDefT(build_references_descriptor_0_0.instance, context));
    varScope.addSVar("create_references_descriptor_0_0", new InteropSDefT(create_references_descriptor_0_0.instance, context));
    varScope.addSVar("create_derived_references_descriptor_0_0", new InteropSDefT(create_derived_references_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_derived_references_descriptor_0_0", new InteropSDefT(create_spx_derived_references_descriptor_0_0.instance, context));
    varScope.addSVar("build_outliner_descriptor_0_0", new InteropSDefT(build_outliner_descriptor_0_0.instance, context));
    varScope.addSVar("build_derived_outliner_descriptor_0_0", new InteropSDefT(build_derived_outliner_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_outliner_descriptor_0_0", new InteropSDefT(create_spx_outliner_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_derived_outliner_descriptor_0_0", new InteropSDefT(create_spx_derived_outliner_descriptor_0_0.instance, context));
    varScope.addSVar("create_outliner_descriptor_0_0", new InteropSDefT(create_outliner_descriptor_0_0.instance, context));
    varScope.addSVar("create_derived_outliner_descriptor_0_0", new InteropSDefT(create_derived_outliner_descriptor_0_0.instance, context));
    varScope.addSVar("heuristic_outliner_productions_0_0", new InteropSDefT(heuristic_outliner_productions_0_0.instance, context));
    varScope.addSVar("create_main_descriptor_0_0", new InteropSDefT(create_main_descriptor_0_0.instance, context));
    varScope.addSVar("default_main_descriptor_0_0", new InteropSDefT(default_main_descriptor_0_0.instance, context));
    varScope.addSVar("default_spx_main_descriptor_0_0", new InteropSDefT(default_spx_main_descriptor_0_0.instance, context));
    varScope.addSVar("build_folding_descriptor_0_0", new InteropSDefT(build_folding_descriptor_0_0.instance, context));
    varScope.addSVar("build_derived_folding_descriptor_0_0", new InteropSDefT(build_derived_folding_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_contentfolding_descriptor_0_0", new InteropSDefT(create_spx_contentfolding_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_derived_contentfolding_descriptor_0_0", new InteropSDefT(create_spx_derived_contentfolding_descriptor_0_0.instance, context));
    varScope.addSVar("create_folding_descriptor_0_0", new InteropSDefT(create_folding_descriptor_0_0.instance, context));
    varScope.addSVar("create_derived_folding_descriptor_0_0", new InteropSDefT(create_derived_folding_descriptor_0_0.instance, context));
    varScope.addSVar("heuristic_folding_productions_0_0", new InteropSDefT(heuristic_folding_productions_0_0.instance, context));
    varScope.addSVar("create_folding_or_outliner_rule_0_0", new InteropSDefT(create_folding_or_outliner_rule_0_0.instance, context));
    varScope.addSVar("build_contentcompletion_descriptor_0_0", new InteropSDefT(build_contentcompletion_descriptor_0_0.instance, context));
    varScope.addSVar("build_derived_contentcompletion_descriptor_0_0", new InteropSDefT(build_derived_contentcompletion_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_contentcompletion_descriptor_0_0", new InteropSDefT(create_spx_contentcompletion_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_derived_contentcompletion_descriptor_0_0", new InteropSDefT(create_spx_derived_contentcompletion_descriptor_0_0.instance, context));
    varScope.addSVar("create_completions_descriptor_0_0", new InteropSDefT(create_completions_descriptor_0_0.instance, context));
    varScope.addSVar("create_derived_completions_descriptor_0_0", new InteropSDefT(create_derived_completions_descriptor_0_0.instance, context));
    varScope.addSVar("keyword_to_completion_rule_0_0", new InteropSDefT(keyword_to_completion_rule_0_0.instance, context));
    varScope.addSVar("collect_all_keywords_0_0", new InteropSDefT(collect_all_keywords_0_0.instance, context));
    varScope.addSVar("prod_to_keywords_0_0", new InteropSDefT(prod_to_keywords_0_0.instance, context));
    varScope.addSVar("pattern_to_keywords_0_0", new InteropSDefT(pattern_to_keywords_0_0.instance, context));
    varScope.addSVar("pattern_to_keywords_1_0_0", new InteropSDefT(pattern_to_keywords_1_0_0.instance, context));
    varScope.addSVar("pattern_to_keywords_2_0_0", new InteropSDefT(pattern_to_keywords_2_0_0.instance, context));
    varScope.addSVar("is_prefixed_keyword_0_0", new InteropSDefT(is_prefixed_keyword_0_0.instance, context));
    varScope.addSVar("build_colorer_descriptor_0_0", new InteropSDefT(build_colorer_descriptor_0_0.instance, context));
    varScope.addSVar("build_derived_colorer_descriptor_0_0", new InteropSDefT(build_derived_colorer_descriptor_0_0.instance, context));
    varScope.addSVar("create_colorer_descriptor_0_0", new InteropSDefT(create_colorer_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_colorer_descriptor_0_0", new InteropSDefT(create_spx_colorer_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_derived_colorer_descriptor_0_0", new InteropSDefT(create_spx_derived_colorer_descriptor_0_0.instance, context));
    varScope.addSVar("build_derived_builders_descriptor_0_0", new InteropSDefT(build_derived_builders_descriptor_0_0.instance, context));
    varScope.addSVar("create_builders_descriptor_0_0", new InteropSDefT(create_builders_descriptor_0_0.instance, context));
    varScope.addSVar("create_spx_derived_builders_descriptor_0_0", new InteropSDefT(create_spx_derived_builders_descriptor_0_0.instance, context));
    varScope.addSVar("configure_main_descriptor_0_0", new InteropSDefT(configure_main_descriptor_0_0.instance, context));
    varScope.addSVar("current_main_descriptor_file_0_0", new InteropSDefT(current_main_descriptor_file_0_0.instance, context));
    varScope.addSVar("find_main_module_0_0", new InteropSDefT(find_main_module_0_0.instance, context));
    varScope.addSVar("find_start_symbol_0_0", new InteropSDefT(find_start_symbol_0_0.instance, context));
    varScope.addSVar("find_editor_extensions_0_0", new InteropSDefT(find_editor_extensions_0_0.instance, context));
    varScope.addSVar("find_package_name_0_0", new InteropSDefT(find_package_name_0_0.instance, context));
    varScope.addSVar("verbosity_scope_1_1", new InteropSDefT(verbosity_scope_1_1.instance, context));
    varScope.addSVar("descriptor_name_0_0", new InteropSDefT(descriptor_name_0_0.instance, context));
    varScope.addSVar("main_descriptor_name_0_0", new InteropSDefT(main_descriptor_name_0_0.instance, context));
    varScope.addSVar("condition_to_java_0_0", new InteropSDefT(condition_to_java_0_0.instance, context));
    varScope.addSVar("parameterized_sort_to_asfix_sort_0_0", new InteropSDefT(parameterized_sort_to_asfix_sort_0_0.instance, context));
    varScope.addSVar("try_get_sort_name_0_0", new InteropSDefT(try_get_sort_name_0_0.instance, context));
    varScope.addSVar("check_validity_0_0", new InteropSDefT(check_validity_0_0.instance, context));
    varScope.addSVar("constraint_error_0_0", new InteropSDefT(constraint_error_0_0.instance, context));
    varScope.addSVar("register_rtg_0_0", new InteropSDefT(register_rtg_0_0.instance, context));
    varScope.addSVar("verified_start_symbol_0_0", new InteropSDefT(verified_start_symbol_0_0.instance, context));
    varScope.addSVar("heuristic_register_production_0_0", new InteropSDefT(heuristic_register_production_0_0.instance, context));
    varScope.addSVar("heuristic_child_sorts_0_0", new InteropSDefT(heuristic_child_sorts_0_0.instance, context));
    varScope.addSVar("heuristic_collect_all_rtg_1_0", new InteropSDefT(heuristic_collect_all_rtg_1_0.instance, context));
    varScope.addSVar("heuristic_collect_all_visit_sort_2_0", new InteropSDefT(heuristic_collect_all_visit_sort_2_0.instance, context));
    varScope.addSVar("heuristic_collect_all_visit_production_2_0", new InteropSDefT(heuristic_collect_all_visit_production_2_0.instance, context));
    varScope.addSVar("heuristic_follow_single_child_productions1_1_0", new InteropSDefT(heuristic_follow_single_child_productions1_1_0.instance, context));
    varScope.addSVar("heuristic_follow_single_child_productions_1_0", new InteropSDefT(heuristic_follow_single_child_productions_1_0.instance, context));
    varScope.addSVar("heuristic_rtg_sort_name_0_0", new InteropSDefT(heuristic_rtg_sort_name_0_0.instance, context));
    varScope.addSVar("heuristic_asfix_sort_name_0_0", new InteropSDefT(heuristic_asfix_sort_name_0_0.instance, context));
    varScope.addSVar("non_terminal_sort_name_0_0", new InteropSDefT(non_terminal_sort_name_0_0.instance, context));
    varScope.addSVar("constructor_name_0_0", new InteropSDefT(constructor_name_0_0.instance, context));
    varScope.addSVar("heuristic_sort_is_identifier_0_0", new InteropSDefT(heuristic_sort_is_identifier_0_0.instance, context));
    varScope.addSVar("heuristic_sort_is_unvisited_list_0_0", new InteropSDefT(heuristic_sort_is_unvisited_list_0_0.instance, context));
    varScope.addSVar("heuristic_sort_is_list_0_0", new InteropSDefT(heuristic_sort_is_list_0_0.instance, context));
    varScope.addSVar("heuristic_production_has_no_same_sort_descendant_0_0", new InteropSDefT(heuristic_production_has_no_same_sort_descendant_0_0.instance, context));
    varScope.addSVar("is_string_production_0_0", new InteropSDefT(is_string_production_0_0.instance, context));
    varScope.addSVar("is_list_production_0_0", new InteropSDefT(is_list_production_0_0.instance, context));
    varScope.addSVar("is_list_term_0_0", new InteropSDefT(is_list_term_0_0.instance, context));
    varScope.addSVar("is_unvisited_list_production_0_0", new InteropSDefT(is_unvisited_list_production_0_0.instance, context));
    varScope.addSVar("get_list_production_item_sort_0_0", new InteropSDefT(get_list_production_item_sort_0_0.instance, context));
    varScope.addSVar("validator_name_0_0", new InteropSDefT(validator_name_0_0.instance, context));
    varScope.addSVar("create_validator_0_0", new InteropSDefT(create_validator_0_0.instance, context));
    varScope.addSVar("create_spxlang_lexicalconstructs_0_0", new InteropSDefT(create_spxlang_lexicalconstructs_0_0.instance, context));
    varScope.addSVar("create_lang_idenditifiers_0_0", new InteropSDefT(create_lang_idenditifiers_0_0.instance, context));
    varScope.addSVar("create_lang_literals_0_0", new InteropSDefT(create_lang_literals_0_0.instance, context));
    varScope.addSVar("create_lang_keywords_0_0", new InteropSDefT(create_lang_keywords_0_0.instance, context));
    varScope.addSVar("create_lang_layout_0_0", new InteropSDefT(create_lang_layout_0_0.instance, context));
    varScope.addSVar("create_spxlang_definitions_0_0", new InteropSDefT(create_spxlang_definitions_0_0.instance, context));
    varScope.addSVar("create_main_language_constructs_0_0", new InteropSDefT(create_main_language_constructs_0_0.instance, context));
    varScope.addSVar("create_lang_type_system_0_0", new InteropSDefT(create_lang_type_system_0_0.instance, context));
    varScope.addSVar("create_symantic_analyzer_0_0", new InteropSDefT(create_symantic_analyzer_0_0.instance, context));
    varScope.addSVar("create_spoofaxlang_config_0_0", new InteropSDefT(create_spoofaxlang_config_0_0.instance, context));
    varScope.addSVar("create_spx_common_strategies_0_0", new InteropSDefT(create_spx_common_strategies_0_0.instance, context));
    varScope.addSVar("create_spxlang_adapters_0_0", new InteropSDefT(create_spxlang_adapters_0_0.instance, context));
    varScope.addSVar("create_main_adapters_0_0", new InteropSDefT(create_main_adapters_0_0.instance, context));
    varScope.addSVar("create_builders_definition_0_0", new InteropSDefT(create_builders_definition_0_0.instance, context));
    varScope.addSVar("create_reference_resolver_definition_0_0", new InteropSDefT(create_reference_resolver_definition_0_0.instance, context));
    varScope.addSVar("create_semantic_completion_definition_0_0", new InteropSDefT(create_semantic_completion_definition_0_0.instance, context));
    varScope.addSVar("create_project_file_0_0", new InteropSDefT(create_project_file_0_0.instance, context));
    varScope.addSVar("create_pp_table_0_0", new InteropSDefT(create_pp_table_0_0.instance, context));
    varScope.addSVar("create_plugin_xml_0_0", new InteropSDefT(create_plugin_xml_0_0.instance, context));
    varScope.addSVar("copy_or_create_parse_table_0_0", new InteropSDefT(copy_or_create_parse_table_0_0.instance, context));
    varScope.addSVar("copy_parse_table_0_0", new InteropSDefT(copy_parse_table_0_0.instance, context));
    varScope.addSVar("create_parse_table_0_0", new InteropSDefT(create_parse_table_0_0.instance, context));
    varScope.addSVar("sdf2table_0_0", new InteropSDefT(sdf2table_0_0.instance, context));
    varScope.addSVar("create_permissive_grammar_0_0", new InteropSDefT(create_permissive_grammar_0_0.instance, context));
    varScope.addSVar("permissive_grammar_target_0_0", new InteropSDefT(permissive_grammar_target_0_0.instance, context));
    varScope.addSVar("parse_table_target_0_0", new InteropSDefT(parse_table_target_0_0.instance, context));
    varScope.addSVar("parse_controller_name_0_0", new InteropSDefT(parse_controller_name_0_0.instance, context));
    varScope.addSVar("create_parse_controller_0_0", new InteropSDefT(create_parse_controller_0_0.instance, context));
    varScope.addSVar("create_packed_descriptor_file_0_0", new InteropSDefT(create_packed_descriptor_file_0_0.instance, context));
    varScope.addSVar("remove_empty_sections_0_0", new InteropSDefT(remove_empty_sections_0_0.instance, context));
    varScope.addSVar("packed_descriptor_file_name_0_0", new InteropSDefT(packed_descriptor_file_name_0_0.instance, context));
    varScope.addSVar("create_manifest_0_0", new InteropSDefT(create_manifest_0_0.instance, context));
    varScope.addSVar("create_jdt_prefs_0_0", new InteropSDefT(create_jdt_prefs_0_0.instance, context));
    varScope.addSVar("create_java_strategy_0_0", new InteropSDefT(create_java_strategy_0_0.instance, context));
    varScope.addSVar("create_java_strategy_1_0_0", new InteropSDefT(create_java_strategy_1_0_0.instance, context));
    varScope.addSVar("create_java_strategy_2_0_0", new InteropSDefT(create_java_strategy_2_0_0.instance, context));
    varScope.addSVar("create_java_strategy_3_0_0", new InteropSDefT(create_java_strategy_3_0_0.instance, context));
    varScope.addSVar("create_grammar_0_0", new InteropSDefT(create_grammar_0_0.instance, context));
    varScope.addSVar("create_grammar_main_0_0", new InteropSDefT(create_grammar_main_0_0.instance, context));
    varScope.addSVar("create_grammar_common_0_0", new InteropSDefT(create_grammar_common_0_0.instance, context));
    varScope.addSVar("trans_module_name_0_0", new InteropSDefT(trans_module_name_0_0.instance, context));
    varScope.addSVar("create_example_trans_0_0", new InteropSDefT(create_example_trans_0_0.instance, context));
    varScope.addSVar("create_example_file_0_0", new InteropSDefT(create_example_file_0_0.instance, context));
    varScope.addSVar("create_common_trans_0_0", new InteropSDefT(create_common_trans_0_0.instance, context));
    varScope.addSVar("create_classpath_0_0", new InteropSDefT(create_classpath_0_0.instance, context));
    varScope.addSVar("builder_xml_name_0_0", new InteropSDefT(builder_xml_name_0_0.instance, context));
    varScope.addSVar("create_builder_xml_0_0", new InteropSDefT(create_builder_xml_0_0.instance, context));
    varScope.addSVar("create_build_xml_0_0", new InteropSDefT(create_build_xml_0_0.instance, context));
    varScope.addSVar("create_build_generated_xml_0_0", new InteropSDefT(create_build_generated_xml_0_0.instance, context));
    varScope.addSVar("create_build_properties_0_0", new InteropSDefT(create_build_properties_0_0.instance, context));
    varScope.addSVar("create_activator_0_0", new InteropSDefT(create_activator_0_0.instance, context));
    varScope.addSVar("copy_jars_0_0", new InteropSDefT(copy_jars_0_0.instance, context));
    varScope.addSVar("copy_def_file_0_0", new InteropSDefT(copy_def_file_0_0.instance, context));
    varScope.addSVar("sdf2imp_options_0_0", new InteropSDefT(sdf2imp_options_0_0.instance, context));
    varScope.addSVar("input_file_option_0_0", new InteropSDefT(input_file_option_0_0.instance, context));
    varScope.addSVar("parse_table_option_0_0", new InteropSDefT(parse_table_option_0_0.instance, context));
    varScope.addSVar("extensions_option_0_0", new InteropSDefT(extensions_option_0_0.instance, context));
    varScope.addSVar("package_name_option_0_0", new InteropSDefT(package_name_option_0_0.instance, context));
    varScope.addSVar("project_name_option_0_0", new InteropSDefT(project_name_option_0_0.instance, context));
    varScope.addSVar("jar_option_0_0", new InteropSDefT(jar_option_0_0.instance, context));
    varScope.addSVar("start_symbol_option_0_0", new InteropSDefT(start_symbol_option_0_0.instance, context));
    varScope.addSVar("new_project_option_0_0", new InteropSDefT(new_project_option_0_0.instance, context));
    varScope.addSVar("reset_files_option_0_0", new InteropSDefT(reset_files_option_0_0.instance, context));
    varScope.addSVar("parameterized_sort_to_rtg_sort_0_0", new InteropSDefT(parameterized_sort_to_rtg_sort_0_0.instance, context));
    varScope.addSVar("get_package_name_0_0", new InteropSDefT(get_package_name_0_0.instance, context));
    varScope.addSVar("get_package_name_1_0", new InteropSDefT(get_package_name_1_0.instance, context));
    varScope.addSVar("get_package_name_text_0_0", new InteropSDefT(get_package_name_text_0_0.instance, context));
    varScope.addSVar("default_package_name_0_0", new InteropSDefT(default_package_name_0_0.instance, context));
    varScope.addSVar("require_option_1_1", new InteropSDefT(require_option_1_1.instance, context));
    varScope.addSVar("main_SpoofaxGenerator_0_0", new InteropSDefT(main_$Spoofax$Generator_0_0.instance, context));
    varScope.addSVar("sdf2imp_jvm_0_0", new InteropSDefT(sdf2imp_jvm_0_0.instance, context));
    varScope.addSVar("find_def_file_0_0", new InteropSDefT(find_def_file_0_0.instance, context));
    varScope.addSVar("generate_spoofaxlang_example_0_0", new InteropSDefT(generate_spoofaxlang_example_0_0.instance, context));
    varScope.addSVar("sdf2imp_0_0", new InteropSDefT(sdf2imp_0_0.instance, context));
    varScope.addSVar("is_heuristic_services_needed_0_0", new InteropSDefT(is_heuristic_services_needed_0_0.instance, context));
    varScope.addSVar("sdf2rtg_0_0", new InteropSDefT(sdf2rtg_0_0.instance, context));
    varScope.addSVar("pack_default_sdf_0_0", new InteropSDefT(pack_default_sdf_0_0.instance, context));
    varScope.addSVar("Element_4_0", new InteropSDefT($Element_4_0.instance, context));
    varScope.addSVar("EmptyElement_2_0", new InteropSDefT($Empty$Element_2_0.instance, context));
    varScope.addSVar("Document_3_0", new InteropSDefT($Document_3_0.instance, context));
    varScope.addSVar("Literal_1_0", new InteropSDefT($Literal_1_0.instance, context));
    varScope.addSVar("SingleQuoted_1_0", new InteropSDefT($Single$Quoted_1_0.instance, context));
    varScope.addSVar("DoubleQuoted_1_0", new InteropSDefT($Double$Quoted_1_0.instance, context));
    varScope.addSVar("Attribute_2_0", new InteropSDefT($Attribute_2_0.instance, context));
    varScope.addSVar("EntityRef_1_0", new InteropSDefT($Entity$Ref_1_0.instance, context));
    varScope.addSVar("HexCharRef_1_0", new InteropSDefT($Hex$Char$Ref_1_0.instance, context));
    varScope.addSVar("DecCharRef_1_0", new InteropSDefT($Dec$Char$Ref_1_0.instance, context));
    varScope.addSVar("CDATASection_1_0", new InteropSDefT($C$D$A$T$A$Section_1_0.instance, context));
    varScope.addSVar("Text_1_0", new InteropSDefT($Text_1_0.instance, context));
    varScope.addSVar("DocTypeDecl_2_0", new InteropSDefT($Doc$Type$Decl_2_0.instance, context));
    varScope.addSVar("DocTypePrologue_2_0", new InteropSDefT($Doc$Type$Prologue_2_0.instance, context));
    varScope.addSVar("VersionSingle_1_0", new InteropSDefT($Version$Single_1_0.instance, context));
    varScope.addSVar("Version_1_0", new InteropSDefT($Version_1_0.instance, context));
    varScope.addSVar("EncodingSingle_1_0", new InteropSDefT($Encoding$Single_1_0.instance, context));
    varScope.addSVar("Encoding_1_0", new InteropSDefT($Encoding_1_0.instance, context));
    varScope.addSVar("StandaloneSingle_1_0", new InteropSDefT($Standalone$Single_1_0.instance, context));
    varScope.addSVar("Standalone_1_0", new InteropSDefT($Standalone_1_0.instance, context));
    varScope.addSVar("EncodingDecl_1_0", new InteropSDefT($Encoding$Decl_1_0.instance, context));
    varScope.addSVar("VersionDecl_1_0", new InteropSDefT($Version$Decl_1_0.instance, context));
    varScope.addSVar("StandaloneDecl_1_0", new InteropSDefT($Standalone$Decl_1_0.instance, context));
    varScope.addSVar("XMLDecl_3_0", new InteropSDefT($X$M$L$Decl_3_0.instance, context));
    varScope.addSVar("Epilogue_1_0", new InteropSDefT($Epilogue_1_0.instance, context));
    varScope.addSVar("Prologue_3_0", new InteropSDefT($Prologue_3_0.instance, context));
    varScope.addSVar("PublicExternalID_2_0", new InteropSDefT($Public$External$I$D_2_0.instance, context));
    varScope.addSVar("SystemExternalID_1_0", new InteropSDefT($System$External$I$D_1_0.instance, context));
    varScope.addSVar("PI_2_0", new InteropSDefT($P$I_2_0.instance, context));
    varScope.addSVar("Prefix_1_0", new InteropSDefT($Prefix_1_0.instance, context));
    varScope.addSVar("QName_2_0", new InteropSDefT($Q$Name_2_0.instance, context));
    varScope.addSVar("IgnoreMissingCons_0_0", new InteropSDefT($Ignore$Missing$Cons_0_0.instance, context));
    varScope.addSVar("SdfMainModuleFlag_0_0", new InteropSDefT($Sdf$Main$Module$Flag_0_0.instance, context));
    varScope.addSVar("IncludeDef_1_0", new InteropSDefT($Include$Def_1_0.instance, context));
    varScope.addSVar("IncludeDef_2_0", new InteropSDefT($Include$Def_2_0.instance, context));
    varScope.addSVar("IncludeDir_1_0", new InteropSDefT($Include$Dir_1_0.instance, context));
    varScope.addSVar("IncludeXTC_0_0", new InteropSDefT($Include$X$T$C_0_0.instance, context));
    varScope.addSVar("IncludePathName_1_0", new InteropSDefT($Include$Path$Name_1_0.instance, context));
    varScope.addSVar("IncludeFromPath_1_0", new InteropSDefT($Include$From$Path_1_0.instance, context));
    varScope.addSVar("rtg_1_0", new InteropSDefT(rtg_1_0.instance, context));
    varScope.addSVar("ignore_0_0", new InteropSDefT(ignore_0_0.instance, context));
    varScope.addSVar("flatlex_2_0", new InteropSDefT(flatlex_2_0.instance, context));
    varScope.addSVar("ConcLayout_1_0", new InteropSDefT($Conc$Layout_1_0.instance, context));
    varScope.addSVar("INSERT__AT__END_2_0", new InteropSDefT($I$N$S$E$R$T__$A$T__$E$N$D_2_0.instance, context));
    varScope.addSVar("INSERT__BEFORE_2_0", new InteropSDefT($I$N$S$E$R$T__$B$E$F$O$R$E_2_0.instance, context));
    varScope.addSVar("DETETION_1_0", new InteropSDefT($D$E$T$E$T$I$O$N_1_0.instance, context));
    varScope.addSVar("REPLACEMENT_2_0", new InteropSDefT($R$E$P$L$A$C$E$M$E$N$T_2_0.instance, context));
    varScope.addSVar("INSERT__AT__END_3_0", new InteropSDefT($I$N$S$E$R$T__$A$T__$E$N$D_3_0.instance, context));
    varScope.addSVar("INSERT__BEFORE_3_0", new InteropSDefT($I$N$S$E$R$T__$B$E$F$O$R$E_3_0.instance, context));
    varScope.addSVar("REPLACEMENT_3_0", new InteropSDefT($R$E$P$L$A$C$E$M$E$N$T_3_0.instance, context));
    varScope.addSVar("deprecated_0_0", new InteropSDefT(deprecated_0_0.instance, context));
    varScope.addSVar("deprecated_1_0", new InteropSDefT(deprecated_1_0.instance, context));
    varScope.addSVar("CommentLine_1_0", new InteropSDefT($Comment$Line_1_0.instance, context));
    varScope.addSVar("EmptyLine_0_0", new InteropSDefT($Empty$Line_0_0.instance, context));
    varScope.addSVar("Error_2_0", new InteropSDefT($Error_2_0.instance, context));
    varScope.addSVar("ImportRenamed_2_0", new InteropSDefT($Import$Renamed_2_0.instance, context));
    varScope.addSVar("Import_1_0", new InteropSDefT($Import_1_0.instance, context));
    varScope.addSVar("NoImports_0_0", new InteropSDefT($No$Imports_0_0.instance, context));
    varScope.addSVar("Imports_1_0", new InteropSDefT($Imports_1_0.instance, context));
    varScope.addSVar("Module_3_0", new InteropSDefT($Module_3_0.instance, context));
    varScope.addSVar("Source_0_0", new InteropSDefT($Source_0_0.instance, context));
    varScope.addSVar("Cursor_0_0", new InteropSDefT($Cursor_0_0.instance, context));
    varScope.addSVar("Meta_0_0", new InteropSDefT($Meta_0_0.instance, context));
    varScope.addSVar("Persistent_0_0", new InteropSDefT($Persistent_0_0.instance, context));
    varScope.addSVar("RealTime_0_0", new InteropSDefT($Real$Time_0_0.instance, context));
    varScope.addSVar("OpenEditor_0_0", new InteropSDefT($Open$Editor_0_0.instance, context));
    varScope.addSVar("Linked_0_0", new InteropSDefT($Linked_0_0.instance, context));
    varScope.addSVar("Blank_0_0", new InteropSDefT($Blank_0_0.instance, context));
    varScope.addSVar("Disable_0_0", new InteropSDefT($Disable_0_0.instance, context));
    varScope.addSVar("PlaceholderWithSort_2_0", new InteropSDefT($Placeholder$With$Sort_2_0.instance, context));
    varScope.addSVar("Placeholder_1_0", new InteropSDefT($Placeholder_1_0.instance, context));
    varScope.addSVar("CompletionPrefix_1_0", new InteropSDefT($Completion$Prefix_1_0.instance, context));
    varScope.addSVar("NoCompletionPrefix_0_0", new InteropSDefT($No$Completion$Prefix_0_0.instance, context));
    varScope.addSVar("NoColor_0_0", new InteropSDefT($No$Color_0_0.instance, context));
    varScope.addSVar("ColorRGB_3_0", new InteropSDefT($Color$R$G$B_3_0.instance, context));
    varScope.addSVar("ColorDefault_0_0", new InteropSDefT($Color$Default_0_0.instance, context));
    varScope.addSVar("BOLD__ITALIC_0_0", new InteropSDefT($B$O$L$D__$I$T$A$L$I$C_0_0.instance, context));
    varScope.addSVar("ITALIC_0_0", new InteropSDefT($I$T$A$L$I$C_0_0.instance, context));
    varScope.addSVar("BOLD_0_0", new InteropSDefT($B$O$L$D_0_0.instance, context));
    varScope.addSVar("NORMAL_0_0", new InteropSDefT($N$O$R$M$A$L_0_0.instance, context));
    varScope.addSVar("TK__UNKNOWN_0_0", new InteropSDefT($T$K__$U$N$K$N$O$W$N_0_0.instance, context));
    varScope.addSVar("TK__ERROR_0_0", new InteropSDefT($T$K__$E$R$R$O$R_0_0.instance, context));
    varScope.addSVar("TK__VAR_0_0", new InteropSDefT($T$K__$V$A$R_0_0.instance, context));
    varScope.addSVar("TK__OPERATOR_0_0", new InteropSDefT($T$K__$O$P$E$R$A$T$O$R_0_0.instance, context));
    varScope.addSVar("TK__KEYWORD_0_0", new InteropSDefT($T$K__$K$E$Y$W$O$R$D_0_0.instance, context));
    varScope.addSVar("TK__STRING_0_0", new InteropSDefT($T$K__$S$T$R$I$N$G_0_0.instance, context));
    varScope.addSVar("TK__LAYOUT_0_0", new InteropSDefT($T$K__$L$A$Y$O$U$T_0_0.instance, context));
    varScope.addSVar("TK__NUMBER_0_0", new InteropSDefT($T$K__$N$U$M$B$E$R_0_0.instance, context));
    varScope.addSVar("TK__IDENTIFIER_0_0", new InteropSDefT($T$K__$I$D$E$N$T$I$F$I$E$R_0_0.instance, context));
    varScope.addSVar("Token_1_0", new InteropSDefT($Token_1_0.instance, context));
    varScope.addSVar("AttributeRef_1_0", new InteropSDefT($Attribute$Ref_1_0.instance, context));
    varScope.addSVar("Attribute_3_0", new InteropSDefT($Attribute_3_0.instance, context));
    varScope.addSVar("ColorDef_2_0", new InteropSDefT($Color$Def_2_0.instance, context));
    varScope.addSVar("ColorRuleNamed_3_0", new InteropSDefT($Color$Rule$Named_3_0.instance, context));
    varScope.addSVar("ColorRuleAllNamed_3_0", new InteropSDefT($Color$Rule$All$Named_3_0.instance, context));
    varScope.addSVar("ColorRule_2_0", new InteropSDefT($Color$Rule_2_0.instance, context));
    varScope.addSVar("ColorRuleAll_2_0", new InteropSDefT($Color$Rule$All_2_0.instance, context));
    varScope.addSVar("OutlineRule_1_0", new InteropSDefT($Outline$Rule_1_0.instance, context));
    varScope.addSVar("Folded_0_0", new InteropSDefT($Folded_0_0.instance, context));
    varScope.addSVar("FoldRuleAll_2_0", new InteropSDefT($Fold$Rule$All_2_0.instance, context));
    varScope.addSVar("FoldRule_2_0", new InteropSDefT($Fold$Rule_2_0.instance, context));
    varScope.addSVar("IndentDef_1_0", new InteropSDefT($Indent$Def_1_0.instance, context));
    varScope.addSVar("FenceDef_2_0", new InteropSDefT($Fence$Def_2_0.instance, context));
    varScope.addSVar("NoContinuation_0_0", new InteropSDefT($No$Continuation_0_0.instance, context));
    varScope.addSVar("BlockCommentDef_3_0", new InteropSDefT($Block$Comment$Def_3_0.instance, context));
    varScope.addSVar("IdentifierLexical_1_0", new InteropSDefT($Identifier$Lexical_1_0.instance, context));
    varScope.addSVar("IndentDefs_1_0", new InteropSDefT($Indent$Defs_1_0.instance, context));
    varScope.addSVar("FenceDefs_1_0", new InteropSDefT($Fence$Defs_1_0.instance, context));
    varScope.addSVar("BlockCommentDefs_1_0", new InteropSDefT($Block$Comment$Defs_1_0.instance, context));
    varScope.addSVar("LineCommentPrefix_1_0", new InteropSDefT($Line$Comment$Prefix_1_0.instance, context));
    varScope.addSVar("Disambiguator_1_0", new InteropSDefT($Disambiguator_1_0.instance, context));
    varScope.addSVar("UnmanagedTablePrefix_1_0", new InteropSDefT($Unmanaged$Table$Prefix_1_0.instance, context));
    varScope.addSVar("Aliases_1_0", new InteropSDefT($Aliases_1_0.instance, context));
    varScope.addSVar("Extends_1_0", new InteropSDefT($Extends_1_0.instance, context));
    varScope.addSVar("URL_1_0", new InteropSDefT($U$R$L_1_0.instance, context));
    varScope.addSVar("StartSymbols_1_0", new InteropSDefT($Start$Symbols_1_0.instance, context));
    varScope.addSVar("TableProvider_1_0", new InteropSDefT($Table$Provider_1_0.instance, context));
    varScope.addSVar("Table_1_0", new InteropSDefT($Table_1_0.instance, context));
    varScope.addSVar("Extensions_1_0", new InteropSDefT($Extensions_1_0.instance, context));
    varScope.addSVar("LanguageId_1_0", new InteropSDefT($Language$Id_1_0.instance, context));
    varScope.addSVar("LanguageName_1_0", new InteropSDefT($Language$Name_1_0.instance, context));
    varScope.addSVar("Values_1_0", new InteropSDefT($Values_1_0.instance, context));
    varScope.addSVar("Refactorings_2_0", new InteropSDefT($Refactorings_2_0.instance, context));
    varScope.addSVar("Builders_2_0", new InteropSDefT($Builders_2_0.instance, context));
    varScope.addSVar("Completions_2_0", new InteropSDefT($Completions_2_0.instance, context));
    varScope.addSVar("References_2_0", new InteropSDefT($References_2_0.instance, context));
    varScope.addSVar("Colorer_2_0", new InteropSDefT($Colorer_2_0.instance, context));
    varScope.addSVar("Outliner_2_0", new InteropSDefT($Outliner_2_0.instance, context));
    varScope.addSVar("Folding_2_0", new InteropSDefT($Folding_2_0.instance, context));
    varScope.addSVar("Language_2_0", new InteropSDefT($Language_2_0.instance, context));
    varScope.addSVar("Attribute_1_0", new InteropSDefT($Attribute_1_0.instance, context));
    varScope.addSVar("Strategy_1_0", new InteropSDefT($Strategy_1_0.instance, context));
    varScope.addSVar("Refactoring_4_0", new InteropSDefT($Refactoring_4_0.instance, context));
    varScope.addSVar("PrettyPrint_1_0", new InteropSDefT($Pretty$Print_1_0.instance, context));
    varScope.addSVar("PPTable_1_0", new InteropSDefT($P$P$Table_1_0.instance, context));
    varScope.addSVar("BuilderCaption_1_0", new InteropSDefT($Builder$Caption_1_0.instance, context));
    varScope.addSVar("Builder_3_0", new InteropSDefT($Builder_3_0.instance, context));
    varScope.addSVar("SemanticObserver_1_0", new InteropSDefT($Semantic$Observer_1_0.instance, context));
    varScope.addSVar("CompletionTemplateEx_4_0", new InteropSDefT($Completion$Template$Ex_4_0.instance, context));
    varScope.addSVar("CompletionTrigger_2_0", new InteropSDefT($Completion$Trigger_2_0.instance, context));
    varScope.addSVar("CompletionTemplateWithSort_4_0", new InteropSDefT($Completion$Template$With$Sort_4_0.instance, context));
    varScope.addSVar("CompletionTemplate_3_0", new InteropSDefT($Completion$Template_3_0.instance, context));
    varScope.addSVar("CompletionKeyword_2_0", new InteropSDefT($Completion$Keyword_2_0.instance, context));
    varScope.addSVar("CompletionProposer_1_0", new InteropSDefT($Completion$Proposer_1_0.instance, context));
    varScope.addSVar("OccurrenceRule_2_0", new InteropSDefT($Occurrence$Rule_2_0.instance, context));
    varScope.addSVar("HoverRule_2_0", new InteropSDefT($Hover$Rule_2_0.instance, context));
    varScope.addSVar("ReferenceRule_2_0", new InteropSDefT($Reference$Rule_2_0.instance, context));
    varScope.addSVar("ReferenceHoverRule_3_0", new InteropSDefT($Reference$Hover$Rule_3_0.instance, context));
    varScope.addSVar("OnSave_2_0", new InteropSDefT($On$Save_2_0.instance, context));
    varScope.addSVar("SemanticProvider_1_0", new InteropSDefT($Semantic$Provider_1_0.instance, context));
    varScope.addSVar("SortAndConstructor_2_0", new InteropSDefT($Sort$And$Constructor_2_0.instance, context));
    varScope.addSVar("Constructor_1_0", new InteropSDefT($Constructor_1_0.instance, context));
    varScope.addSVar("ConstructorOnly_1_0", new InteropSDefT($Constructor$Only_1_0.instance, context));
    varScope.addSVar("ListSort_1_0", new InteropSDefT($List$Sort_1_0.instance, context));
    varScope.addSVar("Sort_1_0", new InteropSDefT($Sort_1_0.instance, context));
    varScope.addSVar("SimpleAttribute_2_0", new InteropSDefT($Simple$Attribute_2_0.instance, context));
    varScope.addSVar("Module__START_3_0", new InteropSDefT($Module__$S$T$A$R$T_3_0.instance, context));
    varScope.addSVar("SDF__START_3_0", new InteropSDefT($S$D$F__$S$T$A$R$T_3_0.instance, context));
    varScope.addSVar("EmptyModuleIterStar_0_0", new InteropSDefT($Empty$Module$Iter$Star_0_0.instance, context));
    varScope.addSVar("NonEmptyModuleIterStar_1_0", new InteropSDefT($Non$Empty$Module$Iter$Star_1_0.instance, context));
    varScope.addSVar("MM_iter_3_0", new InteropSDefT($M$M_iter_3_0.instance, context));
    varScope.addSVar("M_iter_1_0", new InteropSDefT($M_iter_1_0.instance, context));
    varScope.addSVar("Module_s_overlay_1_0", new InteropSDefT($Module_s_overlay_1_0.instance, context));
    varScope.addSVar("Definition_overlay_2_0", new InteropSDefT($Definition_overlay_2_0.instance, context));
    varScope.addSVar("MAX__TINY__LIST__PARTS_0_0", new InteropSDefT($M$A$X__$T$I$N$Y__$L$I$S$T__$P$A$R$T$S_0_0.instance, context));
    varScope.addSVar("MAX__TINY__LIST__PARTS__1_0_0", new InteropSDefT($M$A$X__$T$I$N$Y__$L$I$S$T__$P$A$R$T$S__1_0_0.instance, context));
  }

  private void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader, org.spoofax.interpreter.core.VarScope varScope)
  { 
    registerLazy7(context, compiledContext, classLoader, varScope);
    varScope.addSVar("MAX__TINY__LIST__PARTS__COMMAS_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$M$A$X__$T$I$N$Y__$L$I$S$T__$P$A$R$T$S__$C$O$M$M$A$S_0_0", context));
    varScope.addSVar("conc_prod_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.conc_prod_1_0", context));
    varScope.addSVar("iter_inj_prod_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.iter_inj_prod_1_0", context));
    varScope.addSVar("af_iter_inj_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.af_iter_inj_2_0", context));
    varScope.addSVar("af_conc_4_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.af_conc_4_0", context));
    varScope.addSVar("flatlit_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.flatlit_1_0", context));
    varScope.addSVar("white_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.white_1_0", context));
    varScope.addSVar("start_4_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.start_4_0", context));
    varScope.addSVar("CfLayout_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Cf$Layout_1_0", context));
    varScope.addSVar("ConcCfLayout_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Conc$Cf$Layout_2_0", context));
    varScope.addSVar("NoCfLayout_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$No$Cf$Layout_0_0", context));
    varScope.addSVar("CfOptLayout_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Cf$Opt$Layout_1_0", context));
    varScope.addSVar("Space_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Space_0_0", context));
    varScope.addSVar("NewLine_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$New$Line_0_0", context));
    varScope.addSVar("OptNewLine_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Opt$New$Line_0_0", context));
    varScope.addSVar("tname__ASTNODE_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.tname__$A$S$T$N$O$D$E_0_0", context));
    varScope.addSVar("tname__VISITOR_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.tname__$V$I$S$I$T$O$R_0_0", context));
    varScope.addSVar("tname__OUTLINERBASE_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.tname__$O$U$T$L$I$N$E$R$B$A$S$E_0_0", context));
    varScope.addSVar("tname__FOLDINGBASE_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.tname__$F$O$L$D$I$N$G$B$A$S$E_0_0", context));
    varScope.addSVar("tname__ITOKEN_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.tname__$I$T$O$K$E$N_0_0", context));
    varScope.addSVar("innermost_scope_SourcePathName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Source$Path$Name_1_0", context));
    varScope.addSVar("DYNAMIC__CALLS_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$D$Y$N$A$M$I$C__$C$A$L$L$S_0_0", context));
    varScope.addSVar("undefine_SourcePathName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Source$Path$Name_0_1", context));
    varScope.addSVar("throw_SourcePathName_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Source$Path$Name_1_1", context));
    varScope.addSVar("continue_to_label_SourcePathName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Source$Path$Name_0_1", context));
    varScope.addSVar("continue_SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Source$Path$Name_0_0", context));
    varScope.addSVar("break_bp_SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Source$Path$Name_0_0", context));
    varScope.addSVar("break_to_label_SourcePathName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Source$Path$Name_0_1", context));
    varScope.addSVar("break_SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Source$Path$Name_0_0", context));
    varScope.addSVar("all_keys_SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Source$Path$Name_0_0", context));
    varScope.addSVar("bigfold_SourcePathName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Source$Path$Name_1_0", context));
    varScope.addSVar("fold_SourcePathName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Source$Path$Name_1_0", context));
    varScope.addSVar("bigchain_SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Source$Path$Name_0_0", context));
    varScope.addSVar("chain_SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Source$Path$Name_0_0", context));
    varScope.addSVar("bigbagof_SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Source$Path$Name_0_0", context));
    varScope.addSVar("once_SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Source$Path$Name_0_0", context));
    varScope.addSVar("reverse_bagof_SourcePathName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Source$Path$Name_1_0", context));
    varScope.addSVar("bagof_SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Source$Path$Name_0_0", context));
    varScope.addSVar("SourcePathName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Source$Path$Name_0_0", context));
    varScope.addSVar("aux_SourcePathName_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Source$Path$Name_0_2", context));
    varScope.addSVar("innermost_scope_PackSDFTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Pack$S$D$F$Table_1_0", context));
    varScope.addSVar("undefine_PackSDFTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Pack$S$D$F$Table_0_1", context));
    varScope.addSVar("throw_PackSDFTable_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Pack$S$D$F$Table_1_1", context));
    varScope.addSVar("continue_to_label_PackSDFTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Pack$S$D$F$Table_0_1", context));
    varScope.addSVar("continue_PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("break_bp_PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("break_to_label_PackSDFTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Pack$S$D$F$Table_0_1", context));
    varScope.addSVar("break_PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("all_keys_PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("bigfold_PackSDFTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Pack$S$D$F$Table_1_0", context));
    varScope.addSVar("fold_PackSDFTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Pack$S$D$F$Table_1_0", context));
    varScope.addSVar("bigchain_PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("chain_PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("bigbagof_PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("once_PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("reverse_bagof_PackSDFTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Pack$S$D$F$Table_1_0", context));
    varScope.addSVar("bagof_PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("PackSDFTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Pack$S$D$F$Table_0_0", context));
    varScope.addSVar("aux_PackSDFTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Pack$S$D$F$Table_0_1", context));
    varScope.addSVar("innermost_scope_ImportedFrom_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Imported$From_1_0", context));
    varScope.addSVar("undefine_ImportedFrom_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Imported$From_0_1", context));
    varScope.addSVar("throw_ImportedFrom_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Imported$From_1_1", context));
    varScope.addSVar("continue_to_label_ImportedFrom_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Imported$From_0_1", context));
    varScope.addSVar("continue_ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Imported$From_0_0", context));
    varScope.addSVar("break_bp_ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Imported$From_0_0", context));
    varScope.addSVar("break_to_label_ImportedFrom_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Imported$From_0_1", context));
    varScope.addSVar("break_ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Imported$From_0_0", context));
    varScope.addSVar("all_keys_ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Imported$From_0_0", context));
    varScope.addSVar("bigfold_ImportedFrom_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Imported$From_1_0", context));
    varScope.addSVar("fold_ImportedFrom_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Imported$From_1_0", context));
    varScope.addSVar("bigchain_ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Imported$From_0_0", context));
    varScope.addSVar("chain_ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Imported$From_0_0", context));
    varScope.addSVar("bigbagof_ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Imported$From_0_0", context));
    varScope.addSVar("once_ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Imported$From_0_0", context));
    varScope.addSVar("reverse_bagof_ImportedFrom_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Imported$From_1_0", context));
    varScope.addSVar("bagof_ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Imported$From_0_0", context));
    varScope.addSVar("ImportedFrom_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Imported$From_0_0", context));
    varScope.addSVar("aux_ImportedFrom_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Imported$From_0_2", context));
    varScope.addSVar("innermost_scope_DescriptorPPTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Descriptor$P$P$Table_1_0", context));
    varScope.addSVar("undefine_DescriptorPPTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Descriptor$P$P$Table_0_1", context));
    varScope.addSVar("throw_DescriptorPPTable_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Descriptor$P$P$Table_1_1", context));
    varScope.addSVar("continue_to_label_DescriptorPPTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Descriptor$P$P$Table_0_1", context));
    varScope.addSVar("continue_DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("break_bp_DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("break_to_label_DescriptorPPTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Descriptor$P$P$Table_0_1", context));
    varScope.addSVar("break_DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("all_keys_DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("bigfold_DescriptorPPTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Descriptor$P$P$Table_1_0", context));
    varScope.addSVar("fold_DescriptorPPTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Descriptor$P$P$Table_1_0", context));
    varScope.addSVar("bigchain_DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("chain_DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("bigbagof_DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("once_DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("reverse_bagof_DescriptorPPTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Descriptor$P$P$Table_1_0", context));
    varScope.addSVar("bagof_DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("DescriptorPPTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Descriptor$P$P$Table_0_0", context));
    varScope.addSVar("aux_DescriptorPPTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Descriptor$P$P$Table_0_1", context));
    varScope.addSVar("innermost_scope_InputDirPrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Input$Dir$Prefix_1_0", context));
    varScope.addSVar("undefine_InputDirPrefix_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Input$Dir$Prefix_0_1", context));
    varScope.addSVar("throw_InputDirPrefix_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Input$Dir$Prefix_1_1", context));
    varScope.addSVar("continue_to_label_InputDirPrefix_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Input$Dir$Prefix_0_1", context));
    varScope.addSVar("continue_InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("break_bp_InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("break_to_label_InputDirPrefix_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Input$Dir$Prefix_0_1", context));
    varScope.addSVar("break_InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("all_keys_InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("bigfold_InputDirPrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Input$Dir$Prefix_1_0", context));
    varScope.addSVar("fold_InputDirPrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Input$Dir$Prefix_1_0", context));
    varScope.addSVar("bigchain_InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("chain_InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("bigbagof_InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("once_InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("reverse_bagof_InputDirPrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Input$Dir$Prefix_1_0", context));
    varScope.addSVar("bagof_InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("InputDirPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Input$Dir$Prefix_0_0", context));
    varScope.addSVar("aux_InputDirPrefix_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Input$Dir$Prefix_0_1", context));
    varScope.addSVar("innermost_scope_IsImported_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Is$Imported_1_0", context));
    varScope.addSVar("undefine_IsImported_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Is$Imported_0_1", context));
    varScope.addSVar("throw_IsImported_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Is$Imported_1_1", context));
    varScope.addSVar("continue_to_label_IsImported_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Is$Imported_0_1", context));
    varScope.addSVar("continue_IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Is$Imported_0_0", context));
    varScope.addSVar("break_bp_IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Is$Imported_0_0", context));
    varScope.addSVar("break_to_label_IsImported_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Is$Imported_0_1", context));
    varScope.addSVar("break_IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Is$Imported_0_0", context));
    varScope.addSVar("all_keys_IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Is$Imported_0_0", context));
    varScope.addSVar("bigfold_IsImported_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Is$Imported_1_0", context));
    varScope.addSVar("fold_IsImported_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Is$Imported_1_0", context));
    varScope.addSVar("bigchain_IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Is$Imported_0_0", context));
    varScope.addSVar("chain_IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Is$Imported_0_0", context));
    varScope.addSVar("bigbagof_IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Is$Imported_0_0", context));
    varScope.addSVar("once_IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Is$Imported_0_0", context));
    varScope.addSVar("reverse_bagof_IsImported_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Is$Imported_1_0", context));
    varScope.addSVar("bagof_IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Is$Imported_0_0", context));
    varScope.addSVar("IsImported_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Is$Imported_0_0", context));
    varScope.addSVar("aux_IsImported_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Is$Imported_0_2", context));
    varScope.addSVar("innermost_scope_CachedParseTableDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Cached$Parse$Table$Descriptor_1_0", context));
    varScope.addSVar("undefine_CachedParseTableDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Cached$Parse$Table$Descriptor_0_1", context));
    varScope.addSVar("throw_CachedParseTableDescriptor_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Cached$Parse$Table$Descriptor_1_1", context));
    varScope.addSVar("continue_to_label_CachedParseTableDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Cached$Parse$Table$Descriptor_0_1", context));
    varScope.addSVar("continue_CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("break_bp_CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("break_to_label_CachedParseTableDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Cached$Parse$Table$Descriptor_0_1", context));
    varScope.addSVar("break_CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("all_keys_CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("bigfold_CachedParseTableDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Cached$Parse$Table$Descriptor_1_0", context));
    varScope.addSVar("fold_CachedParseTableDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Cached$Parse$Table$Descriptor_1_0", context));
    varScope.addSVar("bigchain_CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("chain_CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("bigbagof_CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("once_CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("reverse_bagof_CachedParseTableDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Cached$Parse$Table$Descriptor_1_0", context));
    varScope.addSVar("bagof_CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("CachedParseTableDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Cached$Parse$Table$Descriptor_0_0", context));
    varScope.addSVar("aux_CachedParseTableDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Cached$Parse$Table$Descriptor_0_1", context));
    varScope.addSVar("innermost_scope_IsReservedClassName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Is$Reserved$Class$Name_1_0", context));
    varScope.addSVar("undefine_IsReservedClassName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Is$Reserved$Class$Name_0_1", context));
    varScope.addSVar("throw_IsReservedClassName_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Is$Reserved$Class$Name_1_1", context));
    varScope.addSVar("continue_to_label_IsReservedClassName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Is$Reserved$Class$Name_0_1", context));
    varScope.addSVar("continue_IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("break_bp_IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("break_to_label_IsReservedClassName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Is$Reserved$Class$Name_0_1", context));
    varScope.addSVar("break_IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("all_keys_IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("bigfold_IsReservedClassName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Is$Reserved$Class$Name_1_0", context));
    varScope.addSVar("fold_IsReservedClassName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Is$Reserved$Class$Name_1_0", context));
    varScope.addSVar("bigchain_IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("chain_IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("bigbagof_IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("once_IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("reverse_bagof_IsReservedClassName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Is$Reserved$Class$Name_1_0", context));
    varScope.addSVar("bagof_IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("IsReservedClassName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Is$Reserved$Class$Name_0_0", context));
    varScope.addSVar("aux_IsReservedClassName_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Is$Reserved$Class$Name_0_2", context));
    varScope.addSVar("innermost_scope_MainDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Main$Descriptor_1_0", context));
    varScope.addSVar("undefine_MainDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Main$Descriptor_0_1", context));
    varScope.addSVar("throw_MainDescriptor_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Main$Descriptor_1_1", context));
    varScope.addSVar("continue_to_label_MainDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Main$Descriptor_0_1", context));
    varScope.addSVar("continue_MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Main$Descriptor_0_0", context));
    varScope.addSVar("break_bp_MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Main$Descriptor_0_0", context));
    varScope.addSVar("break_to_label_MainDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Main$Descriptor_0_1", context));
    varScope.addSVar("break_MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Main$Descriptor_0_0", context));
    varScope.addSVar("all_keys_MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Main$Descriptor_0_0", context));
    varScope.addSVar("bigfold_MainDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Main$Descriptor_1_0", context));
    varScope.addSVar("fold_MainDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Main$Descriptor_1_0", context));
    varScope.addSVar("bigchain_MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Main$Descriptor_0_0", context));
    varScope.addSVar("chain_MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Main$Descriptor_0_0", context));
    varScope.addSVar("bigbagof_MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Main$Descriptor_0_0", context));
    varScope.addSVar("once_MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Main$Descriptor_0_0", context));
    varScope.addSVar("reverse_bagof_MainDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Main$Descriptor_1_0", context));
    varScope.addSVar("bagof_MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Main$Descriptor_0_0", context));
    varScope.addSVar("MainDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Main$Descriptor_0_0", context));
    varScope.addSVar("aux_MainDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Main$Descriptor_0_1", context));
    varScope.addSVar("innermost_scope_EditorExtensions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Editor$Extensions_1_0", context));
    varScope.addSVar("undefine_EditorExtensions_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Editor$Extensions_0_1", context));
    varScope.addSVar("throw_EditorExtensions_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Editor$Extensions_1_1", context));
    varScope.addSVar("continue_to_label_EditorExtensions_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Editor$Extensions_0_1", context));
    varScope.addSVar("continue_EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Editor$Extensions_0_0", context));
    varScope.addSVar("break_bp_EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Editor$Extensions_0_0", context));
    varScope.addSVar("break_to_label_EditorExtensions_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Editor$Extensions_0_1", context));
    varScope.addSVar("break_EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Editor$Extensions_0_0", context));
    varScope.addSVar("all_keys_EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Editor$Extensions_0_0", context));
    varScope.addSVar("bigfold_EditorExtensions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Editor$Extensions_1_0", context));
    varScope.addSVar("fold_EditorExtensions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Editor$Extensions_1_0", context));
    varScope.addSVar("bigchain_EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Editor$Extensions_0_0", context));
    varScope.addSVar("chain_EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Editor$Extensions_0_0", context));
    varScope.addSVar("bigbagof_EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Editor$Extensions_0_0", context));
    varScope.addSVar("once_EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Editor$Extensions_0_0", context));
    varScope.addSVar("reverse_bagof_EditorExtensions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Editor$Extensions_1_0", context));
    varScope.addSVar("bagof_EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Editor$Extensions_0_0", context));
    varScope.addSVar("EditorExtensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Editor$Extensions_0_0", context));
    varScope.addSVar("aux_EditorExtensions_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Editor$Extensions_0_1", context));
    varScope.addSVar("innermost_scope_BasePackage_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Base$Package_1_0", context));
    varScope.addSVar("undefine_BasePackage_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Base$Package_0_1", context));
    varScope.addSVar("throw_BasePackage_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Base$Package_1_1", context));
    varScope.addSVar("continue_to_label_BasePackage_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Base$Package_0_1", context));
    varScope.addSVar("continue_BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Base$Package_0_0", context));
    varScope.addSVar("break_bp_BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Base$Package_0_0", context));
    varScope.addSVar("break_to_label_BasePackage_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Base$Package_0_1", context));
    varScope.addSVar("break_BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Base$Package_0_0", context));
    varScope.addSVar("all_keys_BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Base$Package_0_0", context));
    varScope.addSVar("bigfold_BasePackage_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Base$Package_1_0", context));
    varScope.addSVar("fold_BasePackage_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Base$Package_1_0", context));
    varScope.addSVar("bigchain_BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Base$Package_0_0", context));
    varScope.addSVar("chain_BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Base$Package_0_0", context));
    varScope.addSVar("bigbagof_BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Base$Package_0_0", context));
    varScope.addSVar("once_BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Base$Package_0_0", context));
    varScope.addSVar("reverse_bagof_BasePackage_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Base$Package_1_0", context));
    varScope.addSVar("bagof_BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Base$Package_0_0", context));
    varScope.addSVar("BasePackage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Base$Package_0_0", context));
    varScope.addSVar("aux_BasePackage_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Base$Package_0_1", context));
    varScope.addSVar("innermost_scope_StartSymbol_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Start$Symbol_1_0", context));
    varScope.addSVar("undefine_StartSymbol_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Start$Symbol_0_1", context));
    varScope.addSVar("throw_StartSymbol_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Start$Symbol_1_1", context));
    varScope.addSVar("continue_to_label_StartSymbol_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Start$Symbol_0_1", context));
    varScope.addSVar("continue_StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Start$Symbol_0_0", context));
    varScope.addSVar("break_bp_StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Start$Symbol_0_0", context));
    varScope.addSVar("break_to_label_StartSymbol_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Start$Symbol_0_1", context));
    varScope.addSVar("break_StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Start$Symbol_0_0", context));
    varScope.addSVar("all_keys_StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Start$Symbol_0_0", context));
    varScope.addSVar("bigfold_StartSymbol_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Start$Symbol_1_0", context));
    varScope.addSVar("fold_StartSymbol_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Start$Symbol_1_0", context));
    varScope.addSVar("bigchain_StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Start$Symbol_0_0", context));
    varScope.addSVar("chain_StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Start$Symbol_0_0", context));
    varScope.addSVar("bigbagof_StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Start$Symbol_0_0", context));
    varScope.addSVar("once_StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Start$Symbol_0_0", context));
    varScope.addSVar("reverse_bagof_StartSymbol_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Start$Symbol_1_0", context));
    varScope.addSVar("bagof_StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Start$Symbol_0_0", context));
    varScope.addSVar("StartSymbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Start$Symbol_0_0", context));
    varScope.addSVar("aux_StartSymbol_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Start$Symbol_0_1", context));
    varScope.addSVar("innermost_scope_NoExistingDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$No$Existing$Descriptor_1_0", context));
    varScope.addSVar("undefine_NoExistingDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$No$Existing$Descriptor_0_1", context));
    varScope.addSVar("throw_NoExistingDescriptor_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$No$Existing$Descriptor_1_1", context));
    varScope.addSVar("continue_to_label_NoExistingDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$No$Existing$Descriptor_0_1", context));
    varScope.addSVar("continue_NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("break_bp_NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("break_to_label_NoExistingDescriptor_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$No$Existing$Descriptor_0_1", context));
    varScope.addSVar("break_NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("all_keys_NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("bigfold_NoExistingDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$No$Existing$Descriptor_1_0", context));
    varScope.addSVar("fold_NoExistingDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$No$Existing$Descriptor_1_0", context));
    varScope.addSVar("bigchain_NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("chain_NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("bigbagof_NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("once_NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("reverse_bagof_NoExistingDescriptor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$No$Existing$Descriptor_1_0", context));
    varScope.addSVar("bagof_NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("NoExistingDescriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$No$Existing$Descriptor_0_0", context));
    varScope.addSVar("aux_NoExistingDescriptor_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$No$Existing$Descriptor_0_2", context));
    varScope.addSVar("innermost_scope_OnImportFailure_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$On$Import$Failure_1_0", context));
    varScope.addSVar("undefine_OnImportFailure_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$On$Import$Failure_0_1", context));
    varScope.addSVar("throw_OnImportFailure_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$On$Import$Failure_1_1", context));
    varScope.addSVar("continue_to_label_OnImportFailure_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$On$Import$Failure_0_1", context));
    varScope.addSVar("continue_OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$On$Import$Failure_0_0", context));
    varScope.addSVar("break_bp_OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$On$Import$Failure_0_0", context));
    varScope.addSVar("break_to_label_OnImportFailure_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$On$Import$Failure_0_1", context));
    varScope.addSVar("break_OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$On$Import$Failure_0_0", context));
    varScope.addSVar("all_keys_OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$On$Import$Failure_0_0", context));
    varScope.addSVar("bigfold_OnImportFailure_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$On$Import$Failure_1_0", context));
    varScope.addSVar("fold_OnImportFailure_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$On$Import$Failure_1_0", context));
    varScope.addSVar("bigchain_OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$On$Import$Failure_0_0", context));
    varScope.addSVar("chain_OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$On$Import$Failure_0_0", context));
    varScope.addSVar("bigbagof_OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$On$Import$Failure_0_0", context));
    varScope.addSVar("once_OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$On$Import$Failure_0_0", context));
    varScope.addSVar("reverse_bagof_OnImportFailure_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$On$Import$Failure_1_0", context));
    varScope.addSVar("bagof_OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$On$Import$Failure_0_0", context));
    varScope.addSVar("OnImportFailure_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$On$Import$Failure_0_0", context));
    varScope.addSVar("aux_OnImportFailure_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$On$Import$Failure_0_2", context));
    varScope.addSVar("innermost_scope_Productions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Productions_1_0", context));
    varScope.addSVar("undefine_Productions_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Productions_0_1", context));
    varScope.addSVar("throw_Productions_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Productions_1_1", context));
    varScope.addSVar("continue_to_label_Productions_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Productions_0_1", context));
    varScope.addSVar("continue_Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Productions_0_0", context));
    varScope.addSVar("break_bp_Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Productions_0_0", context));
    varScope.addSVar("break_to_label_Productions_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Productions_0_1", context));
    varScope.addSVar("break_Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Productions_0_0", context));
    varScope.addSVar("all_keys_Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Productions_0_0", context));
    varScope.addSVar("bigfold_Productions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Productions_1_0", context));
    varScope.addSVar("fold_Productions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Productions_1_0", context));
    varScope.addSVar("bigchain_Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Productions_0_0", context));
    varScope.addSVar("chain_Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Productions_0_0", context));
    varScope.addSVar("bigbagof_Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Productions_0_0", context));
    varScope.addSVar("once_Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Productions_0_0", context));
    varScope.addSVar("reverse_bagof_Productions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Productions_1_0", context));
    varScope.addSVar("bagof_Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Productions_0_0", context));
    varScope.addSVar("Productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Productions_0_0", context));
    varScope.addSVar("aux_Productions_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Productions_0_2", context));
    varScope.addSVar("innermost_scope_CollectAllVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Collect$All$Visited_1_0", context));
    varScope.addSVar("undefine_CollectAllVisited_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Collect$All$Visited_0_1", context));
    varScope.addSVar("throw_CollectAllVisited_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Collect$All$Visited_1_1", context));
    varScope.addSVar("continue_to_label_CollectAllVisited_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Collect$All$Visited_0_1", context));
    varScope.addSVar("continue_CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Collect$All$Visited_0_0", context));
    varScope.addSVar("break_bp_CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Collect$All$Visited_0_0", context));
    varScope.addSVar("break_to_label_CollectAllVisited_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Collect$All$Visited_0_1", context));
    varScope.addSVar("break_CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Collect$All$Visited_0_0", context));
    varScope.addSVar("all_keys_CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Collect$All$Visited_0_0", context));
    varScope.addSVar("bigfold_CollectAllVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Collect$All$Visited_1_0", context));
    varScope.addSVar("fold_CollectAllVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Collect$All$Visited_1_0", context));
    varScope.addSVar("bigchain_CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Collect$All$Visited_0_0", context));
    varScope.addSVar("chain_CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Collect$All$Visited_0_0", context));
    varScope.addSVar("bigbagof_CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Collect$All$Visited_0_0", context));
    varScope.addSVar("once_CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Collect$All$Visited_0_0", context));
    varScope.addSVar("reverse_bagof_CollectAllVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Collect$All$Visited_1_0", context));
    varScope.addSVar("bagof_CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Collect$All$Visited_0_0", context));
    varScope.addSVar("CollectAllVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Collect$All$Visited_0_0", context));
    varScope.addSVar("aux_CollectAllVisited_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Collect$All$Visited_0_2", context));
    varScope.addSVar("innermost_scope_FollowVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Follow$Visited_1_0", context));
    varScope.addSVar("undefine_FollowVisited_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Follow$Visited_0_1", context));
    varScope.addSVar("throw_FollowVisited_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Follow$Visited_1_1", context));
    varScope.addSVar("continue_to_label_FollowVisited_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Follow$Visited_0_1", context));
    varScope.addSVar("continue_FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Follow$Visited_0_0", context));
    varScope.addSVar("break_bp_FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Follow$Visited_0_0", context));
    varScope.addSVar("break_to_label_FollowVisited_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Follow$Visited_0_1", context));
    varScope.addSVar("break_FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Follow$Visited_0_0", context));
    varScope.addSVar("all_keys_FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Follow$Visited_0_0", context));
    varScope.addSVar("bigfold_FollowVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Follow$Visited_1_0", context));
    varScope.addSVar("fold_FollowVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Follow$Visited_1_0", context));
    varScope.addSVar("bigchain_FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Follow$Visited_0_0", context));
    varScope.addSVar("chain_FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Follow$Visited_0_0", context));
    varScope.addSVar("bigbagof_FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Follow$Visited_0_0", context));
    varScope.addSVar("once_FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Follow$Visited_0_0", context));
    varScope.addSVar("reverse_bagof_FollowVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Follow$Visited_1_0", context));
    varScope.addSVar("bagof_FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Follow$Visited_0_0", context));
    varScope.addSVar("FollowVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Follow$Visited_0_0", context));
    varScope.addSVar("aux_FollowVisited_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Follow$Visited_0_2", context));
    varScope.addSVar("innermost_scope_FollowSuccess_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Follow$Success_1_0", context));
    varScope.addSVar("undefine_FollowSuccess_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Follow$Success_0_1", context));
    varScope.addSVar("throw_FollowSuccess_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Follow$Success_1_1", context));
    varScope.addSVar("continue_to_label_FollowSuccess_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Follow$Success_0_1", context));
    varScope.addSVar("continue_FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Follow$Success_0_0", context));
    varScope.addSVar("break_bp_FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Follow$Success_0_0", context));
    varScope.addSVar("break_to_label_FollowSuccess_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Follow$Success_0_1", context));
    varScope.addSVar("break_FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Follow$Success_0_0", context));
    varScope.addSVar("all_keys_FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Follow$Success_0_0", context));
    varScope.addSVar("bigfold_FollowSuccess_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Follow$Success_1_0", context));
    varScope.addSVar("fold_FollowSuccess_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Follow$Success_1_0", context));
    varScope.addSVar("bigchain_FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Follow$Success_0_0", context));
    varScope.addSVar("chain_FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Follow$Success_0_0", context));
    varScope.addSVar("bigbagof_FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Follow$Success_0_0", context));
    varScope.addSVar("once_FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Follow$Success_0_0", context));
    varScope.addSVar("reverse_bagof_FollowSuccess_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Follow$Success_1_0", context));
    varScope.addSVar("bagof_FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Follow$Success_0_0", context));
    varScope.addSVar("FollowSuccess_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Follow$Success_0_0", context));
    varScope.addSVar("aux_FollowSuccess_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Follow$Success_0_2", context));
    varScope.addSVar("innermost_scope_ProductionVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Production$Visited_1_0", context));
    varScope.addSVar("undefine_ProductionVisited_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Production$Visited_0_1", context));
    varScope.addSVar("throw_ProductionVisited_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Production$Visited_1_1", context));
    varScope.addSVar("continue_to_label_ProductionVisited_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Production$Visited_0_1", context));
    varScope.addSVar("continue_ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Production$Visited_0_0", context));
    varScope.addSVar("break_bp_ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Production$Visited_0_0", context));
    varScope.addSVar("break_to_label_ProductionVisited_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Production$Visited_0_1", context));
    varScope.addSVar("break_ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Production$Visited_0_0", context));
    varScope.addSVar("all_keys_ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Production$Visited_0_0", context));
    varScope.addSVar("bigfold_ProductionVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Production$Visited_1_0", context));
    varScope.addSVar("fold_ProductionVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Production$Visited_1_0", context));
    varScope.addSVar("bigchain_ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Production$Visited_0_0", context));
    varScope.addSVar("chain_ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Production$Visited_0_0", context));
    varScope.addSVar("bigbagof_ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Production$Visited_0_0", context));
    varScope.addSVar("once_ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Production$Visited_0_0", context));
    varScope.addSVar("reverse_bagof_ProductionVisited_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Production$Visited_1_0", context));
    varScope.addSVar("bagof_ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Production$Visited_0_0", context));
    varScope.addSVar("ProductionVisited_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Production$Visited_0_0", context));
    varScope.addSVar("aux_ProductionVisited_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Production$Visited_0_2", context));
    varScope.addSVar("innermost_scope_InputFile_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Input$File_1_0", context));
    varScope.addSVar("undefine_InputFile_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Input$File_0_1", context));
    varScope.addSVar("throw_InputFile_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Input$File_1_1", context));
    varScope.addSVar("continue_to_label_InputFile_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Input$File_0_1", context));
    varScope.addSVar("continue_InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Input$File_0_0", context));
    varScope.addSVar("break_bp_InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Input$File_0_0", context));
    varScope.addSVar("break_to_label_InputFile_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Input$File_0_1", context));
    varScope.addSVar("break_InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Input$File_0_0", context));
    varScope.addSVar("all_keys_InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Input$File_0_0", context));
    varScope.addSVar("bigfold_InputFile_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Input$File_1_0", context));
    varScope.addSVar("fold_InputFile_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Input$File_1_0", context));
    varScope.addSVar("bigchain_InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Input$File_0_0", context));
    varScope.addSVar("chain_InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Input$File_0_0", context));
    varScope.addSVar("bigbagof_InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Input$File_0_0", context));
    varScope.addSVar("once_InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Input$File_0_0", context));
    varScope.addSVar("reverse_bagof_InputFile_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Input$File_1_0", context));
    varScope.addSVar("bagof_InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Input$File_0_0", context));
    varScope.addSVar("InputFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Input$File_0_0", context));
    varScope.addSVar("aux_InputFile_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Input$File_0_1", context));
    varScope.addSVar("innermost_scope_ParseTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Parse$Table_1_0", context));
    varScope.addSVar("undefine_ParseTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Parse$Table_0_1", context));
    varScope.addSVar("throw_ParseTable_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Parse$Table_1_1", context));
    varScope.addSVar("continue_to_label_ParseTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Parse$Table_0_1", context));
    varScope.addSVar("continue_ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Parse$Table_0_0", context));
    varScope.addSVar("break_bp_ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Parse$Table_0_0", context));
    varScope.addSVar("break_to_label_ParseTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Parse$Table_0_1", context));
    varScope.addSVar("break_ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Parse$Table_0_0", context));
    varScope.addSVar("all_keys_ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Parse$Table_0_0", context));
    varScope.addSVar("bigfold_ParseTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Parse$Table_1_0", context));
    varScope.addSVar("fold_ParseTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Parse$Table_1_0", context));
    varScope.addSVar("bigchain_ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Parse$Table_0_0", context));
    varScope.addSVar("chain_ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Parse$Table_0_0", context));
    varScope.addSVar("bigbagof_ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Parse$Table_0_0", context));
    varScope.addSVar("once_ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Parse$Table_0_0", context));
    varScope.addSVar("reverse_bagof_ParseTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Parse$Table_1_0", context));
    varScope.addSVar("bagof_ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Parse$Table_0_0", context));
    varScope.addSVar("ParseTable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Parse$Table_0_0", context));
    varScope.addSVar("aux_ParseTable_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Parse$Table_0_1", context));
    varScope.addSVar("innermost_scope_ProjectName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Project$Name_1_0", context));
    varScope.addSVar("undefine_ProjectName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Project$Name_0_1", context));
    varScope.addSVar("throw_ProjectName_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Project$Name_1_1", context));
    varScope.addSVar("continue_to_label_ProjectName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Project$Name_0_1", context));
    varScope.addSVar("continue_ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Project$Name_0_0", context));
    varScope.addSVar("break_bp_ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Project$Name_0_0", context));
    varScope.addSVar("break_to_label_ProjectName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Project$Name_0_1", context));
    varScope.addSVar("break_ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Project$Name_0_0", context));
    varScope.addSVar("all_keys_ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Project$Name_0_0", context));
    varScope.addSVar("bigfold_ProjectName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Project$Name_1_0", context));
    varScope.addSVar("fold_ProjectName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Project$Name_1_0", context));
    varScope.addSVar("bigchain_ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Project$Name_0_0", context));
    varScope.addSVar("chain_ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Project$Name_0_0", context));
    varScope.addSVar("bigbagof_ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Project$Name_0_0", context));
    varScope.addSVar("once_ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Project$Name_0_0", context));
    varScope.addSVar("reverse_bagof_ProjectName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Project$Name_1_0", context));
    varScope.addSVar("bagof_ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Project$Name_0_0", context));
    varScope.addSVar("ProjectName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Project$Name_0_0", context));
    varScope.addSVar("aux_ProjectName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Project$Name_0_1", context));
    varScope.addSVar("innermost_scope_JarLocations_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Jar$Locations_1_0", context));
    varScope.addSVar("undefine_JarLocations_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Jar$Locations_0_1", context));
    varScope.addSVar("throw_JarLocations_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Jar$Locations_1_1", context));
    varScope.addSVar("continue_to_label_JarLocations_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Jar$Locations_0_1", context));
    varScope.addSVar("continue_JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Jar$Locations_0_0", context));
    varScope.addSVar("break_bp_JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Jar$Locations_0_0", context));
    varScope.addSVar("break_to_label_JarLocations_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Jar$Locations_0_1", context));
    varScope.addSVar("break_JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Jar$Locations_0_0", context));
    varScope.addSVar("all_keys_JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Jar$Locations_0_0", context));
    varScope.addSVar("bigfold_JarLocations_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Jar$Locations_1_0", context));
    varScope.addSVar("fold_JarLocations_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Jar$Locations_1_0", context));
    varScope.addSVar("bigchain_JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Jar$Locations_0_0", context));
    varScope.addSVar("chain_JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Jar$Locations_0_0", context));
    varScope.addSVar("bigbagof_JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Jar$Locations_0_0", context));
    varScope.addSVar("once_JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Jar$Locations_0_0", context));
    varScope.addSVar("reverse_bagof_JarLocations_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Jar$Locations_1_0", context));
    varScope.addSVar("bagof_JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Jar$Locations_0_0", context));
    varScope.addSVar("JarLocations_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Jar$Locations_0_0", context));
    varScope.addSVar("aux_JarLocations_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Jar$Locations_0_1", context));
    varScope.addSVar("innermost_scope_NewProject_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$New$Project_1_0", context));
    varScope.addSVar("undefine_NewProject_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$New$Project_0_1", context));
    varScope.addSVar("throw_NewProject_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$New$Project_1_1", context));
    varScope.addSVar("continue_to_label_NewProject_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$New$Project_0_1", context));
    varScope.addSVar("continue_NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$New$Project_0_0", context));
    varScope.addSVar("break_bp_NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$New$Project_0_0", context));
    varScope.addSVar("break_to_label_NewProject_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$New$Project_0_1", context));
    varScope.addSVar("break_NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$New$Project_0_0", context));
    varScope.addSVar("all_keys_NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$New$Project_0_0", context));
    varScope.addSVar("bigfold_NewProject_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$New$Project_1_0", context));
    varScope.addSVar("fold_NewProject_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$New$Project_1_0", context));
    varScope.addSVar("bigchain_NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$New$Project_0_0", context));
    varScope.addSVar("chain_NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$New$Project_0_0", context));
    varScope.addSVar("bigbagof_NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$New$Project_0_0", context));
    varScope.addSVar("once_NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$New$Project_0_0", context));
    varScope.addSVar("reverse_bagof_NewProject_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$New$Project_1_0", context));
    varScope.addSVar("bagof_NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$New$Project_0_0", context));
    varScope.addSVar("NewProject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$New$Project_0_0", context));
    varScope.addSVar("aux_NewProject_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$New$Project_0_2", context));
    varScope.addSVar("innermost_scope_ResetFiles_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Reset$Files_1_0", context));
    varScope.addSVar("undefine_ResetFiles_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Reset$Files_0_1", context));
    varScope.addSVar("throw_ResetFiles_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Reset$Files_1_1", context));
    varScope.addSVar("continue_to_label_ResetFiles_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Reset$Files_0_1", context));
    varScope.addSVar("continue_ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Reset$Files_0_0", context));
    varScope.addSVar("break_bp_ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Reset$Files_0_0", context));
    varScope.addSVar("break_to_label_ResetFiles_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Reset$Files_0_1", context));
    varScope.addSVar("break_ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Reset$Files_0_0", context));
    varScope.addSVar("all_keys_ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Reset$Files_0_0", context));
    varScope.addSVar("bigfold_ResetFiles_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Reset$Files_1_0", context));
    varScope.addSVar("fold_ResetFiles_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Reset$Files_1_0", context));
    varScope.addSVar("bigchain_ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Reset$Files_0_0", context));
    varScope.addSVar("chain_ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Reset$Files_0_0", context));
    varScope.addSVar("bigbagof_ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Reset$Files_0_0", context));
    varScope.addSVar("once_ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Reset$Files_0_0", context));
    varScope.addSVar("reverse_bagof_ResetFiles_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Reset$Files_1_0", context));
    varScope.addSVar("bagof_ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Reset$Files_0_0", context));
    varScope.addSVar("ResetFiles_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Reset$Files_0_0", context));
    varScope.addSVar("aux_ResetFiles_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Reset$Files_0_2", context));
    varScope.addSVar("innermost_scope_IsLaunchedFromEclipse_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Is$Launched$From$Eclipse_1_0", context));
    varScope.addSVar("undefine_IsLaunchedFromEclipse_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Is$Launched$From$Eclipse_0_1", context));
    varScope.addSVar("throw_IsLaunchedFromEclipse_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Is$Launched$From$Eclipse_1_1", context));
    varScope.addSVar("continue_to_label_IsLaunchedFromEclipse_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Is$Launched$From$Eclipse_0_1", context));
    varScope.addSVar("continue_IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("break_bp_IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("break_to_label_IsLaunchedFromEclipse_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Is$Launched$From$Eclipse_0_1", context));
    varScope.addSVar("break_IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("all_keys_IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("bigfold_IsLaunchedFromEclipse_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Is$Launched$From$Eclipse_1_0", context));
    varScope.addSVar("fold_IsLaunchedFromEclipse_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Is$Launched$From$Eclipse_1_0", context));
    varScope.addSVar("bigchain_IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("chain_IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("bigbagof_IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("once_IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("reverse_bagof_IsLaunchedFromEclipse_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Is$Launched$From$Eclipse_1_0", context));
    varScope.addSVar("bagof_IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("IsLaunchedFromEclipse_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Is$Launched$From$Eclipse_0_0", context));
    varScope.addSVar("aux_IsLaunchedFromEclipse_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Is$Launched$From$Eclipse_0_2", context));
    varScope.addSVar("innermost_scope_DescriptorNamePrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Descriptor$Name$Prefix_1_0", context));
    varScope.addSVar("undefine_DescriptorNamePrefix_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Descriptor$Name$Prefix_0_1", context));
    varScope.addSVar("throw_DescriptorNamePrefix_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Descriptor$Name$Prefix_1_1", context));
    varScope.addSVar("continue_to_label_DescriptorNamePrefix_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Descriptor$Name$Prefix_0_1", context));
    varScope.addSVar("continue_DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("break_bp_DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("break_to_label_DescriptorNamePrefix_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Descriptor$Name$Prefix_0_1", context));
    varScope.addSVar("break_DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("all_keys_DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("bigfold_DescriptorNamePrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Descriptor$Name$Prefix_1_0", context));
    varScope.addSVar("fold_DescriptorNamePrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Descriptor$Name$Prefix_1_0", context));
    varScope.addSVar("bigchain_DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("chain_DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("bigbagof_DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("once_DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("reverse_bagof_DescriptorNamePrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Descriptor$Name$Prefix_1_0", context));
    varScope.addSVar("bagof_DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("DescriptorNamePrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Descriptor$Name$Prefix_0_0", context));
    varScope.addSVar("aux_DescriptorNamePrefix_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Descriptor$Name$Prefix_0_1", context));
    varScope.addSVar("innermost_scope_MainDescriptorName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Main$Descriptor$Name_1_0", context));
    varScope.addSVar("undefine_MainDescriptorName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Main$Descriptor$Name_0_1", context));
    varScope.addSVar("throw_MainDescriptorName_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Main$Descriptor$Name_1_1", context));
    varScope.addSVar("continue_to_label_MainDescriptorName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Main$Descriptor$Name_0_1", context));
    varScope.addSVar("continue_MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("break_bp_MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("break_to_label_MainDescriptorName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Main$Descriptor$Name_0_1", context));
    varScope.addSVar("break_MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("all_keys_MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("bigfold_MainDescriptorName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Main$Descriptor$Name_1_0", context));
    varScope.addSVar("fold_MainDescriptorName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Main$Descriptor$Name_1_0", context));
    varScope.addSVar("bigchain_MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("chain_MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("bigbagof_MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("once_MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("reverse_bagof_MainDescriptorName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Main$Descriptor$Name_1_0", context));
    varScope.addSVar("bagof_MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("MainDescriptorName_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Main$Descriptor$Name_0_0", context));
    varScope.addSVar("aux_MainDescriptorName_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Main$Descriptor$Name_0_1", context));
    varScope.addSVar("innermost_scope_DefaultDefFile_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.innermost_scope_$Default$Def$File_1_0", context));
    varScope.addSVar("undefine_DefaultDefFile_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.undefine_$Default$Def$File_0_1", context));
    varScope.addSVar("throw_DefaultDefFile_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.throw_$Default$Def$File_1_1", context));
    varScope.addSVar("continue_to_label_DefaultDefFile_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_to_label_$Default$Def$File_0_1", context));
    varScope.addSVar("continue_DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.continue_$Default$Def$File_0_0", context));
    varScope.addSVar("break_bp_DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_bp_$Default$Def$File_0_0", context));
    varScope.addSVar("break_to_label_DefaultDefFile_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_to_label_$Default$Def$File_0_1", context));
    varScope.addSVar("break_DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.break_$Default$Def$File_0_0", context));
    varScope.addSVar("all_keys_DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.all_keys_$Default$Def$File_0_0", context));
    varScope.addSVar("bigfold_DefaultDefFile_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigfold_$Default$Def$File_1_0", context));
    varScope.addSVar("fold_DefaultDefFile_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fold_$Default$Def$File_1_0", context));
    varScope.addSVar("bigchain_DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigchain_$Default$Def$File_0_0", context));
    varScope.addSVar("chain_DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.chain_$Default$Def$File_0_0", context));
    varScope.addSVar("bigbagof_DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bigbagof_$Default$Def$File_0_0", context));
    varScope.addSVar("once_DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.once_$Default$Def$File_0_0", context));
    varScope.addSVar("reverse_bagof_DefaultDefFile_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reverse_bagof_$Default$Def$File_1_0", context));
    varScope.addSVar("bagof_DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.bagof_$Default$Def$File_0_0", context));
    varScope.addSVar("DefaultDefFile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Default$Def$File_0_0", context));
    varScope.addSVar("aux_DefaultDefFile_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.aux_$Default$Def$File_0_1", context));
  }

  private void registerLazy7(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader, org.spoofax.interpreter.core.VarScope varScope)
  { 
    compiledContext.registerComponent("generator");
    generator.init(compiledContext);
    varScope.addSVar("main_xml_doc2abox_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.main_xml_doc2abox_0_0", context));
    varScope.addSVar("xml_doc2abox_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xml_doc2abox_0_0", context));
    varScope.addSVar("xml_to_box_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xml_to_box_0_0", context));
    varScope.addSVar("get_prolog_lines_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_prolog_lines_0_0", context));
    varScope.addSVar("decl_to_attribute_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.decl_to_attribute_0_0", context));
    varScope.addSVar("simple_element_to_box_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.simple_element_to_box_0_0", context));
    varScope.addSVar("element_to_box_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.element_to_box_0_0", context));
    varScope.addSVar("open_tag_to_box_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.open_tag_to_box_0_0", context));
    varScope.addSVar("main_sdf2rtg_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.main_sdf2rtg_0_0", context));
    varScope.addSVar("ignore_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.ignore_option_0_0", context));
    varScope.addSVar("sdf2rtg_usage_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf2rtg_usage_0_0", context));
    varScope.addSVar("sdf2rtg_about_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf2rtg_about_0_0", context));
    varScope.addSVar("sdf_main_module_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf_main_module_option_0_0", context));
    varScope.addSVar("sdf_main_module_option_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf_main_module_option_1_0", context));
    varScope.addSVar("pass_sdf_main_module_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pass_sdf_main_module_0_0", context));
    varScope.addSVar("get_sdf_main_module_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_sdf_main_module_0_0", context));
    varScope.addSVar("sdf_main_module_error_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf_main_module_error_0_0", context));
    varScope.addSVar("sdf_desugar_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf_desugar_0_0", context));
    varScope.addSVar("SdfDesugar_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Sdf$Desugar_0_0", context));
    varScope.addSVar("SdfDesugarOnce_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Sdf$Desugar$Once_0_0", context));
    varScope.addSVar("EnsureQuotes_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Ensure$Quotes_0_0", context));
    varScope.addSVar("main_pack_sdf_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.main_pack_sdf_0_0", context));
    varScope.addSVar("pack_sdf_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pack_sdf_0_1", context));
    varScope.addSVar("report_module_not_found_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.report_module_not_found_0_0", context));
    varScope.addSVar("pack_sdf_parse_sdf_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pack_sdf_parse_sdf_0_0", context));
    varScope.addSVar("include_pathname_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.include_pathname_0_0", context));
    varScope.addSVar("include_from_dir_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.include_from_dir_0_1", context));
    varScope.addSVar("include_from_xtc_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.include_from_xtc_0_1", context));
    varScope.addSVar("include_from_def_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.include_from_def_0_1", context));
    varScope.addSVar("register_source_pathname_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.register_source_pathname_0_1", context));
    varScope.addSVar("get_source_pathname_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_source_pathname_0_0", context));
    varScope.addSVar("parse_sdf2_module_to_asfix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.parse_sdf2_module_to_asfix_0_0", context));
    varScope.addSVar("parse_sdf2_module_to_asfix_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.parse_sdf2_module_to_asfix_0_1", context));
    varScope.addSVar("parse_sdf2_module_to_asfix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.parse_sdf2_module_to_asfix_1_0", context));
    varScope.addSVar("pack_sdf_table_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pack_sdf_table_0_0", context));
    varScope.addSVar("check_module_name_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.check_module_name_1_1", context));
    varScope.addSVar("get_module_name_from_asfix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_module_name_from_asfix_0_0", context));
    varScope.addSVar("h_4225", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.h_4225", context));
    varScope.addSVar("i_4225", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.i_4225", context));
    varScope.addSVar("asfix_lex_yield_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.asfix_lex_yield_0_0", context));
    varScope.addSVar("get_sdf_imports_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_sdf_imports_0_0", context));
    varScope.addSVar("skip_non_imports_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.skip_non_imports_2_0", context));
    varScope.addSVar("get_module_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_module_name_0_0", context));
    varScope.addSVar("module_to_module_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.module_to_module_name_0_0", context));
    varScope.addSVar("ConcatModules_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Concat$Modules_0_0", context));
    varScope.addSVar("concat_modules_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.concat_modules_0_0", context));
    varScope.addSVar("pack_sdf_options_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pack_sdf_options_0_0", context));
    varScope.addSVar("of_config_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.of_config_0_0", context));
    varScope.addSVar("of_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.of_option_0_0", context));
    varScope.addSVar("OutputFormatOption_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Output$Format$Option_0_1", context));
    varScope.addSVar("include_from_def_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.include_from_def_option_0_0", context));
    varScope.addSVar("process_options_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.process_options_0_0", context));
    varScope.addSVar("process_Idef_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.process_$Idef_0_0", context));
    varScope.addSVar("include_from_dir_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.include_from_dir_option_0_0", context));
    varScope.addSVar("ensure_directory_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.ensure_directory_0_0", context));
    varScope.addSVar("dep_options_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.dep_options_0_0", context));
    varScope.addSVar("include_path_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.include_path_0_0", context));
    varScope.addSVar("depfile_from_config_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.depfile_from_config_0_0", context));
    varScope.addSVar("maybe_create_depfile_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.maybe_create_depfile_0_0", context));
    varScope.addSVar("create_dep_file_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_dep_file_0_0", context));
    varScope.addSVar("MultiArgOption_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Multi$Arg$Option_3_0", context));
    varScope.addSVar("verbose_msg_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbose_msg_1_0", context));
    varScope.addSVar("verbose_msg_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbose_msg_2_0", context));
    varScope.addSVar("verbose_msg_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbose_msg_3_0", context));
    varScope.addSVar("verbose_msg_4_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbose_msg_4_0", context));
    varScope.addSVar("verbose_msg_5_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbose_msg_5_0", context));
    varScope.addSVar("verbose_msg_6_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbose_msg_6_0", context));
    varScope.addSVar("verbose_msg_7_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbose_msg_7_0", context));
    varScope.addSVar("verbose_msg_8_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbose_msg_8_0", context));
    varScope.addSVar("as_string_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.as_string_1_0", context));
    varScope.addSVar("as_string_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.as_string_0_0", context));
    varScope.addSVar("verbose_msg_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbose_msg_0_0", context));
    varScope.addSVar("with_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.with_1_0", context));
    varScope.addSVar("verify_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verify_1_0", context));
    varScope.addSVar("verify_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verify_2_0", context));
    varScope.addSVar("verify_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verify_3_0", context));
    varScope.addSVar("verify_4_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verify_4_0", context));
    varScope.addSVar("tiny_debug_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.tiny_debug_0_0", context));
    varScope.addSVar("tiny_debug_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.tiny_debug_1_0", context));
    varScope.addSVar("to_tiny_string_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.to_tiny_string_0_0", context));
    varScope.addSVar("to_tiny_list_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.to_tiny_list_0_0", context));
    varScope.addSVar("to_tiny_substring_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.to_tiny_substring_0_0", context));
    varScope.addSVar("xtc_implode_asfix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_implode_asfix_0_0", context));
    varScope.addSVar("xtc_asfix_yield_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_asfix_yield_0_0", context));
    varScope.addSVar("xtc_abox_format_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_abox_format_0_0", context));
    varScope.addSVar("xtc_ast2abox_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_ast2abox_1_0", context));
    varScope.addSVar("xtc_abox2text_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_abox2text_0_0", context));
    varScope.addSVar("xtc_abox2text_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_abox2text_1_0", context));
    varScope.addSVar("xtc_parse_pp_table_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_parse_pp_table_0_0", context));
    varScope.addSVar("xtc_sglr_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_sglr_1_0", context));
    varScope.addSVar("xtc_sglr_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_sglr_2_0", context));
    varScope.addSVar("xtc_sglri_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_sglri_0_1", context));
    varScope.addSVar("xtc_sglri_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_sglri_0_2", context));
    varScope.addSVar("xtc_pp_astratego_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_pp_astratego_0_0", context));
    varScope.addSVar("xtc_stratego_ensugar_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_stratego_ensugar_0_0", context));
    varScope.addSVar("pass_v_verbose_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pass_v_verbose_0_0", context));
    varScope.addSVar("add_arg_flags_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.add_arg_flags_0_0", context));
    varScope.addSVar("xtc_parse_sdf2_module_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_parse_sdf2_module_0_0", context));
    varScope.addSVar("xtc_parse_sdf2_definition_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_parse_sdf2_definition_0_0", context));
    varScope.addSVar("xtc_parse_sdf2_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_parse_sdf2_0_0", context));
    varScope.addSVar("xtc_parse_sdf2_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_parse_sdf2_0_1", context));
    varScope.addSVar("xtc_pp_sdf2_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_pp_sdf2_0_0", context));
    varScope.addSVar("xtc_sdf2_normalize_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.xtc_sdf2_normalize_0_1", context));
    varScope.addSVar("core_sdf_grammar2rtg_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.core_sdf_grammar2rtg_0_0", context));
    varScope.addSVar("grammar2prodrules_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.grammar2prodrules_0_0", context));
    varScope.addSVar("cycle_error_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.cycle_error_0_0", context));
    varScope.addSVar("ignore_prod_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.ignore_prod_0_0", context));
    varScope.addSVar("match_sort_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.match_sort_1_0", context));
    varScope.addSVar("is_start_prod_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_start_prod_0_0", context));
    varScope.addSVar("start_prod2tree_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.start_prod2tree_0_0", context));
    varScope.addSVar("prod2prodrule_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prod2prodrule_0_0", context));
    varScope.addSVar("inj2prodrule_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.inj2prodrule_0_0", context));
    varScope.addSVar("seq2prodrule_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.seq2prodrule_0_0", context));
    varScope.addSVar("alt2prodrule_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.alt2prodrule_0_0", context));
    varScope.addSVar("listinj2prodrule_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.listinj2prodrule_0_0", context));
    varScope.addSVar("opt2prodrule_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.opt2prodrule_0_0", context));
    varScope.addSVar("var2prodrule_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.var2prodrule_0_0", context));
    varScope.addSVar("get_nonterm_of_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_nonterm_of_0_0", context));
    varScope.addSVar("is_seq_symbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_seq_symbol_0_0", context));
    varScope.addSVar("is_alt_symbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_alt_symbol_0_0", context));
    varScope.addSVar("is_list_symbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_list_symbol_0_0", context));
    varScope.addSVar("is_nonterm_generator_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_nonterm_generator_0_0", context));
    varScope.addSVar("syms2trees_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.syms2trees_0_0", context));
    varScope.addSVar("is_empty_sym_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_empty_sym_0_0", context));
    varScope.addSVar("sym2tree_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sym2tree_0_0", context));
    varScope.addSVar("sym2nonterm_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sym2nonterm_0_0", context));
    varScope.addSVar("sort2nonterm_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sort2nonterm_0_0", context));
    varScope.addSVar("get_cnstr_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_cnstr_name_0_0", context));
    varScope.addSVar("contains_bracket_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.contains_bracket_0_0", context));
    varScope.addSVar("contains_reject_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.contains_reject_0_0", context));
    varScope.addSVar("contains_rtg_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.contains_rtg_1_0", context));
    varScope.addSVar("err_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.err_1_0", context));
    varScope.addSVar("dbg_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.dbg_1_0", context));
    varScope.addSVar("sdf_symbol_to_string_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf_symbol_to_string_0_0", context));
    varScope.addSVar("Symbol2String_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Symbol2$String_0_0", context));
    varScope.addSVar("log_sym_0_3", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.log_sym_0_3", context));
    varScope.addSVar("log_prod_0_3", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.log_prod_0_3", context));
    varScope.addSVar("yield_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.yield_0_0", context));
    varScope.addSVar("flatten_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.flatten_0_0", context));
    varScope.addSVar("lit_tree_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.lit_tree_0_0", context));
    varScope.addSVar("conc_layout1_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.conc_layout1_0_0", context));
    varScope.addSVar("conc_layout2_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.conc_layout2_0_0", context));
    varScope.addSVar("conc_layout3_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.conc_layout3_0_0", context));
    varScope.addSVar("conc_layout_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.conc_layout_0_0", context));
    varScope.addSVar("UnStart_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Un$Start_0_0", context));
    varScope.addSVar("CombineLayout_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Combine$Layout_2_0", context));
    varScope.addSVar("concat_layout_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.concat_layout_0_0", context));
    varScope.addSVar("foldr1a_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.foldr1a_1_0", context));
    varScope.addSVar("pp_descriptor_to_string_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pp_descriptor_to_string_0_0", context));
    varScope.addSVar("descriptor_to_abox_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.descriptor_to_abox_0_0", context));
    varScope.addSVar("descriptor_pp_table_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.descriptor_pp_table_0_0", context));
    varScope.addSVar("pp_fix_string_quotes_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pp_fix_string_quotes_0_0", context));
    varScope.addSVar("pp_descriptor_contents_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pp_descriptor_contents_0_0", context));
    varScope.addSVar("output_main_descriptor_file_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_main_descriptor_file_2_0", context));
    varScope.addSVar("output_initial_descriptor_file_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_initial_descriptor_file_2_0", context));
    varScope.addSVar("output_derived_descriptor_file_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_derived_descriptor_file_2_0", context));
    varScope.addSVar("output_descriptor_file_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_descriptor_file_3_0", context));
    varScope.addSVar("output_packed_descriptor_file_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_packed_descriptor_file_0_1", context));
    varScope.addSVar("is_descriptor_imported_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_descriptor_imported_0_1", context));
    varScope.addSVar("output_java_file_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_java_file_0_0", context));
    varScope.addSVar("output_java_file_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_java_file_0_1", context));
    varScope.addSVar("java_to_path_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.java_to_path_0_0", context));
    varScope.addSVar("output_xml_file_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_xml_file_0_2", context));
    varScope.addSVar("output_text_file_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_text_file_0_2", context));
    varScope.addSVar("output_text_file_p__0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_text_file_p__0_2", context));
    varScope.addSVar("output_text_file_p__0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_text_file_p__0_1", context));
    varScope.addSVar("pp_java_string_fallback_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pp_java_string_fallback_0_0", context));
    varScope.addSVar("print_filename_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.print_filename_0_2", context));
    varScope.addSVar("create_dirs_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_dirs_0_0", context));
    varScope.addSVar("to_package_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.to_package_name_0_0", context));
    varScope.addSVar("class_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.class_name_0_0", context));
    varScope.addSVar("origin_term_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_term_0_0", context));
    varScope.addSVar("origin_text_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_text_0_0", context));
    varScope.addSVar("origin_equal_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_equal_0_1", context));
    varScope.addSVar("origin_equal_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_equal_0_0", context));
    varScope.addSVar("origin_set_relation_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_set_relation_0_1", context));
    varScope.addSVar("origin_sublist_term_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_sublist_term_0_0", context));
    varScope.addSVar("origin_offset_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_offset_0_0", context));
    varScope.addSVar("origin_offset_with_layout_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_offset_with_layout_0_0", context));
    varScope.addSVar("origin_offset_with_comments_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_offset_with_comments_0_0", context));
    varScope.addSVar("origin_offset_comment_before_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_offset_comment_before_0_0", context));
    varScope.addSVar("origin_offset_comment_after_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_offset_comment_after_0_0", context));
    varScope.addSVar("origin_has_comments_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_has_comments_0_0", context));
    varScope.addSVar("origin_indent_node_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_indent_node_0_0", context));
    varScope.addSVar("origin_indent_value_node_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_indent_value_node_0_0", context));
    varScope.addSVar("origin_separating_ws_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_separating_ws_0_0", context));
    varScope.addSVar("origin_separator_offset_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_separator_offset_0_0", context));
    varScope.addSVar("origin_separator_offset_with_lo_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_separator_offset_with_lo_0_0", context));
    varScope.addSVar("origin_separator_text_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_separator_text_0_0", context));
    varScope.addSVar("origin_separator_text_with_lo_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_separator_text_with_lo_0_0", context));
    varScope.addSVar("origin_separator_with_lo_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_separator_with_lo_0_0", context));
    varScope.addSVar("origin_separator_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_separator_0_0", context));
    varScope.addSVar("origin_text_with_comments_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_text_with_comments_0_0", context));
    varScope.addSVar("origin_textfragment_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_textfragment_0_0", context));
    varScope.addSVar("prim_origin_textfragment_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prim_origin_textfragment_0_0", context));
    varScope.addSVar("origin_sourcetext_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_sourcetext_0_0", context));
    varScope.addSVar("prim_origin_offset_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prim_origin_offset_0_0", context));
    varScope.addSVar("prim_origin_offset_with_layout_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prim_origin_offset_with_layout_0_0", context));
    varScope.addSVar("prim_origin_offset_comment_before_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prim_origin_offset_comment_before_0_0", context));
    varScope.addSVar("prim_origin_offset_comment_after_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prim_origin_offset_comment_after_0_0", context));
    varScope.addSVar("prim_origin_indent_node_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prim_origin_indent_node_0_0", context));
    varScope.addSVar("prim_origin_separating_ws_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prim_origin_separating_ws_0_0", context));
    varScope.addSVar("prim_origin_separator_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prim_origin_separator_0_0", context));
    varScope.addSVar("prim_origin_separator_with_lo_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prim_origin_separator_with_lo_0_0", context));
    varScope.addSVar("tabsize_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.tabsize_0_0", context));
    varScope.addSVar("support_sublist_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.support_sublist_1_0", context));
    varScope.addSVar("spx_file_relative_path_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.spx_file_relative_path_0_0", context));
    varScope.addSVar("input_descriptor_file_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.input_descriptor_file_0_0", context));
    varScope.addSVar("set_input_dir_prefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.set_input_dir_prefix_0_0", context));
    varScope.addSVar("add_input_dir_prefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.add_input_dir_prefix_0_0", context));
    varScope.addSVar("include_input_dir_prefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.include_input_dir_prefix_0_0", context));
    varScope.addSVar("input_descriptor_import_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.input_descriptor_import_0_0", context));
    varScope.addSVar("rename_sort_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.rename_sort_0_1", context));
    varScope.addSVar("fetch_imports_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.fetch_imports_0_0", context));
    varScope.addSVar("is_older_than_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_older_than_0_0", context));
    varScope.addSVar("parse_table_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.parse_table_descriptor_0_0", context));
    varScope.addSVar("postprocess_feedback_results_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.postprocess_feedback_results_0_0", context));
    varScope.addSVar("simplify_ambiguity_report_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.simplify_ambiguity_report_0_0", context));
    varScope.addSVar("simplify_ambiguity_element_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.simplify_ambiguity_element_0_0", context));
    varScope.addSVar("position_of_term_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.position_of_term_1_0", context));
    varScope.addSVar("position_of_term_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.position_of_term_1_1", context));
    varScope.addSVar("term_at_position_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.term_at_position_0_1", context));
    varScope.addSVar("at_position_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.at_position_1_1", context));
    varScope.addSVar("construct_textual_change_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_textual_change_1_1", context));
    varScope.addSVar("construct_text_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_text_1_1", context));
    varScope.addSVar("construct_text_for_primitive_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_text_for_primitive_0_0", context));
    varScope.addSVar("construct_text_from_origin_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_text_from_origin_1_1", context));
    varScope.addSVar("construct_text_by_compare_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_text_by_compare_1_1", context));
    varScope.addSVar("construct_text_base_list_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_text_base_list_1_1", context));
    varScope.addSVar("construct_text_by_pp_rec_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_text_by_pp_rec_1_1", context));
    varScope.addSVar("construct_text_by_pp_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_text_by_pp_1_1", context));
    varScope.addSVar("add_origin_comments_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.add_origin_comments_0_1", context));
    varScope.addSVar("construct_list_text_1_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_list_text_1_2", context));
    varScope.addSVar("construct_list_fragments_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_list_fragments_1_1", context));
    varScope.addSVar("construct_list_fragments_base_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.construct_list_fragments_base_1_1", context));
    varScope.addSVar("concat_fragments_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.concat_fragments_0_1", context));
    varScope.addSVar("is_whitespace_char_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_whitespace_char_0_0", context));
    varScope.addSVar("remove_indentation_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.remove_indentation_0_1", context));
    varScope.addSVar("dedent_line_chars_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.dedent_line_chars_0_1", context));
    varScope.addSVar("collect_ast_changes_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.collect_ast_changes_0_0", context));
    varScope.addSVar("collect_ast_changes_keep_parent_path_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.collect_ast_changes_keep_parent_path_0_1", context));
    varScope.addSVar("collect_ast_changes_in_list_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.collect_ast_changes_in_list_0_0", context));
    varScope.addSVar("at_least_one_match_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.at_least_one_match_0_0", context));
    varScope.addSVar("collect_ast_changes_in_list_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.collect_ast_changes_in_list_0_1", context));
    varScope.addSVar("collect_ast_changes_in_list_match_header_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.collect_ast_changes_in_list_match_header_0_1", context));
    varScope.addSVar("collect_ast_changes_in_list_match_header_0_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.collect_ast_changes_in_list_match_header_0_2", context));
    varScope.addSVar("collect_ast_changes_in_list_no_header_match_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.collect_ast_changes_in_list_no_header_match_0_1", context));
    varScope.addSVar("collect_ast_changes_in_list_insert_at_end_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.collect_ast_changes_in_list_insert_at_end_0_1", context));
    varScope.addSVar("same_signature_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.same_signature_0_0", context));
    varScope.addSVar("unmodified_list_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.unmodified_list_0_0", context));
    varScope.addSVar("origin_equivalent_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_equivalent_0_0", context));
    varScope.addSVar("origin_equivalent_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.origin_equivalent_0_1", context));
    varScope.addSVar("ast_change_to_text_change_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.ast_change_to_text_change_1_1", context));
    varScope.addSVar("ast_change_to_text_change_1_2", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.ast_change_to_text_change_1_2", context));
    varScope.addSVar("get_separator_from_table_0_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_separator_from_table_0_1", context));
    varScope.addSVar("apply_text_changes_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.apply_text_changes_0_0", context));
    varScope.addSVar("apply_textual_change_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.apply_textual_change_0_0", context));
    varScope.addSVar("replace_in_text_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.replace_in_text_0_0", context));
    varScope.addSVar("compare_text_change_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.compare_text_change_0_0", context));
    varScope.addSVar("is_modification_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_modification_0_0", context));
    varScope.addSVar("reserve_class_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reserve_class_name_0_0", context));
    varScope.addSVar("to_java_class_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.to_java_class_name_0_0", context));
    varScope.addSVar("is_java_identifier_char_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_java_identifier_char_0_0", context));
    varScope.addSVar("get_main_class_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_main_class_name_0_0", context));
    varScope.addSVar("build_syntax_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_syntax_descriptor_0_0", context));
    varScope.addSVar("build_syntax_descriptor_generated_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_syntax_descriptor_generated_0_0", context));
    varScope.addSVar("create_syntax_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_syntax_descriptor_0_0", context));
    varScope.addSVar("create_spx_derived_syntax_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_derived_syntax_descriptor_0_0", context));
    varScope.addSVar("create_spx_syntax_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_syntax_descriptor_0_0", context));
    varScope.addSVar("create_spxlang_main_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spxlang_main_descriptor_0_0", context));
    varScope.addSVar("create_spxlang_editorservices_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spxlang_editorservices_0_0", context));
    varScope.addSVar("output_spx_derived_editor_services_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_spx_derived_editor_services_0_0", context));
    varScope.addSVar("output_spx_editor_services_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.output_spx_editor_services_0_0", context));
    varScope.addSVar("build_derived_references_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_derived_references_descriptor_0_0", context));
    varScope.addSVar("build_references_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_references_descriptor_0_0", context));
    varScope.addSVar("create_references_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_references_descriptor_0_0", context));
    varScope.addSVar("create_derived_references_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_derived_references_descriptor_0_0", context));
    varScope.addSVar("create_spx_derived_references_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_derived_references_descriptor_0_0", context));
    varScope.addSVar("build_outliner_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_outliner_descriptor_0_0", context));
    varScope.addSVar("build_derived_outliner_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_derived_outliner_descriptor_0_0", context));
    varScope.addSVar("create_spx_outliner_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_outliner_descriptor_0_0", context));
    varScope.addSVar("create_spx_derived_outliner_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_derived_outliner_descriptor_0_0", context));
    varScope.addSVar("create_outliner_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_outliner_descriptor_0_0", context));
    varScope.addSVar("create_derived_outliner_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_derived_outliner_descriptor_0_0", context));
    varScope.addSVar("heuristic_outliner_productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_outliner_productions_0_0", context));
    varScope.addSVar("create_main_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_main_descriptor_0_0", context));
    varScope.addSVar("default_main_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.default_main_descriptor_0_0", context));
    varScope.addSVar("default_spx_main_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.default_spx_main_descriptor_0_0", context));
    varScope.addSVar("build_folding_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_folding_descriptor_0_0", context));
    varScope.addSVar("build_derived_folding_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_derived_folding_descriptor_0_0", context));
    varScope.addSVar("create_spx_contentfolding_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_contentfolding_descriptor_0_0", context));
    varScope.addSVar("create_spx_derived_contentfolding_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_derived_contentfolding_descriptor_0_0", context));
    varScope.addSVar("create_folding_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_folding_descriptor_0_0", context));
    varScope.addSVar("create_derived_folding_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_derived_folding_descriptor_0_0", context));
    varScope.addSVar("heuristic_folding_productions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_folding_productions_0_0", context));
    varScope.addSVar("create_folding_or_outliner_rule_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_folding_or_outliner_rule_0_0", context));
    varScope.addSVar("build_contentcompletion_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_contentcompletion_descriptor_0_0", context));
    varScope.addSVar("build_derived_contentcompletion_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_derived_contentcompletion_descriptor_0_0", context));
    varScope.addSVar("create_spx_contentcompletion_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_contentcompletion_descriptor_0_0", context));
    varScope.addSVar("create_spx_derived_contentcompletion_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_derived_contentcompletion_descriptor_0_0", context));
    varScope.addSVar("create_completions_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_completions_descriptor_0_0", context));
    varScope.addSVar("create_derived_completions_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_derived_completions_descriptor_0_0", context));
    varScope.addSVar("keyword_to_completion_rule_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.keyword_to_completion_rule_0_0", context));
    varScope.addSVar("collect_all_keywords_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.collect_all_keywords_0_0", context));
    varScope.addSVar("prod_to_keywords_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.prod_to_keywords_0_0", context));
    varScope.addSVar("pattern_to_keywords_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pattern_to_keywords_0_0", context));
    varScope.addSVar("pattern_to_keywords_1_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pattern_to_keywords_1_0_0", context));
    varScope.addSVar("pattern_to_keywords_2_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pattern_to_keywords_2_0_0", context));
    varScope.addSVar("is_prefixed_keyword_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_prefixed_keyword_0_0", context));
    varScope.addSVar("build_colorer_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_colorer_descriptor_0_0", context));
    varScope.addSVar("build_derived_colorer_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_derived_colorer_descriptor_0_0", context));
    varScope.addSVar("create_colorer_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_colorer_descriptor_0_0", context));
    varScope.addSVar("create_spx_colorer_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_colorer_descriptor_0_0", context));
    varScope.addSVar("create_spx_derived_colorer_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_derived_colorer_descriptor_0_0", context));
    varScope.addSVar("build_derived_builders_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.build_derived_builders_descriptor_0_0", context));
    varScope.addSVar("create_builders_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_builders_descriptor_0_0", context));
    varScope.addSVar("create_spx_derived_builders_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_derived_builders_descriptor_0_0", context));
    varScope.addSVar("configure_main_descriptor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.configure_main_descriptor_0_0", context));
    varScope.addSVar("current_main_descriptor_file_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.current_main_descriptor_file_0_0", context));
    varScope.addSVar("find_main_module_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.find_main_module_0_0", context));
    varScope.addSVar("find_start_symbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.find_start_symbol_0_0", context));
    varScope.addSVar("find_editor_extensions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.find_editor_extensions_0_0", context));
    varScope.addSVar("find_package_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.find_package_name_0_0", context));
    varScope.addSVar("verbosity_scope_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verbosity_scope_1_1", context));
    varScope.addSVar("descriptor_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.descriptor_name_0_0", context));
    varScope.addSVar("main_descriptor_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.main_descriptor_name_0_0", context));
    varScope.addSVar("condition_to_java_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.condition_to_java_0_0", context));
    varScope.addSVar("parameterized_sort_to_asfix_sort_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.parameterized_sort_to_asfix_sort_0_0", context));
    varScope.addSVar("try_get_sort_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.try_get_sort_name_0_0", context));
    varScope.addSVar("check_validity_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.check_validity_0_0", context));
    varScope.addSVar("constraint_error_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.constraint_error_0_0", context));
    varScope.addSVar("register_rtg_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.register_rtg_0_0", context));
    varScope.addSVar("verified_start_symbol_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.verified_start_symbol_0_0", context));
    varScope.addSVar("heuristic_register_production_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_register_production_0_0", context));
    varScope.addSVar("heuristic_child_sorts_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_child_sorts_0_0", context));
    varScope.addSVar("heuristic_collect_all_rtg_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_collect_all_rtg_1_0", context));
    varScope.addSVar("heuristic_collect_all_visit_sort_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_collect_all_visit_sort_2_0", context));
    varScope.addSVar("heuristic_collect_all_visit_production_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_collect_all_visit_production_2_0", context));
    varScope.addSVar("heuristic_follow_single_child_productions1_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_follow_single_child_productions1_1_0", context));
    varScope.addSVar("heuristic_follow_single_child_productions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_follow_single_child_productions_1_0", context));
    varScope.addSVar("heuristic_rtg_sort_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_rtg_sort_name_0_0", context));
    varScope.addSVar("heuristic_asfix_sort_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_asfix_sort_name_0_0", context));
    varScope.addSVar("non_terminal_sort_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.non_terminal_sort_name_0_0", context));
    varScope.addSVar("constructor_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.constructor_name_0_0", context));
    varScope.addSVar("heuristic_sort_is_identifier_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_sort_is_identifier_0_0", context));
    varScope.addSVar("heuristic_sort_is_unvisited_list_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_sort_is_unvisited_list_0_0", context));
    varScope.addSVar("heuristic_sort_is_list_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_sort_is_list_0_0", context));
    varScope.addSVar("heuristic_production_has_no_same_sort_descendant_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.heuristic_production_has_no_same_sort_descendant_0_0", context));
    varScope.addSVar("is_string_production_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_string_production_0_0", context));
    varScope.addSVar("is_list_production_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_list_production_0_0", context));
    varScope.addSVar("is_list_term_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_list_term_0_0", context));
    varScope.addSVar("is_unvisited_list_production_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_unvisited_list_production_0_0", context));
    varScope.addSVar("get_list_production_item_sort_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_list_production_item_sort_0_0", context));
    varScope.addSVar("validator_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.validator_name_0_0", context));
    varScope.addSVar("create_validator_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_validator_0_0", context));
    varScope.addSVar("create_spxlang_lexicalconstructs_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spxlang_lexicalconstructs_0_0", context));
    varScope.addSVar("create_lang_idenditifiers_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_lang_idenditifiers_0_0", context));
    varScope.addSVar("create_lang_literals_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_lang_literals_0_0", context));
    varScope.addSVar("create_lang_keywords_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_lang_keywords_0_0", context));
    varScope.addSVar("create_lang_layout_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_lang_layout_0_0", context));
    varScope.addSVar("create_spxlang_definitions_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spxlang_definitions_0_0", context));
    varScope.addSVar("create_main_language_constructs_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_main_language_constructs_0_0", context));
    varScope.addSVar("create_lang_type_system_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_lang_type_system_0_0", context));
    varScope.addSVar("create_symantic_analyzer_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_symantic_analyzer_0_0", context));
    varScope.addSVar("create_spoofaxlang_config_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spoofaxlang_config_0_0", context));
    varScope.addSVar("create_spx_common_strategies_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spx_common_strategies_0_0", context));
    varScope.addSVar("create_spxlang_adapters_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_spxlang_adapters_0_0", context));
    varScope.addSVar("create_main_adapters_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_main_adapters_0_0", context));
    varScope.addSVar("create_builders_definition_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_builders_definition_0_0", context));
    varScope.addSVar("create_reference_resolver_definition_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_reference_resolver_definition_0_0", context));
    varScope.addSVar("create_semantic_completion_definition_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_semantic_completion_definition_0_0", context));
    varScope.addSVar("create_project_file_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_project_file_0_0", context));
    varScope.addSVar("create_pp_table_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_pp_table_0_0", context));
    varScope.addSVar("create_plugin_xml_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_plugin_xml_0_0", context));
    varScope.addSVar("copy_or_create_parse_table_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.copy_or_create_parse_table_0_0", context));
    varScope.addSVar("copy_parse_table_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.copy_parse_table_0_0", context));
    varScope.addSVar("create_parse_table_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_parse_table_0_0", context));
    varScope.addSVar("sdf2table_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf2table_0_0", context));
    varScope.addSVar("create_permissive_grammar_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_permissive_grammar_0_0", context));
    varScope.addSVar("permissive_grammar_target_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.permissive_grammar_target_0_0", context));
    varScope.addSVar("parse_table_target_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.parse_table_target_0_0", context));
    varScope.addSVar("parse_controller_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.parse_controller_name_0_0", context));
    varScope.addSVar("create_parse_controller_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_parse_controller_0_0", context));
    varScope.addSVar("create_packed_descriptor_file_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_packed_descriptor_file_0_0", context));
    varScope.addSVar("remove_empty_sections_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.remove_empty_sections_0_0", context));
    varScope.addSVar("packed_descriptor_file_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.packed_descriptor_file_name_0_0", context));
    varScope.addSVar("create_manifest_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_manifest_0_0", context));
    varScope.addSVar("create_jdt_prefs_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_jdt_prefs_0_0", context));
    varScope.addSVar("create_java_strategy_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_java_strategy_0_0", context));
    varScope.addSVar("create_java_strategy_1_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_java_strategy_1_0_0", context));
    varScope.addSVar("create_java_strategy_2_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_java_strategy_2_0_0", context));
    varScope.addSVar("create_java_strategy_3_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_java_strategy_3_0_0", context));
    varScope.addSVar("create_grammar_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_grammar_0_0", context));
    varScope.addSVar("create_grammar_main_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_grammar_main_0_0", context));
    varScope.addSVar("create_grammar_common_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_grammar_common_0_0", context));
    varScope.addSVar("trans_module_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.trans_module_name_0_0", context));
    varScope.addSVar("create_example_trans_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_example_trans_0_0", context));
    varScope.addSVar("create_example_file_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_example_file_0_0", context));
    varScope.addSVar("create_common_trans_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_common_trans_0_0", context));
    varScope.addSVar("create_classpath_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_classpath_0_0", context));
    varScope.addSVar("builder_xml_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.builder_xml_name_0_0", context));
    varScope.addSVar("create_builder_xml_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_builder_xml_0_0", context));
    varScope.addSVar("create_build_xml_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_build_xml_0_0", context));
    varScope.addSVar("create_build_generated_xml_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_build_generated_xml_0_0", context));
    varScope.addSVar("create_build_properties_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_build_properties_0_0", context));
    varScope.addSVar("create_activator_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.create_activator_0_0", context));
    varScope.addSVar("copy_jars_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.copy_jars_0_0", context));
    varScope.addSVar("copy_def_file_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.copy_def_file_0_0", context));
    varScope.addSVar("sdf2imp_options_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf2imp_options_0_0", context));
    varScope.addSVar("input_file_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.input_file_option_0_0", context));
    varScope.addSVar("parse_table_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.parse_table_option_0_0", context));
    varScope.addSVar("extensions_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.extensions_option_0_0", context));
    varScope.addSVar("package_name_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.package_name_option_0_0", context));
    varScope.addSVar("project_name_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.project_name_option_0_0", context));
    varScope.addSVar("jar_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.jar_option_0_0", context));
    varScope.addSVar("start_symbol_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.start_symbol_option_0_0", context));
    varScope.addSVar("new_project_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.new_project_option_0_0", context));
    varScope.addSVar("reset_files_option_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.reset_files_option_0_0", context));
    varScope.addSVar("parameterized_sort_to_rtg_sort_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.parameterized_sort_to_rtg_sort_0_0", context));
    varScope.addSVar("get_package_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_package_name_0_0", context));
    varScope.addSVar("get_package_name_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_package_name_1_0", context));
    varScope.addSVar("get_package_name_text_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.get_package_name_text_0_0", context));
    varScope.addSVar("default_package_name_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.default_package_name_0_0", context));
    varScope.addSVar("require_option_1_1", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.require_option_1_1", context));
    varScope.addSVar("main_SpoofaxGenerator_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.main_$Spoofax$Generator_0_0", context));
    varScope.addSVar("sdf2imp_jvm_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf2imp_jvm_0_0", context));
    varScope.addSVar("find_def_file_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.find_def_file_0_0", context));
    varScope.addSVar("generate_spoofaxlang_example_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.generate_spoofaxlang_example_0_0", context));
    varScope.addSVar("sdf2imp_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf2imp_0_0", context));
    varScope.addSVar("is_heuristic_services_needed_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.is_heuristic_services_needed_0_0", context));
    varScope.addSVar("sdf2rtg_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.sdf2rtg_0_0", context));
    varScope.addSVar("pack_default_sdf_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.pack_default_sdf_0_0", context));
    varScope.addSVar("Element_4_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Element_4_0", context));
    varScope.addSVar("EmptyElement_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Empty$Element_2_0", context));
    varScope.addSVar("Document_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Document_3_0", context));
    varScope.addSVar("Literal_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Literal_1_0", context));
    varScope.addSVar("SingleQuoted_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Single$Quoted_1_0", context));
    varScope.addSVar("DoubleQuoted_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Double$Quoted_1_0", context));
    varScope.addSVar("Attribute_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Attribute_2_0", context));
    varScope.addSVar("EntityRef_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Entity$Ref_1_0", context));
    varScope.addSVar("HexCharRef_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Hex$Char$Ref_1_0", context));
    varScope.addSVar("DecCharRef_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Dec$Char$Ref_1_0", context));
    varScope.addSVar("CDATASection_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$C$D$A$T$A$Section_1_0", context));
    varScope.addSVar("Text_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Text_1_0", context));
    varScope.addSVar("DocTypeDecl_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Doc$Type$Decl_2_0", context));
    varScope.addSVar("DocTypePrologue_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Doc$Type$Prologue_2_0", context));
    varScope.addSVar("VersionSingle_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Version$Single_1_0", context));
    varScope.addSVar("Version_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Version_1_0", context));
    varScope.addSVar("EncodingSingle_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Encoding$Single_1_0", context));
    varScope.addSVar("Encoding_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Encoding_1_0", context));
    varScope.addSVar("StandaloneSingle_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Standalone$Single_1_0", context));
    varScope.addSVar("Standalone_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Standalone_1_0", context));
    varScope.addSVar("EncodingDecl_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Encoding$Decl_1_0", context));
    varScope.addSVar("VersionDecl_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Version$Decl_1_0", context));
    varScope.addSVar("StandaloneDecl_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Standalone$Decl_1_0", context));
    varScope.addSVar("XMLDecl_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$X$M$L$Decl_3_0", context));
    varScope.addSVar("Epilogue_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Epilogue_1_0", context));
    varScope.addSVar("Prologue_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Prologue_3_0", context));
    varScope.addSVar("PublicExternalID_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Public$External$I$D_2_0", context));
    varScope.addSVar("SystemExternalID_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$System$External$I$D_1_0", context));
    varScope.addSVar("PI_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$P$I_2_0", context));
    varScope.addSVar("Prefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Prefix_1_0", context));
    varScope.addSVar("QName_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Q$Name_2_0", context));
    varScope.addSVar("IgnoreMissingCons_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Ignore$Missing$Cons_0_0", context));
    varScope.addSVar("SdfMainModuleFlag_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Sdf$Main$Module$Flag_0_0", context));
    varScope.addSVar("IncludeDef_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Include$Def_1_0", context));
    varScope.addSVar("IncludeDef_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Include$Def_2_0", context));
    varScope.addSVar("IncludeDir_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Include$Dir_1_0", context));
    varScope.addSVar("IncludeXTC_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Include$X$T$C_0_0", context));
    varScope.addSVar("IncludePathName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Include$Path$Name_1_0", context));
    varScope.addSVar("IncludeFromPath_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Include$From$Path_1_0", context));
    varScope.addSVar("rtg_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.rtg_1_0", context));
    varScope.addSVar("ignore_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.ignore_0_0", context));
    varScope.addSVar("flatlex_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.flatlex_2_0", context));
    varScope.addSVar("ConcLayout_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Conc$Layout_1_0", context));
    varScope.addSVar("INSERT__AT__END_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$I$N$S$E$R$T__$A$T__$E$N$D_2_0", context));
    varScope.addSVar("INSERT__BEFORE_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$I$N$S$E$R$T__$B$E$F$O$R$E_2_0", context));
    varScope.addSVar("DETETION_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$D$E$T$E$T$I$O$N_1_0", context));
    varScope.addSVar("REPLACEMENT_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$R$E$P$L$A$C$E$M$E$N$T_2_0", context));
    varScope.addSVar("INSERT__AT__END_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$I$N$S$E$R$T__$A$T__$E$N$D_3_0", context));
    varScope.addSVar("INSERT__BEFORE_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$I$N$S$E$R$T__$B$E$F$O$R$E_3_0", context));
    varScope.addSVar("REPLACEMENT_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$R$E$P$L$A$C$E$M$E$N$T_3_0", context));
    varScope.addSVar("deprecated_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.deprecated_0_0", context));
    varScope.addSVar("deprecated_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.deprecated_1_0", context));
    varScope.addSVar("CommentLine_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Comment$Line_1_0", context));
    varScope.addSVar("EmptyLine_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Empty$Line_0_0", context));
    varScope.addSVar("Error_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Error_2_0", context));
    varScope.addSVar("ImportRenamed_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Import$Renamed_2_0", context));
    varScope.addSVar("Import_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Import_1_0", context));
    varScope.addSVar("NoImports_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$No$Imports_0_0", context));
    varScope.addSVar("Imports_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Imports_1_0", context));
    varScope.addSVar("Module_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Module_3_0", context));
    varScope.addSVar("Source_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Source_0_0", context));
    varScope.addSVar("Cursor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Cursor_0_0", context));
    varScope.addSVar("Meta_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Meta_0_0", context));
    varScope.addSVar("Persistent_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Persistent_0_0", context));
    varScope.addSVar("RealTime_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Real$Time_0_0", context));
    varScope.addSVar("OpenEditor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Open$Editor_0_0", context));
    varScope.addSVar("Linked_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Linked_0_0", context));
    varScope.addSVar("Blank_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Blank_0_0", context));
    varScope.addSVar("Disable_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Disable_0_0", context));
    varScope.addSVar("PlaceholderWithSort_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Placeholder$With$Sort_2_0", context));
    varScope.addSVar("Placeholder_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Placeholder_1_0", context));
    varScope.addSVar("CompletionPrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Completion$Prefix_1_0", context));
    varScope.addSVar("NoCompletionPrefix_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$No$Completion$Prefix_0_0", context));
    varScope.addSVar("NoColor_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$No$Color_0_0", context));
    varScope.addSVar("ColorRGB_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Color$R$G$B_3_0", context));
    varScope.addSVar("ColorDefault_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Color$Default_0_0", context));
    varScope.addSVar("BOLD__ITALIC_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$B$O$L$D__$I$T$A$L$I$C_0_0", context));
    varScope.addSVar("ITALIC_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$I$T$A$L$I$C_0_0", context));
    varScope.addSVar("BOLD_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$B$O$L$D_0_0", context));
    varScope.addSVar("NORMAL_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$N$O$R$M$A$L_0_0", context));
    varScope.addSVar("TK__UNKNOWN_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$T$K__$U$N$K$N$O$W$N_0_0", context));
    varScope.addSVar("TK__ERROR_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$T$K__$E$R$R$O$R_0_0", context));
    varScope.addSVar("TK__VAR_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$T$K__$V$A$R_0_0", context));
    varScope.addSVar("TK__OPERATOR_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$T$K__$O$P$E$R$A$T$O$R_0_0", context));
    varScope.addSVar("TK__KEYWORD_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$T$K__$K$E$Y$W$O$R$D_0_0", context));
    varScope.addSVar("TK__STRING_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$T$K__$S$T$R$I$N$G_0_0", context));
    varScope.addSVar("TK__LAYOUT_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$T$K__$L$A$Y$O$U$T_0_0", context));
    varScope.addSVar("TK__NUMBER_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$T$K__$N$U$M$B$E$R_0_0", context));
    varScope.addSVar("TK__IDENTIFIER_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$T$K__$I$D$E$N$T$I$F$I$E$R_0_0", context));
    varScope.addSVar("Token_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Token_1_0", context));
    varScope.addSVar("AttributeRef_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Attribute$Ref_1_0", context));
    varScope.addSVar("Attribute_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Attribute_3_0", context));
    varScope.addSVar("ColorDef_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Color$Def_2_0", context));
    varScope.addSVar("ColorRuleNamed_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Color$Rule$Named_3_0", context));
    varScope.addSVar("ColorRuleAllNamed_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Color$Rule$All$Named_3_0", context));
    varScope.addSVar("ColorRule_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Color$Rule_2_0", context));
    varScope.addSVar("ColorRuleAll_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Color$Rule$All_2_0", context));
    varScope.addSVar("OutlineRule_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Outline$Rule_1_0", context));
    varScope.addSVar("Folded_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Folded_0_0", context));
    varScope.addSVar("FoldRuleAll_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Fold$Rule$All_2_0", context));
    varScope.addSVar("FoldRule_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Fold$Rule_2_0", context));
    varScope.addSVar("IndentDef_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Indent$Def_1_0", context));
    varScope.addSVar("FenceDef_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Fence$Def_2_0", context));
    varScope.addSVar("NoContinuation_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$No$Continuation_0_0", context));
    varScope.addSVar("BlockCommentDef_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Block$Comment$Def_3_0", context));
    varScope.addSVar("IdentifierLexical_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Identifier$Lexical_1_0", context));
    varScope.addSVar("IndentDefs_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Indent$Defs_1_0", context));
    varScope.addSVar("FenceDefs_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Fence$Defs_1_0", context));
    varScope.addSVar("BlockCommentDefs_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Block$Comment$Defs_1_0", context));
    varScope.addSVar("LineCommentPrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Line$Comment$Prefix_1_0", context));
    varScope.addSVar("Disambiguator_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Disambiguator_1_0", context));
    varScope.addSVar("UnmanagedTablePrefix_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Unmanaged$Table$Prefix_1_0", context));
    varScope.addSVar("Aliases_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Aliases_1_0", context));
    varScope.addSVar("Extends_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Extends_1_0", context));
    varScope.addSVar("URL_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$U$R$L_1_0", context));
    varScope.addSVar("StartSymbols_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Start$Symbols_1_0", context));
    varScope.addSVar("TableProvider_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Table$Provider_1_0", context));
    varScope.addSVar("Table_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Table_1_0", context));
    varScope.addSVar("Extensions_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Extensions_1_0", context));
    varScope.addSVar("LanguageId_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Language$Id_1_0", context));
    varScope.addSVar("LanguageName_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Language$Name_1_0", context));
    varScope.addSVar("Values_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Values_1_0", context));
    varScope.addSVar("Refactorings_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Refactorings_2_0", context));
    varScope.addSVar("Builders_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Builders_2_0", context));
    varScope.addSVar("Completions_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Completions_2_0", context));
    varScope.addSVar("References_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$References_2_0", context));
    varScope.addSVar("Colorer_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Colorer_2_0", context));
    varScope.addSVar("Outliner_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Outliner_2_0", context));
    varScope.addSVar("Folding_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Folding_2_0", context));
    varScope.addSVar("Language_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Language_2_0", context));
    varScope.addSVar("Attribute_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Attribute_1_0", context));
    varScope.addSVar("Strategy_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Strategy_1_0", context));
    varScope.addSVar("Refactoring_4_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Refactoring_4_0", context));
    varScope.addSVar("PrettyPrint_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Pretty$Print_1_0", context));
    varScope.addSVar("PPTable_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$P$P$Table_1_0", context));
    varScope.addSVar("BuilderCaption_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Builder$Caption_1_0", context));
    varScope.addSVar("Builder_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Builder_3_0", context));
    varScope.addSVar("SemanticObserver_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Semantic$Observer_1_0", context));
    varScope.addSVar("CompletionTemplateEx_4_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Completion$Template$Ex_4_0", context));
    varScope.addSVar("CompletionTrigger_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Completion$Trigger_2_0", context));
    varScope.addSVar("CompletionTemplateWithSort_4_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Completion$Template$With$Sort_4_0", context));
    varScope.addSVar("CompletionTemplate_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Completion$Template_3_0", context));
    varScope.addSVar("CompletionKeyword_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Completion$Keyword_2_0", context));
    varScope.addSVar("CompletionProposer_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Completion$Proposer_1_0", context));
    varScope.addSVar("OccurrenceRule_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Occurrence$Rule_2_0", context));
    varScope.addSVar("HoverRule_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Hover$Rule_2_0", context));
    varScope.addSVar("ReferenceRule_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Reference$Rule_2_0", context));
    varScope.addSVar("ReferenceHoverRule_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Reference$Hover$Rule_3_0", context));
    varScope.addSVar("OnSave_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$On$Save_2_0", context));
    varScope.addSVar("SemanticProvider_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Semantic$Provider_1_0", context));
    varScope.addSVar("SortAndConstructor_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Sort$And$Constructor_2_0", context));
    varScope.addSVar("Constructor_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Constructor_1_0", context));
    varScope.addSVar("ConstructorOnly_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Constructor$Only_1_0", context));
    varScope.addSVar("ListSort_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$List$Sort_1_0", context));
    varScope.addSVar("Sort_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Sort_1_0", context));
    varScope.addSVar("SimpleAttribute_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Simple$Attribute_2_0", context));
    varScope.addSVar("Module__START_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Module__$S$T$A$R$T_3_0", context));
    varScope.addSVar("SDF__START_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$S$D$F__$S$T$A$R$T_3_0", context));
    varScope.addSVar("EmptyModuleIterStar_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Empty$Module$Iter$Star_0_0", context));
    varScope.addSVar("NonEmptyModuleIterStar_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Non$Empty$Module$Iter$Star_1_0", context));
    varScope.addSVar("MM_iter_3_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$M$M_iter_3_0", context));
    varScope.addSVar("M_iter_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$M_iter_1_0", context));
    varScope.addSVar("Module_s_overlay_1_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Module_s_overlay_1_0", context));
    varScope.addSVar("Definition_overlay_2_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$Definition_overlay_2_0", context));
    varScope.addSVar("MAX__TINY__LIST__PARTS_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$M$A$X__$T$I$N$Y__$L$I$S$T__$P$A$R$T$S_0_0", context));
    varScope.addSVar("MAX__TINY__LIST__PARTS__1_0_0", new InteropSDefT(classLoader, "org.strategoxt.imp.spoofax.generator.$M$A$X__$T$I$N$Y__$L$I$S$T__$P$A$R$T$S__1_0_0", context));
  }
}