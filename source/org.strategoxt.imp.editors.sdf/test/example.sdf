module example

exports

  context-free syntax
  
%%    "Foo" -> Foo {cons("x")}
%%    "ar" -> Bar {bracket}
%%   A -> BC {reject, bracket}
    
   %% A|B  -> D {cons("X")}
    
   ("Foo" "Bar" "Baz") "Z" -> D {cons(notastring)}
  
    Z* ->  Start
    
    Z+ -> Z {cons("x")}
  
  
    FOO -> Start
    
    Bar -> Start
    "X" -> Bar {cons("X")}
    
    %%[A][A-Z]* -> Bar {cons("X")}
    
    "nil" -> Nil {cons("Nil")}
    
    Start Start -> Z
    %%X Y Z -> Bar

    ","? -> X {cons("X")}
    ("," ",")? -> X {cons("X")}
    ("," X ",")? -> X {cons("X")} %% this is ok
    ("," X X ",")? -> X {cons("X")}

  syntax
    
    "X" [A-Z]* -> <FOO-CF>
    <FOO-CF> ->FOO