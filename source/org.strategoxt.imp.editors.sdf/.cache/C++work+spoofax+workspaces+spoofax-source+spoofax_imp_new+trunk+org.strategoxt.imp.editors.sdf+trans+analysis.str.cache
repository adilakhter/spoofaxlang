Module("analysis",[Imports([Import("libstratego-lib"),Import("libstratego-sdf"),Import("libstratego-sglr"),Import("lib/editor-common.generated")]),Strategies([RDefNoArgs("analyze-ast",Rule(NoAnnoList(Tuple([Var("ast"),Var("path"),Var("project-path")])),Var("ast'"),[WithClause(Seq(Assign(Var("current-file"),NoAnnoList(StringQuotation1("                        ",[StringEscape1("                        ",Var("project-path")),QStr("/"),StringEscape1("                                       ",Var("path"))]))),GenDynRules([DynRuleAssign(DynRuleId(RDecNoArgs("CurrentDir")),App(CallNoArgs(SVar("dirname")),NoAnnoList(StringQuotation1("                                   ",[StringEscape1("                                   ",Var("project-path")),QStr("/"),StringEscape1("                                                  ",Var("path"))])))),DynRuleAssign(DynRuleId(RDecNoArgs("CurrentFile")),App(CallNoArgs(SVar("base-filename")),Var("path"))),SetDynRuleMatch(DynRuleId(RDecNoArgs("IsImported")),Var("current-file")),DynRuleAssign(DynRuleId(RDecNoArgs("ProjectDir")),Var("project-path"))]))),WithClause(Assign(Var("ast'"),App(CallNoArgs(SVar("declare-globals-top")),Var("ast"))))]))]),Rules([SDefNoArgs("declare-globals-top",Call(SVar("alltd"),[CallNoArgs(SVar("declare-globals"))])),RDefNoArgs("declare-globals",Rule(NoAnnoList(Op("renamed-module",[Var("x"),NoAnnoList(Op("renamings",[Var("y")]))])),RootApp(Id),BA(All(Call(SVar("try"),[Seq(Match(NoAnnoList(Op("symbol",[Wld,RootApp(Id)]))),CallNoArgs(SVar("declare-simple-global")))])),Var("y")))),RDefNoArgs("declare-globals",Rule(NoAnnoList(Op("unparameterized",[Var("x")])),NoAnnoList(Op("unparameterized",[Var("x")])),LChoice(BA(Call(SVar("open-import"),[CallNoArgs(SVar("resolve-import")),CallNoArgs(SVar("parse-sdf-file")),CallNoArgs(SVar("declare-globals-top"))]),Var("x")),GenDynRules([SetDynRuleMatch(DynRuleId(RDecNoArgs("IsImportFailed")),Wld)])))),RDefNoArgs("declare-globals",Rule(NoAnnoList(Op("parameterized",[Var("x"),Var("y")])),NoAnnoList(Op("parameterized",[Var("x"),Var("y")])),Seq(BA(CallNoArgs(SVar("declare-globals")),NoAnnoList(Op("unparameterized",[Var("x")]))),BA(Call(SVar("alltd"),[CallNoArgs(SVar("declare-simple-global"))]),Var("y"))))),SDefNoArgs("resolve-import",LChoice(Seq(LRule(RuleNoCond(Var("x"),NoAnnoList(StringQuotation1("            ",[StringEscape1("            ",RootApp(CallNoArgs(SVar("ProjectDir")))),QStr("/"),StringEscape1("                           ",Var("x")),QStr(".sdf")])))),CallNoArgs(SVar("file-exists"))),LChoice(Seq(LRule(RuleNoCond(Var("x"),NoAnnoList(StringQuotation1("            ",[StringEscape1("            ",RootApp(CallNoArgs(SVar("ProjectDir")))),QStr("/syntax/"),StringEscape1("                                  ",Var("x")),QStr(".sdf")])))),CallNoArgs(SVar("file-exists"))),LChoice(Seq(LRule(RuleNoCond(Var("x"),NoAnnoList(StringQuotation1("            ",[StringEscape1("            ",RootApp(CallNoArgs(SVar("ProjectDir")))),QStr("/lib/"),StringEscape1("                               ",Var("x")),QStr(".def")])))),CallNoArgs(SVar("file-exists"))),Seq(LRule(RuleNoCond(Var("x"),NoAnnoList(StringQuotation1("            ",[StringEscape1("            ",RootApp(CallNoArgs(SVar("CurrentDir")))),QStr("/"),StringEscape1("                           ",Var("x")),QStr(".sdf")])))),CallNoArgs(SVar("file-exists"))))))),RDefNoArgs("declare-globals",Rule(As(Var("prod"),NoAnnoList(Op("prod",[Var("lhs"),Var("sort"),Wld]))),RootApp(Id),[WhereClause(Seq(Build(Var("sort")),Seq(Call(SVar("try"),[Choice(Match(NoAnnoList(Op("cf",[RootApp(Id)]))),Match(NoAnnoList(Op("lex",[RootApp(Id)]))))]),Seq(Call(SVar("repeat"),[Match(NoAnnoList(Op("label",[Wld,RootApp(Id)])))]),Choice(Match(NoAnnoList(Op("sort",[Var("x")]))),Match(NoAnnoList(Op("parameterized-sort",[Var("x"),Wld])))))))),WithClause(LChoice(BA(CallNoArgs(SVar("Declaration")),Var("x")),Seq(Assign(Var("file"),RootApp(CallNoArgs(SVar("CurrentFile")))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("Declaration")),RuleNoCond(Var("x"),Var("prod"))),SetDynRule(DynRuleId(RDecNoArgs("DeclarationFile")),RuleNoCond(Var("x"),Var("file")))])))),WithClause(BA(Call(SVar("alltd"),[CallNoArgs(SVar("declare-use"))]),Var("lhs")))])),RDefNoArgs("declare-globals",Rule(NoAnnoList(Op("'sorts",[Wld])),RootApp(Id),[WithClause(Call(SVar("alltd"),[CallNoArgs(SVar("declare-use"))]))])),RDefNoArgs("declare-globals",Rule(NoAnnoList(Op("context-free-start-symbols",[Wld])),RootApp(Id),[WithClause(Call(SVar("alltd"),[CallNoArgs(SVar("declare-use"))]))])),RDefNoArgs("declare-globals",Rule(NoAnnoList(Op("lexical-start-symbols",[Wld])),RootApp(Id),[WithClause(Call(SVar("alltd"),[CallNoArgs(SVar("declare-use"))]))])),RDefNoArgs("declare-globals",Rule(NoAnnoList(Op("kernel-start-symbols",[Wld])),RootApp(Id),[WithClause(Call(SVar("alltd"),[CallNoArgs(SVar("declare-use"))]))])),RDefNoArgs("declare-simple-global",Rule(NoAnnoList(Op("sort",[Var("x")])),RootApp(Id),[WithClause(GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("Declaration")),RuleNoCond(Var("x"),Var("x")))]))])),RDefNoArgs("declare-use",Rule(NoAnnoList(Op("sort",[Var("x")])),RootApp(Id),[WithClause(GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("Usage")),RuleNoCond(Var("x"),Var("x")))]))])),RDefNoArgs("declare-use",Rule(NoAnnoList(Op("parameterized-sort",[Var("x"),Var("y")])),RootApp(Id),IfThen(Seq(AM(Build(Var("y")),NoAnnoList(List([NoAnnoList(Op("sort",[Var("y'")]))]))),Seq(BA(CallNoArgs(SVar("is-string")),Var("x")),BA(CallNoArgs(SVar("is-string")),Var("y'")))),Seq(Assign(Var("text"),NoAnnoList(StringQuotation2("                  ",[StringEscape2("                  ",Var("x")),QStr("[["),StringEscape2("                       ",Var("y'")),QStr("]]")]))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("Usage")),RuleNoCond(Var("text"),Var("text")))]))))),RDefNoArgs("propose-completion",Rule(NoAnnoList(Op("sort",[NoAnnoList(Op("COMPLETION",[Var("x")]))])),NoAnnoList(List([Var(ListVar("decl*")),Var(ListVar("use*"))])),[WithClause(Seq(Assign(Var(ListVar("decl*")),App(CallNoArgs(SVar("all-keys-Declaration")),Var("x"))),Assign(Var(ListVar("use*")),App(CallNoArgs(SVar("all-keys-Usage")),Var("x")))))])),RDefNoArgs("propose-completion",Rule(NoAnnoList(Op("NOCONTEXT",[NoAnnoList(Op("COMPLETION",[Var("x")]))])),NoAnnoList(List([Var(ListVar("decl*")),Var(ListVar("use*"))])),[WithClause(Seq(Assign(Var(ListVar("decl*")),App(CallNoArgs(SVar("all-keys-Declaration")),Var("x"))),Assign(Var(ListVar("use*")),App(CallNoArgs(SVar("all-keys-Usage")),Var("x")))))]))])])