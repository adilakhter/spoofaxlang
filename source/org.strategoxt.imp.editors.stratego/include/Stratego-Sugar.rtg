
regular tree grammar
  start Module
  productions
    ListStarOfTerm0              -> ListPlusOfTerm0
    ListStarOfTerm0              -> <nil>()
    ListStarOfTerm0              -> <conc>(ListStarOfTerm0,ListStarOfTerm0)
    ListPlusOfTerm0              -> <conc>(ListStarOfTerm0,ListPlusOfTerm0)
    ListPlusOfTerm0              -> <conc>(ListPlusOfTerm0,ListStarOfTerm0)
    ListPlusOfTerm0              -> <conc>(ListPlusOfTerm0,ListPlusOfTerm0)
    ListPlusOfTerm0              -> <cons>(Term,ListStarOfTerm0)
    ListStarOfId0                -> ListPlusOfId0
    ListStarOfId0                -> <nil>()
    ListStarOfId0                -> <conc>(ListStarOfId0,ListStarOfId0)
    ListPlusOfId0                -> <conc>(ListStarOfId0,ListPlusOfId0)
    ListPlusOfId0                -> <conc>(ListPlusOfId0,ListStarOfId0)
    ListPlusOfId0                -> <conc>(ListPlusOfId0,ListPlusOfId0)
    ListPlusOfId0                -> <cons>(Id,ListStarOfId0)
    ListStarOfTypedid0           -> ListPlusOfTypedid0
    ListStarOfTypedid0           -> <nil>()
    ListStarOfTypedid0           -> <conc>(ListStarOfTypedid0,ListStarOfTypedid0)
    ListPlusOfTypedid0           -> <conc>(ListStarOfTypedid0,ListPlusOfTypedid0)
    ListPlusOfTypedid0           -> <conc>(ListPlusOfTypedid0,ListStarOfTypedid0)
    ListPlusOfTypedid0           -> <conc>(ListPlusOfTypedid0,ListPlusOfTypedid0)
    ListPlusOfTypedid0           -> <cons>(Typedid,ListStarOfTypedid0)
    ListStarOfDynRuleDef0        -> ListPlusOfDynRuleDef0
    ListStarOfDynRuleDef0        -> <nil>()
    ListStarOfDynRuleDef0        -> <conc>(ListStarOfDynRuleDef0,ListStarOfDynRuleDef0)
    ListPlusOfDynRuleDef0        -> <conc>(ListStarOfDynRuleDef0,ListPlusOfDynRuleDef0)
    ListPlusOfDynRuleDef0        -> <conc>(ListPlusOfDynRuleDef0,ListStarOfDynRuleDef0)
    ListPlusOfDynRuleDef0        -> <conc>(ListPlusOfDynRuleDef0,ListPlusOfDynRuleDef0)
    ListPlusOfDynRuleDef0        -> <cons>(DynRuleDef,ListStarOfDynRuleDef0)
    ListStarOfDynRuleScopeId0    -> ListPlusOfDynRuleScopeId0
    ListStarOfDynRuleScopeId0    -> <nil>()
    ListStarOfDynRuleScopeId0    -> <conc>(ListStarOfDynRuleScopeId0,ListStarOfDynRuleScopeId0)
    ListPlusOfDynRuleScopeId0    -> <conc>(ListStarOfDynRuleScopeId0,ListPlusOfDynRuleScopeId0)
    ListPlusOfDynRuleScopeId0    -> <conc>(ListPlusOfDynRuleScopeId0,ListStarOfDynRuleScopeId0)
    ListPlusOfDynRuleScopeId0    -> <conc>(ListPlusOfDynRuleScopeId0,ListPlusOfDynRuleScopeId0)
    ListPlusOfDynRuleScopeId0    -> <cons>(DynRuleScopeId,ListStarOfDynRuleScopeId0)
    ListStarOfOverlay0           -> ListPlusOfOverlay0
    ListStarOfOverlay0           -> <nil>()
    ListStarOfOverlay0           -> <conc>(ListStarOfOverlay0,ListStarOfOverlay0)
    ListPlusOfOverlay0           -> <conc>(ListStarOfOverlay0,ListPlusOfOverlay0)
    ListPlusOfOverlay0           -> <conc>(ListPlusOfOverlay0,ListStarOfOverlay0)
    ListPlusOfOverlay0           -> <conc>(ListPlusOfOverlay0,ListPlusOfOverlay0)
    ListPlusOfOverlay0           -> <cons>(Overlay,ListStarOfOverlay0)
    ListStarOfDef0               -> ListPlusOfDef0
    ListStarOfDef0               -> <nil>()
    ListStarOfDef0               -> <conc>(ListStarOfDef0,ListStarOfDef0)
    ListPlusOfDef0               -> <conc>(ListStarOfDef0,ListPlusOfDef0)
    ListPlusOfDef0               -> <conc>(ListPlusOfDef0,ListStarOfDef0)
    ListPlusOfDef0               -> <conc>(ListPlusOfDef0,ListPlusOfDef0)
    ListPlusOfDef0               -> <cons>(Def,ListStarOfDef0)
    ListStarOfRuleCond0          -> ListPlusOfRuleCond0
    ListStarOfRuleCond0          -> <nil>()
    ListStarOfRuleCond0          -> <conc>(ListStarOfRuleCond0,ListStarOfRuleCond0)
    ListPlusOfRuleCond0          -> <conc>(ListStarOfRuleCond0,ListPlusOfRuleCond0)
    ListPlusOfRuleCond0          -> <conc>(ListPlusOfRuleCond0,ListStarOfRuleCond0)
    ListPlusOfRuleCond0          -> <conc>(ListPlusOfRuleCond0,ListPlusOfRuleCond0)
    ListPlusOfRuleCond0          -> <cons>(RuleCond,ListStarOfRuleCond0)
    ListStarOfAnno0              -> ListPlusOfAnno0
    ListStarOfAnno0              -> <nil>()
    ListStarOfAnno0              -> <conc>(ListStarOfAnno0,ListStarOfAnno0)
    ListPlusOfAnno0              -> <conc>(ListStarOfAnno0,ListPlusOfAnno0)
    ListPlusOfAnno0              -> <conc>(ListPlusOfAnno0,ListStarOfAnno0)
    ListPlusOfAnno0              -> <conc>(ListPlusOfAnno0,ListPlusOfAnno0)
    ListPlusOfAnno0              -> <cons>(Anno,ListStarOfAnno0)
    ListStarOfSwitchCase0        -> ListPlusOfSwitchCase0
    ListStarOfSwitchCase0        -> <nil>()
    ListStarOfSwitchCase0        -> <conc>(ListStarOfSwitchCase0,ListStarOfSwitchCase0)
    ListPlusOfSwitchCase0        -> <conc>(ListStarOfSwitchCase0,ListPlusOfSwitchCase0)
    ListPlusOfSwitchCase0        -> <conc>(ListPlusOfSwitchCase0,ListStarOfSwitchCase0)
    ListPlusOfSwitchCase0        -> <conc>(ListPlusOfSwitchCase0,ListPlusOfSwitchCase0)
    ListPlusOfSwitchCase0        -> <cons>(SwitchCase,ListStarOfSwitchCase0)
    ListStarOfStrategy0          -> ListPlusOfStrategy0
    ListStarOfStrategy0          -> <nil>()
    ListStarOfStrategy0          -> <conc>(ListStarOfStrategy0,ListStarOfStrategy0)
    ListPlusOfStrategy0          -> <conc>(ListStarOfStrategy0,ListPlusOfStrategy0)
    ListPlusOfStrategy0          -> <conc>(ListPlusOfStrategy0,ListStarOfStrategy0)
    ListPlusOfStrategy0          -> <conc>(ListPlusOfStrategy0,ListPlusOfStrategy0)
    ListPlusOfStrategy0          -> <cons>(Strategy,ListStarOfStrategy0)
    ListStarOfSort0              -> ListPlusOfSort0
    ListStarOfSort0              -> <nil>()
    ListStarOfSort0              -> <conc>(ListStarOfSort0,ListStarOfSort0)
    ListPlusOfSort0              -> <conc>(ListStarOfSort0,ListPlusOfSort0)
    ListPlusOfSort0              -> <conc>(ListPlusOfSort0,ListStarOfSort0)
    ListPlusOfSort0              -> <conc>(ListPlusOfSort0,ListPlusOfSort0)
    ListPlusOfSort0              -> <cons>(Sort,ListStarOfSort0)
    ListStarOfSdecl0             -> ListPlusOfSdecl0
    ListStarOfSdecl0             -> <nil>()
    ListStarOfSdecl0             -> <conc>(ListStarOfSdecl0,ListStarOfSdecl0)
    ListPlusOfSdecl0             -> <conc>(ListStarOfSdecl0,ListPlusOfSdecl0)
    ListPlusOfSdecl0             -> <conc>(ListPlusOfSdecl0,ListStarOfSdecl0)
    ListPlusOfSdecl0             -> <conc>(ListPlusOfSdecl0,ListPlusOfSdecl0)
    ListPlusOfSdecl0             -> <cons>(Sdecl,ListStarOfSdecl0)
    ListStarOfImportModName0     -> ListPlusOfImportModName0
    ListStarOfImportModName0     -> <nil>()
    ListStarOfImportModName0     -> <conc>(ListStarOfImportModName0,ListStarOfImportModName0)
    ListPlusOfImportModName0     -> <conc>(ListStarOfImportModName0,ListPlusOfImportModName0)
    ListPlusOfImportModName0     -> <conc>(ListPlusOfImportModName0,ListStarOfImportModName0)
    ListPlusOfImportModName0     -> <conc>(ListPlusOfImportModName0,ListPlusOfImportModName0)
    ListPlusOfImportModName0     -> <cons>(ImportModName,ListStarOfImportModName0)
    ListStarOfDecl0              -> ListPlusOfDecl0
    ListStarOfDecl0              -> <nil>()
    ListStarOfDecl0              -> <conc>(ListStarOfDecl0,ListStarOfDecl0)
    ListPlusOfDecl0              -> <conc>(ListStarOfDecl0,ListPlusOfDecl0)
    ListPlusOfDecl0              -> <conc>(ListPlusOfDecl0,ListStarOfDecl0)
    ListPlusOfDecl0              -> <conc>(ListPlusOfDecl0,ListPlusOfDecl0)
    ListPlusOfDecl0              -> <cons>(Decl,ListStarOfDecl0)
    ListStarOfID0                -> ListPlusOfID0
    ListStarOfID0                -> <nil>()
    ListStarOfID0                -> <conc>(ListStarOfID0,ListStarOfID0)
    ListPlusOfID0                -> <conc>(ListStarOfID0,ListPlusOfID0)
    ListPlusOfID0                -> <conc>(ListPlusOfID0,ListStarOfID0)
    ListPlusOfID0                -> <conc>(ListPlusOfID0,ListPlusOfID0)
    ListPlusOfID0                -> <cons>(ID,ListStarOfID0)
    ListStarOfArgType0           -> ListPlusOfArgType0
    ListStarOfArgType0           -> <nil>()
    ListStarOfArgType0           -> <conc>(ListStarOfArgType0,ListStarOfArgType0)
    ListPlusOfArgType0           -> <conc>(ListStarOfArgType0,ListPlusOfArgType0)
    ListPlusOfArgType0           -> <conc>(ListPlusOfArgType0,ListStarOfArgType0)
    ListPlusOfArgType0           -> <conc>(ListPlusOfArgType0,ListPlusOfArgType0)
    ListPlusOfArgType0           -> <cons>(ArgType,ListStarOfArgType0)
    ListStarOfOpdecl0            -> ListPlusOfOpdecl0
    ListStarOfOpdecl0            -> <nil>()
    ListStarOfOpdecl0            -> <conc>(ListStarOfOpdecl0,ListStarOfOpdecl0)
    ListPlusOfOpdecl0            -> <conc>(ListStarOfOpdecl0,ListPlusOfOpdecl0)
    ListPlusOfOpdecl0            -> <conc>(ListPlusOfOpdecl0,ListStarOfOpdecl0)
    ListPlusOfOpdecl0            -> <conc>(ListPlusOfOpdecl0,ListPlusOfOpdecl0)
    ListPlusOfOpdecl0            -> <cons>(Opdecl,ListStarOfOpdecl0)
    ListStarOfSort1              -> ListPlusOfSort1
    ListStarOfSort1              -> <nil>()
    ListStarOfSort1              -> <conc>(ListStarOfSort1,ListStarOfSort1)
    ListPlusOfSort1              -> <conc>(ListStarOfSort1,ListPlusOfSort1)
    ListPlusOfSort1              -> <conc>(ListPlusOfSort1,ListStarOfSort1)
    ListPlusOfSort1              -> <conc>(ListPlusOfSort1,ListPlusOfSort1)
    ListPlusOfSort1              -> <cons>(Sort,ListStarOfSort1)
    ListStarOfCharClass0         -> ListPlusOfCharClass0
    ListStarOfCharClass0         -> <nil>()
    ListStarOfCharClass0         -> <conc>(ListStarOfCharClass0,ListStarOfCharClass0)
    ListPlusOfCharClass0         -> <conc>(ListStarOfCharClass0,ListPlusOfCharClass0)
    ListPlusOfCharClass0         -> <conc>(ListPlusOfCharClass0,ListStarOfCharClass0)
    ListPlusOfCharClass0         -> <conc>(ListPlusOfCharClass0,ListPlusOfCharClass0)
    ListPlusOfCharClass0         -> <cons>(<int>,ListStarOfCharClass0)
    ListStarOfStringQuotedPart40 -> ListPlusOfStringQuotedPart40
    ListStarOfStringQuotedPart40 -> <nil>()
    ListStarOfStringQuotedPart40 -> <conc>(ListStarOfStringQuotedPart40,ListStarOfStringQuotedPart40)
    ListPlusOfStringQuotedPart40 -> <conc>(ListStarOfStringQuotedPart40,ListPlusOfStringQuotedPart40)
    ListPlusOfStringQuotedPart40 -> <conc>(ListPlusOfStringQuotedPart40,ListStarOfStringQuotedPart40)
    ListPlusOfStringQuotedPart40 -> <conc>(ListPlusOfStringQuotedPart40,ListPlusOfStringQuotedPart40)
    ListPlusOfStringQuotedPart40 -> <cons>(StringQuotedPart4,ListStarOfStringQuotedPart40)
    ListStarOfCharClass1         -> ListPlusOfCharClass1
    ListStarOfCharClass1         -> <nil>()
    ListStarOfCharClass1         -> <conc>(ListStarOfCharClass1,ListStarOfCharClass1)
    ListPlusOfCharClass1         -> <conc>(ListStarOfCharClass1,ListPlusOfCharClass1)
    ListPlusOfCharClass1         -> <conc>(ListPlusOfCharClass1,ListStarOfCharClass1)
    ListPlusOfCharClass1         -> <conc>(ListPlusOfCharClass1,ListPlusOfCharClass1)
    ListPlusOfCharClass1         -> <cons>(<int>,ListStarOfCharClass1)
    ListStarOfStringQuotedPart30 -> ListPlusOfStringQuotedPart30
    ListStarOfStringQuotedPart30 -> <nil>()
    ListStarOfStringQuotedPart30 -> <conc>(ListStarOfStringQuotedPart30,ListStarOfStringQuotedPart30)
    ListPlusOfStringQuotedPart30 -> <conc>(ListStarOfStringQuotedPart30,ListPlusOfStringQuotedPart30)
    ListPlusOfStringQuotedPart30 -> <conc>(ListPlusOfStringQuotedPart30,ListStarOfStringQuotedPart30)
    ListPlusOfStringQuotedPart30 -> <conc>(ListPlusOfStringQuotedPart30,ListPlusOfStringQuotedPart30)
    ListPlusOfStringQuotedPart30 -> <cons>(StringQuotedPart3,ListStarOfStringQuotedPart30)
    ListStarOfCharClass2         -> ListPlusOfCharClass2
    ListStarOfCharClass2         -> <nil>()
    ListStarOfCharClass2         -> <conc>(ListStarOfCharClass2,ListStarOfCharClass2)
    ListPlusOfCharClass2         -> <conc>(ListStarOfCharClass2,ListPlusOfCharClass2)
    ListPlusOfCharClass2         -> <conc>(ListPlusOfCharClass2,ListStarOfCharClass2)
    ListPlusOfCharClass2         -> <conc>(ListPlusOfCharClass2,ListPlusOfCharClass2)
    ListPlusOfCharClass2         -> <cons>(<int>,ListStarOfCharClass2)
    ListStarOfStringQuotedPart20 -> ListPlusOfStringQuotedPart20
    ListStarOfStringQuotedPart20 -> <nil>()
    ListStarOfStringQuotedPart20 -> <conc>(ListStarOfStringQuotedPart20,ListStarOfStringQuotedPart20)
    ListPlusOfStringQuotedPart20 -> <conc>(ListStarOfStringQuotedPart20,ListPlusOfStringQuotedPart20)
    ListPlusOfStringQuotedPart20 -> <conc>(ListPlusOfStringQuotedPart20,ListStarOfStringQuotedPart20)
    ListPlusOfStringQuotedPart20 -> <conc>(ListPlusOfStringQuotedPart20,ListPlusOfStringQuotedPart20)
    ListPlusOfStringQuotedPart20 -> <cons>(StringQuotedPart2,ListStarOfStringQuotedPart20)
    ListStarOfCharClass3         -> ListPlusOfCharClass3
    ListStarOfCharClass3         -> <nil>()
    ListStarOfCharClass3         -> <conc>(ListStarOfCharClass3,ListStarOfCharClass3)
    ListPlusOfCharClass3         -> <conc>(ListStarOfCharClass3,ListPlusOfCharClass3)
    ListPlusOfCharClass3         -> <conc>(ListPlusOfCharClass3,ListStarOfCharClass3)
    ListPlusOfCharClass3         -> <conc>(ListPlusOfCharClass3,ListPlusOfCharClass3)
    ListPlusOfCharClass3         -> <cons>(<int>,ListStarOfCharClass3)
    ListStarOfStringQuotedPart10 -> ListPlusOfStringQuotedPart10
    ListStarOfStringQuotedPart10 -> <nil>()
    ListStarOfStringQuotedPart10 -> <conc>(ListStarOfStringQuotedPart10,ListStarOfStringQuotedPart10)
    ListPlusOfStringQuotedPart10 -> <conc>(ListStarOfStringQuotedPart10,ListPlusOfStringQuotedPart10)
    ListPlusOfStringQuotedPart10 -> <conc>(ListPlusOfStringQuotedPart10,ListStarOfStringQuotedPart10)
    ListPlusOfStringQuotedPart10 -> <conc>(ListPlusOfStringQuotedPart10,ListPlusOfStringQuotedPart10)
    ListPlusOfStringQuotedPart10 -> <cons>(StringQuotedPart1,ListStarOfStringQuotedPart10)
    ListStarOfStrChar0           -> <string>
    ListPlusOfStrChar0           -> <string>
    ListStarOfModNamePart0       -> <string>
    ListPlusOfModNamePart0       -> <string>
    ListStarOfCommChar0          -> <string>
    ListPlusOfCommChar0          -> <string>
    Strategy                     -> DynRuleIntersectUnion(Strategy,RuleNames,RuleNames,Strategy)
    Strategy                     -> DynRuleUnion(Strategy,RuleNames,Strategy)
    Strategy                     -> DynRuleIntersect(Strategy,RuleNames,Strategy)
    Strategy                     -> DynRuleIntersectUnionFix(RuleNames,RuleNames,Strategy)
    Strategy                     -> DynRuleIntersectUnionFix(RuleNames,RuleNames,Strategy)
    Strategy                     -> DynRuleUnionFix(RuleNames,Strategy)
    Strategy                     -> DynRuleUnionFix(RuleNames,Strategy)
    Strategy                     -> DynRuleIntersectFix(RuleNames,Strategy)
    RuleNames                    -> RuleNames(Term)
    RuleNames                    -> ListStarOfId0
    RuleDec                      -> RDecT(Id,ListStarOfTypedid0,ListStarOfTypedid0)
    RuleDec                      -> RDec(Id,ListStarOfTypedid0)
    RuleDec                      -> RDecNoArgs(Id)
    DynRuleScopeId               -> DynRuleScopeId(Id)
    DynRuleScopeId               -> LabeledDynRuleScopeId(Id,Term)
    DynRuleId                    -> DynRuleId(RuleDec)
    DynRuleId                    -> AddLabelDynRuleId(RuleDec,Term)
    DynRuleId                    -> LabeledDynRuleId(RuleDec,Term)
    DynRuleDef                   -> SetDynRuleDepends(DynRuleId,Rule,Term)
    DynRuleDef                   -> DynRuleAssignAdd(DynRuleId,Term)
    DynRuleDef                   -> DynRuleAssign(DynRuleId,Term)
    DynRuleDef                   -> SetDynRuleMatch(DynRuleId,Term)
    DynRuleDef                   -> AddDynRule(DynRuleId,Rule)
    DynRuleDef                   -> SetDynRule(DynRuleId,Rule)
    DynRuleDef                   -> UndefineDynRule(DynRuleId,Term)
    DynRuleDef                   -> AddScopeLabel(Id,Term)
    Strategy                     -> GenDynRules(ListStarOfDynRuleDef0)
    ScopeLabels                  -> ScopeLabels(Term)
    ScopeLabels                  -> ListStarOfDynRuleScopeId0
    Strategy                     -> DynRuleScope(ScopeLabels,Strategy)
    Decl                         -> Overlays(ListStarOfOverlay0)
    Decl                         -> Rules(ListStarOfDef0)
    RuleCond                     -> WithClause(Strategy)
    RuleCond                     -> WhereClause(Strategy)
    Rule                         -> Rule(Term,Term,ListPlusOfRuleCond0)
    Rule                         -> Rule(Term,Term,Strategy)
    Rule                         -> RuleNoCond(Term,Term)
    RuleDef                      -> RDefT(Id,ListStarOfTypedid0,ListStarOfTypedid0,Rule)
    RuleDef                      -> RDef(Id,ListStarOfTypedid0,Rule)
    Def                          -> AnnoDef(ListPlusOfAnno0,RuleDef)
    RuleDef                      -> RDefNoArgs(Id,Rule)
    Overlay                      -> Overlay(Id,ListStarOfId0,Term)
    Overlay                      -> OverlayNoArgs(Id,Term)
    StrategyMid                  -> Strategy
    Def                          -> RuleDef
    Strategy                     -> Assign(Term,Term)
    Strategy                     -> AM(Strategy,Term)
    SwitchCase                   -> SwitchCase(Strategy,Strategy)
    Strategy                     -> SwitchChoice(Strategy,ListStarOfSwitchCase0,Strategy)
    Strategy                     -> SwitchChoiceNoOtherwise(Strategy,ListStarOfSwitchCase0)
    Strategy                     -> IfThen(Strategy,Strategy)
    Strategy                     -> CondChoice(Strategy,Strategy,Strategy)
    Strategy                     -> Proceed(ListPlusOfStrategy0)
    Strategy                     -> RChoice(Strategy,Strategy)
    Strategy                     -> Choice(Strategy,Strategy)
    Strategy                     -> SRule(Rule)
    Strategy                     -> LRule(Rule)
    Strategy                     -> CallNoArgs(SVar)
    Strategy                     -> ExplodeCong(Strategy,StrategyParen)
    Strategy                     -> ListCong(ListStarOfStrategy0,Strategy)
    Strategy                     -> ListCongNoTail(ListStarOfStrategy0)
    Strategy                     -> TupleCong(Strategy,ListPlusOfStrategy0)
    Strategy                     -> EmptyTupleCong()
    StrategyCurly                -> StrategyCurly(Strategy)
    Strategy                     -> AnnoCong(Strategy,StrategyCurly)
    Strategy                     -> CongQ(String,ListStarOfStrategy0)
    Strategy                     -> CharCong(Char)
    Strategy                     -> RealCong(Real)
    Strategy                     -> IntCong(Int)
    Strategy                     -> StrCong(String)
    Strategy                     -> Prim(String,ListStarOfTerm0)
    Strategy                     -> PrimNoArgs(String)
    Strategy                     -> Test(Strategy)
    Strategy                     -> With(Strategy)
    Strategy                     -> Where(Strategy)
    Strategy                     -> Not(Strategy)
    Strategy                     -> Rec(Id,Strategy)
    Strategy                     -> LChoice(Strategy,Strategy)
    StrategyAngle                -> Strategy
    Strategy                     -> BA(StrategyAngle,Term)
    Strategy                     -> ScopeDefault(Strategy)
    Strategy                     -> Call(SVar,ListStarOfStrategy0)
    Typedid                      -> DefaultVarDec(ID)
    StrategyDef                  -> SDef(Id,ListStarOfTypedid0,Strategy)
    StrategyDef                  -> SDefNoArgs(Id,Strategy)
    Kind                         -> StarStar()
    Kind                         -> Star()
    Sort                         -> SortTuple(ListStarOfSort0)
    Sort                         -> SortListTl(ListStarOfSort0,Sort)
    Sort                         -> SortList(ListStarOfSort0)
    PreTerm                      -> ListTail(ListStarOfTerm0,Term)
    PreTerm                      -> List(ListStarOfTerm0)
    PreTerm                      -> Tuple(ListStarOfTerm0)
    Term                         -> RootApp(StrategyAngle)
    PreTerm                      -> RootApp(StrategyAngle)
    Term                         -> App(Strategy,Term)
    PreTerm                      -> App(Strategy,Term)
    Term                         -> NoAnnoList(PreTerm)
    Term                         -> AnnoList(PreTerm,ListStarOfTerm0)
    PreTerm                      -> Char(Char)
    Term                         -> BuildDefault(Term)
    PreTerm                      -> BuildDefaultPT(PreTerm)
    ID                           -> LID
    Var                          -> Var(LID)
    LID                          -> ListVar(LId)
    ImportModName                -> ImportWildcard(ModName)
    ImportModName                -> Import(ModName)
    Decl                         -> Signature(ListStarOfSdecl0)
    Decl                         -> Strategies(ListStarOfDef0)
    Decl                         -> Imports(ListStarOfImportModName0)
    Module                       -> Specification(ListStarOfDecl0)
    Module                       -> Module(ModName,ListStarOfDecl0)
    Strategy                     -> ImportTerm(ModName)
    Strategy                     -> All(Strategy)
    Strategy                     -> One(Strategy)
    Strategy                     -> Some(Strategy)
    Strategy                     -> PrimT(String,ListStarOfStrategy0,ListStarOfTerm0)
    StrategyMid                  -> Strategy
    Strategy                     -> GuardedLChoice(Strategy,StrategyMid,Strategy)
    Strategy                     -> Seq(Strategy,Strategy)
    Strategy                     -> Scope(ListStarOfID0,Strategy)
    Strategy                     -> Build(Term)
    Strategy                     -> Match(Term)
    Strategy                     -> ProceedNoArgs()
    Strategy                     -> ProceedT(ListStarOfStrategy0,ListStarOfTerm0)
    Strategy                     -> Id()
    Strategy                     -> Fail()
    StrategyParen                -> ParenStrat(Strategy)
    Typedid                      -> VarDec(ID,Type)
    Anno                         -> Internal()
    Anno                         -> Override()
    Anno                         -> Extend()
    EmptyId                      -> <string>
    StrategyDef                  -> ExtSDef(EmptyId,ListStarOfTypedid0,ListStarOfTypedid0)
    StrategyDef                  -> ExtSDef(Id,ListStarOfTypedid0,ListStarOfTypedid0)
    StrategyDef                  -> ExtSDefInl(Id,ListStarOfTypedid0,ListStarOfTypedid0,Strategy)
    Def                          -> AnnoDef(ListPlusOfAnno0,StrategyDef)
    StrategyDef                  -> SDefT(Id,ListStarOfTypedid0,ListStarOfTypedid0,Strategy)
    Strategy                     -> CallDynamic(Term,ListStarOfStrategy0,ListStarOfTerm0)
    Strategy                     -> CallT(SVar,ListStarOfStrategy0,ListStarOfTerm0)
    Strategy                     -> Let(ListStarOfDef0,Strategy)
    SVar                         -> SVar(Id)
    Def                          -> StrategyDef
    Type                         -> ConstType
    Type                         -> FunType
    RetType                      -> Type
    ArgType                      -> ConstType
    ArgType                      -> Type
    FunType                      -> FunType(ListPlusOfArgType0,RetType)
    ConstType                    -> ConstType(Sort)
    Opdecl                       -> ExtOpDeclInj(Type)
    Opdecl                       -> ExtOpDeclQ(String,Type)
    Opdecl                       -> ExtOpDecl(Id,Type)
    Opdecl                       -> OpDeclInj(Type)
    Opdecl                       -> OpDeclQ(String,Type)
    Opdecl                       -> OpDecl(Id,Type)
    Sort                         -> Sort(Id,ListStarOfSort0)
    Sort                         -> SortNoArgs(UCID)
    Sort                         -> SortVar(LCID)
    Sdecl                        -> Constructors(ListStarOfOpdecl0)
    Sdecl                        -> Sorts(ListStarOfSort1)
    PreTerm                      -> As(Var,PreTerm)
    Term                         -> As(Var,Term)
    Term                         -> Anno(PreTerm,PreTerm)
    PreTerm                      -> Explode(Term,Term)
    PreTerm                      -> OpQ(String,ListStarOfTerm0)
    PreTerm                      -> Op(Id,ListStarOfTerm0)
    PreTerm                      -> Str(String)
    PreTerm                      -> Real(Real)
    PreTerm                      -> Int(Int)
    Term                         -> Wld
    PreTerm                      -> Wld
    Wld                          -> Wld()
    Term                         -> Var
    PreTerm                      -> Var
    ID                           -> Id
    Var                          -> Var(Id)
    CharChar                     -> <string>
    Char                         -> <string>
    Padding                      -> <string>
    StringQuotedPart4            -> QBr(<string>)
    StringQuotedPart4            -> QDollar(<string>)
    StringQuotedPart4            -> QStr(<string>)
    StringQuotedPart4            -> StringEscape4(Padding,Term)
    StringQuotation              -> StringQuotation4(Padding,ListStarOfStringQuotedPart40)
    StringQuotedPart3            -> QBr(<string>)
    StringQuotedPart3            -> QDollar(<string>)
    StringQuotedPart3            -> QStr(<string>)
    StringQuotedPart3            -> StringEscape3(Padding,Term)
    StringQuotation              -> StringQuotation3(Padding,ListStarOfStringQuotedPart30)
    StringQuotedPart2            -> QBr(<string>)
    StringQuotedPart2            -> QDollar(<string>)
    StringQuotedPart2            -> QStr(<string>)
    StringQuotedPart2            -> StringEscape2(Padding,Term)
    StringQuotation              -> StringQuotation2(Padding,ListStarOfStringQuotedPart20)
    StringQuotedPart1            -> QBr(<string>)
    StringQuotedPart1            -> QDollar(<string>)
    StringQuotedPart1            -> QStr(<string>)
    StringQuotedPart1            -> StringEscape1(Padding,Term)
    StringQuotation              -> StringQuotation1(Padding,ListStarOfStringQuotedPart10)
    PreTerm                      -> StringQuotation
    PreTerm                      -> StringQuotation
    StrChar                      -> <string>
    String                       -> <string>
    Real                         -> <string>
    Int                          -> <string>
    Keyword                      -> <string>
    UCID                         -> <string>
    LCID                         -> <string>
    LId                          -> <string>
    Id                           -> <string>
    ModNamePart                  -> <string>
    ModName                      -> <string>
    Asterisk                     -> <string>
    CommChar                     -> <string>
    Eof                          -> <string>
    LongCom                      -> <string>
    ShortCom                     -> <string>
    Ws                           -> <string>
