module sdf2imp/util/options

strategies

  sdf2imp-options =
     sdf-main-module-option // -m <mod>; sets get-sdf-main-module
  <+ input-file-option
  <+ extensions-option
  <+ parse-table-option
  <+ package-name-option
  <+ project-name-option
  <+ start-symbol-option
  <+ jar-option
  <+ reset-files-option
  <+ verbose-option

  input-file-option =
    ArgOption(
      "-i"
    , rules(InputFile := <id>)
    , !"-i <grammar>.def      Set input file (optional)"
    )

  parse-table-option =
    ArgOption(
      "-p"
    , rules(ParseTable := <id>)
    , !"-p <parse table>.tbl  Set parse table (optional; None to skip table generation)"
    )

  extensions-option =
    ArgOption(
      "-e"
    , rules(EditorExtensions := <id>)
    , !"-e <extensions>       Set editor file extensions (comma separated)"
    )

  package-name-option =
    ArgOption(
      "-n"
    , rules(BasePackage := <id>);
      get-package-name(fail) // ensure legal
    , !"-n <packagename>      Set base package name (optional)"
    )

  project-name-option =
    ArgOption(
      "-pn"
    , rules(ProjectName := <id>)
    , !"-pn <project name>    Set project name (optional)"
    )

  jar-option =
    MultiArgOption(
      "-jar"
    , rules(JarLocations := <id>);
      list-loop(
        if not(file-exists) then
          fatal-err(|"File does not exist")
        end
      )
    , !"-jar <paths>          Set jar files to include (optional)"
    )
    
  start-symbol-option =
    ArgOption(
      "-s"
    , parameterized-sort-to-rtg-sort;
      if is-substring(!",") then
        // TODO: Multiple start symbols
        fatal-err(|"Multiple start symbols not supported yet, please specify a single start symbol")
      end;
      rules(StartSymbol := <id>)
    , !"-s <start symbol>     Set start symbol"
    )

  reset-files-option =
    Option(
      "-r" + "--reset"
    , rules(ResetFiles: _)
    , !"-r | --reset          Reset all generated files to their defaults"
    )
  
  parameterized-sort-to-rtg-sort =
    // Module[StrategoHost] -> Module_StrategoHost
    string-replace(|"[[", "_");
    string-replace(|"[", "_");
    string-replace(|"]", "")
  
  get-package-name =
    get-package-name(default-package-name)
  
  get-package-name(default) =
    ( BasePackage
    <+
      default
    );
    string-tokenize('.');
    map(!Id(<id>));
    !PackageName(<id>)
    
  get-package-name-text =
    BasePackage <+ default-package-name
  
  default-package-name =
    get-sdf-main-module;
    to-java-class-name;
    lower-case;
    <conc-strings> ("org.strategoxt.imp.generated.", <id>)
  
  require-option(rule|description) = 
    rule
  <+
    fatal-err-msg(|<conc-strings> (description, " not specified"))
    
