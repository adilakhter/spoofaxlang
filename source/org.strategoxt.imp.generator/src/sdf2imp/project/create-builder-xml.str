module sdf2imp/project/create-builder-xml
    
imports
  sdf2imp/util/-

strategies

  builder-xml-name =
    // Note that we cannot use ProjectName here since
    // it may not be set after the first time this runs
    !$[[<get-sdf-main-module>] build.main.xml.launch]

  create-builder-xml =
    <file-exists> $[.externalToolBuilders/[<builder-xml-name>]]
  <+
    not(ProjectName);
    warn-msg(|$[Project name not specified, cannot regenerate [<builder-xml-name>]])
  <+
    // We use plain text since the XML pretty printer has problems with this file.
    //
    // - It seems that when a project is initially being built,
    //   only ${build_project} works, and ${project_loc} doesn't. 
    // - ${project_loc} also doesn't work when a project has
    //   just been imported from version control or the file system
    // - Variable ${build_project} prevents the Ant builder
    //   from detecting that this launch file belongs to the
    //   corresponding build.main.xml.
    // - Variable ${project_loc} works better with the Ant builder,
    //   but causes it to ask which project to build if there
    //   are multiple projects
    // - PROJECT_ATTR seems to be ignored
    //
    // Because of these issues we hardcode the project name in this file for now.
    //
    // The property org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY may be optional,
    // at least for Ant builds.
    
    project-name := <ProjectName>;
    
    <output-text-file(|[".externalToolBuilders"], <builder-xml-name>)> 
$[ <?xml version="1.0" encoding="UTF-8" standalone="no"?>
<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
</listAttribute>
<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/[project-name]/build.main.xml}"/>
<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/[project-name]}"/>
<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
</launchConfiguration>
]
