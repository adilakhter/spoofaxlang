definition(
  [ module(
      unparameterized("languages/sdf2/syntax/Aliases")
    , [imports([module(unparameterized("languages/sdf2/syntax/Kernel"))])]
    , [ exports(
          conc-grammars(
            sorts([sort("Alias"), sort("Aliases")])
          , context-free-syntax(
              [ prod(
                  [lit("\"aliases\""), sort("Aliases")]
                , sort("Grammar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"aliases\""))]))
                     )]
                  )
                )
              , prod(
                  [ sort("Symbol")
                  , label(unquoted("arrow"), lit("\"->\""))
                  , label(unquoted("alias"), sort("Symbol"))
                  ]
                , sort("Alias")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"alias\""))]))
                     )]
                  )
                )
              , prod(
                  [label(unquoted("list"), iter-star(sort("Alias")))]
                , sort("Aliases")
                , no-attrs()
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Restrictions")
    , [imports([module(unparameterized("languages/sdf2/syntax/CC"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              sorts(
                [sort("Lookahead"), sort("Lookaheads"), sort("Restriction"), sort("Restrictions")]
              )
            , context-free-syntax(
                [ prod(
                    [sort("CharClass")]
                  , sort("Lookahead")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"char-class\""))]))
                       )]
                    )
                  )
                , prod(
                    [ label(unquoted("head"), sort("CharClass"))
                    , lit("\".\"")
                    , label(unquoted("tail"), sort("Lookaheads"))
                    ]
                  , sort("Lookahead")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"seq\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("Lookahead")]
                  , sort("Lookaheads")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"single\""))]))
                       )]
                    )
                  )
                , prod(
                    [ label(quoted("\"left\""), sort("Lookaheads"))
                    , lit("\"|\"")
                    , label(quoted("\"right\""), sort("Lookaheads"))
                    ]
                  , sort("Lookaheads")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"alt\""))]))
                        )
                      , assoc(right())
                      ]
                    )
                  )
                , prod(
                    [lit("\"(\""), sort("Lookaheads"), lit("\")\"")]
                  , sort("Lookaheads")
                  , attrs([bracket()])
                  )
                , prod(
                    [ lit("\"[[\"")
                    , label(unquoted("list"), iter-star-sep(sort("Lookahead"), lit("\",\"")))
                    , lit("\"]]\"")
                    ]
                  , sort("Lookaheads")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"list\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("Symbols"), lit("\"-/-\""), sort("Lookaheads")]
                  , sort("Restriction")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"follow\""))]))
                       )]
                    )
                  )
                , prod(
                    [label(unquoted("list"), iter-star(sort("Restriction")))]
                  , sort("Restrictions")
                  , no-attrs()
                  )
                , prod(
                    [lit("\"restrictions\""), sort("Restrictions")]
                  , sort("Grammar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"restrictions\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"reject\"")]
                  , sort("Attribute")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"reject\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"prefer\"")]
                  , sort("Attribute")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"prefer\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"avoid\"")]
                  , sort("Attribute")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"avoid\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , context-free-priorities(
              [ chain(
                  [ simple-group(
                      prod(
                        [sort("CharClass"), lit("\".\""), sort("Lookaheads")]
                      , sort("Lookahead")
                      , no-attrs()
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("Lookaheads"), lit("\"|\""), sort("Lookaheads")]
                      , sort("Lookaheads")
                      , no-attrs()
                      )
                    )
                  ]
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Labels")
    , [imports([module(unparameterized("languages/sdf2/syntax/Kernel")), module(unparameterized("basic/StrCon"))])]
    , [ exports(
          conc-grammars(
            sorts([sort("Label")])
          , context-free-syntax(
              [ prod(
                  [sort("StrCon")]
                , sort("Label")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"quoted\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("IdCon")]
                , sort("Label")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"unquoted\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Label"), lit("\":\""), sort("Symbol")]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"label\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Literals")
    , [ imports([module(unparameterized("languages/sdf2/syntax/Kernel"))])
      , imports([module(unparameterized("basic/StrCon"))])
      , imports([module(unparameterized("basic/IdentifierCon"))])
      ]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts([sort("FunctionName"), sort("SingleQuotedStrCon"), sort("SingleQuotedStrChar")])
              , lexical-syntax(
                  [ prod(
                      [lit("\"\\\\n\"")]
                    , sort("SingleQuotedStrChar")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"newline\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"\\\\t\"")]
                    , sort("SingleQuotedStrChar")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"tab\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"\\\\'\"")]
                    , sort("SingleQuotedStrChar")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"quote\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"\\\\\\\\\"")]
                    , sort("SingleQuotedStrChar")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"backslash\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ lit("\"\\\\\"")
                      , label(
                          unquoted("a")
                        , char-class(simple-charclass(present(range(short("0"), short("9")))))
                        )
                      , label(
                          unquoted("b")
                        , char-class(simple-charclass(present(range(short("0"), short("9")))))
                        )
                      , label(
                          unquoted("c")
                        , char-class(simple-charclass(present(range(short("0"), short("9")))))
                        )
                      ]
                    , sort("SingleQuotedStrChar")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"decimal\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ char-class(
                          comp(
                            simple-charclass(
                              present(
                                conc(
                                  range(numeric("\\0"), numeric("\\31"))
                                , conc(
                                    short("\\n")
                                  , conc(short("\\t"), conc(short("\\'"), short("\\\\")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , sort("SingleQuotedStrChar")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"normal\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ char-class(simple-charclass(present(short("\\'"))))
                      , label(unquoted("chars"), iter-star(sort("SingleQuotedStrChar")))
                      , char-class(simple-charclass(present(short("\\'"))))
                      ]
                    , sort("SingleQuotedStrCon")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"default\""))]))
                         )]
                      )
                    )
                  ]
                )
              )
            , context-free-syntax(
                [ prod(
                    [sort("IdCon")]
                  , sort("FunctionName")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"unquoted-fun\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("StrCon")]
                  , sort("FunctionName")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"quoted-fun\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [label(unquoted("string"), sort("StrCon"))]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"lit\""))]))
                     )]
                  )
                )
              , prod(
                  [label(unquoted("ci-string"), sort("SingleQuotedStrCon"))]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ci-lit\""))]))
                     )]
                  )
                )
              , prod(
                  [ label(unquoted("fun"), sort("FunctionName"))
                  , lit("\"(\"")
                  , label(unquoted("arguments"), iter-star-sep(sort("Symbol"), lit("\",\"")))
                  , lit("\")\"")
                  , lit("\"->\"")
                  , label(unquoted("result"), sort("Symbol"))
                  , sort("Attributes")
                  ]
                , sort("Production")
                , attrs(
                    [ avoid()
                    , term(
                        default(appl(unquoted("cons"), [fun(quoted("\"prefix-fun\""))]))
                      )
                    ]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Start-Symbols")
    , [imports([module(unparameterized("languages/sdf2/syntax/Kernel"))])]
    , [ exports(
          context-free-syntax(
            [ prod(
                [lit("\"start-symbols\""), sort("Symbols")]
              , sort("Grammar")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"kernel-start-symbols\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"lexical\""), lit("\"start-symbols\""), sort("Symbols")]
              , sort("Grammar")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"lexical-start-symbols\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"context-free\""), lit("\"start-symbols\""), sort("Symbols")]
              , sort("Grammar")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"context-free-start-symbols\""))]))
                   )]
                )
              )
            ]
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Sorts")
    , [imports([module(unparameterized("languages/sdf2/syntax/Kernel"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts([sort("Sort")])
              , lexical-syntax(
                  [ prod(
                      [ label(
                          unquoted("head")
                        , char-class(simple-charclass(present(range(short("A"), short("Z")))))
                        )
                      ]
                    , sort("Sort")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"one-char\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ label(
                          unquoted("head")
                        , char-class(simple-charclass(present(range(short("A"), short("Z")))))
                        )
                      , label(
                          unquoted("middle")
                        , iter-star(
                            char-class(
                              simple-charclass(
                                present(
                                  conc(
                                    range(short("A"), short("Z"))
                                  , conc(
                                      range(short("a"), short("z"))
                                    , conc(range(short("0"), short("9")), short("\\-"))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      , label(
                          unquoted("last")
                        , char-class(
                            simple-charclass(
                              present(
                                conc(
                                  range(short("A"), short("Z"))
                                , conc(
                                    range(short("a"), short("z"))
                                  , range(short("0"), short("9"))
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , sort("Sort")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"more-chars\""))]))
                         )]
                      )
                    )
                  ]
                )
              )
            , context-free-syntax(
                [ prod(
                    [sort("Sort")]
                  , sort("Symbol")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"sort\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("Sort")
                    , lit("\"[[\"")
                    , label(unquoted("parameters"), iter-sep(sort("Symbol"), lit("\",\"")))
                    , lit("\"]]\"")
                    ]
                  , sort("Symbol")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"parameterized-sort\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"sorts\""), sort("Symbols")]
                  , sort("Grammar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"sorts\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , lexical-restrictions(
              [ follow(
                  [sort("Sort")]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            range(short("A"), short("Z"))
                          , conc(
                              range(short("a"), short("z"))
                            , range(short("0"), short("9"))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Character")
    , []
    , [ exports(
          conc-grammars(
            conc-grammars(
              sorts([sort("Character"), sort("NumChar"), sort("ShortChar")])
            , lexical-syntax(
                [ prod(
                    [ char-class(simple-charclass(present(short("\\\\"))))
                    , label(
                        unquoted("number")
                      , iter(
                          char-class(simple-charclass(present(range(short("0"), short("9")))))
                        )
                      )
                    ]
                  , sort("NumChar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"digits\""))]))
                       )]
                    )
                  )
                , prod(
                    [ label(
                        unquoted("character")
                      , char-class(
                          simple-charclass(
                            present(
                              conc(
                                range(short("a"), short("z"))
                              , conc(
                                  range(short("A"), short("Z"))
                                , range(short("0"), short("9"))
                                )
                              )
                            )
                          )
                        )
                      )
                    ]
                  , sort("ShortChar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"regular\""))]))
                       )]
                    )
                  )
                , prod(
                    [ char-class(simple-charclass(present(short("\\\\"))))
                    , label(
                        unquoted("escape")
                      , char-class(
                          comp(
                            simple-charclass(
                              present(
                                conc(
                                  range(numeric("\\0"), numeric("\\31"))
                                , conc(
                                    range(short("A"), short("Z"))
                                  , conc(
                                      range(short("a"), short("m"))
                                    , conc(
                                        range(short("o"), short("q"))
                                      , conc(
                                          short("s")
                                        , conc(
                                            range(short("u"), short("z"))
                                          , range(short("0"), short("9"))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    ]
                  , sort("ShortChar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"escaped\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [sort("NumChar")]
                , sort("Character")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"numeric\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("ShortChar")]
                , sort("Character")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"short\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"\\\\TOP\"")]
                , sort("Character")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"top\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"\\\\EOF\"")]
                , sort("Character")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"eof\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"\\\\BOT\"")]
                , sort("Character")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"bot\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"\\\\LABEL_START\"")]
                , sort("Character")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"label_start\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Character-Class")
    , [imports([module(unparameterized("languages/sdf2/syntax/Character"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              sorts(
                [sort("CharClass"), sort("CharRange"), sort("CharRanges"), sort("OptCharRanges")]
              )
            , context-free-syntax(
                [ prod([sort("Character")], sort("CharRange"), no-attrs())
                , prod(
                    [ label(unquoted("start"), sort("Character"))
                    , lit("\"-\"")
                    , label(unquoted("end"), sort("Character"))
                    ]
                  , sort("CharRange")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"range\""))]))
                       )]
                    )
                  )
                , prod([sort("CharRange")], sort("CharRanges"), no-attrs())
                , prod(
                    [ label(quoted("\"left\""), sort("CharRanges"))
                    , label(quoted("\"right\""), sort("CharRanges"))
                    ]
                  , sort("CharRanges")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"conc\""))]))
                        )
                      , assoc(right())
                      , term(default(fun(unquoted("memo"))))
                      ]
                    )
                  )
                , prod(
                    [lit("\"(\""), sort("CharRanges"), lit("\")\"")]
                  , sort("CharRanges")
                  , attrs([bracket()])
                  )
                , prod(
                    []
                  , sort("OptCharRanges")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"absent\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("CharRanges")]
                  , sort("OptCharRanges")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"present\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"[\""), sort("OptCharRanges"), lit("\"]\"")]
                  , sort("CharClass")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"simple-charclass\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"~\""), sort("CharClass")]
                  , sort("CharClass")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"comp\""))]))
                       )]
                    )
                  )
                , prod(
                    [ label(quoted("\"left\""), sort("CharClass"))
                    , lit("\"/\"")
                    , label(quoted("\"right\""), sort("CharClass"))
                    ]
                  , sort("CharClass")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"diff\""))]))
                        )
                      , assoc(left())
                      , term(default(fun(unquoted("memo"))))
                      ]
                    )
                  )
                , prod(
                    [ label(quoted("\"left\""), sort("CharClass"))
                    , lit("\"/\\\\\"")
                    , label(quoted("\"right\""), sort("CharClass"))
                    ]
                  , sort("CharClass")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"isect\""))]))
                        )
                      , assoc(left())
                      , term(default(fun(unquoted("memo"))))
                      ]
                    )
                  )
                , prod(
                    [ label(quoted("\"left\""), sort("CharClass"))
                    , lit("\"\\\\/\"")
                    , label(quoted("\"right\""), sort("CharClass"))
                    ]
                  , sort("CharClass")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"union\""))]))
                        )
                      , assoc(left())
                      ]
                    )
                  )
                , prod(
                    [lit("\"(\""), sort("CharClass"), lit("\")\"")]
                  , sort("CharClass")
                  , attrs([bracket(), avoid()])
                  )
                ]
              )
            )
          , context-free-priorities(
              [ chain(
                  [ simple-group(
                      prod(
                        [lit("\"~\""), sort("CharClass")]
                      , sort("CharClass")
                      , no-attrs()
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("CharClass"), lit("\"/\""), sort("CharClass")]
                      , sort("CharClass")
                      , no-attrs()
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("CharClass"), lit("\"/\\\\\""), sort("CharClass")]
                      , sort("CharClass")
                      , no-attrs()
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("CharClass"), lit("\"\\\\/\""), sort("CharClass")]
                      , sort("CharClass")
                      , no-attrs()
                      )
                    )
                  ]
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/CC")
    , [imports([module(unparameterized("languages/sdf2/syntax/Character-Class")), module(unparameterized("languages/sdf2/syntax/Kernel"))])]
    , [ exports(
          context-free-syntax(
            [ prod(
                [sort("CharClass")]
              , sort("Symbol")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"char-class\""))]))
                   )]
                )
              )
            ]
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Priority")
    , [imports([module(unparameterized("languages/sdf2/syntax/Kernel"))])]
    , [ exports(
          conc-grammars(
            sorts(
              [ sort("Associativity")
              , sort("ArgumentIndicator")
              , sort("Group")
              , sort("Priority")
              , sort("Priorities")
              ]
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"left\"")]
                , sort("Associativity")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"left\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"right\"")]
                , sort("Associativity")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"right\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"non-assoc\"")]
                , sort("Associativity")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"non-assoc\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"assoc\"")]
                , sort("Associativity")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"assoc\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"bracket\"")]
                , sort("Attribute")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"bracket\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Associativity")]
                , sort("Attribute")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"assoc\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"<\"")
                  , label(unquoted("arguments"), iter-sep(sort("NatCon"), lit("\",\"")))
                  , lit("\">\"")
                  ]
                , sort("ArgumentIndicator")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"default\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Group"), sort("ArgumentIndicator")]
                , sort("Group")
                , attrs(
                    [ assoc(non-assoc())
                    , term(
                        default(appl(unquoted("cons"), [fun(quoted("\"with-arguments\""))]))
                      )
                    ]
                  )
                )
              , prod(
                  [sort("Group"), lit("\".\"")]
                , sort("Group")
                , attrs(
                    [ assoc(non-assoc())
                    , term(
                        default(appl(unquoted("cons"), [fun(quoted("\"non-transitive\""))]))
                      )
                    ]
                  )
                )
              , prod(
                  [sort("Production")]
                , sort("Group")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"simple-group\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"{\""), sort("Productions"), lit("\"}\"")]
                , sort("Group")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"prods-group\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"{\"")
                  , sort("Associativity")
                  , lit("\":\"")
                  , sort("Productions")
                  , lit("\"}\"")
                  ]
                , sort("Group")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"assoc-group\""))]))
                     )]
                  )
                )
              , prod(
                  [label(unquoted("list"), iter-sep(sort("Group"), lit("\">\"")))]
                , sort("Priority")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"chain\""))]))
                     )]
                  )
                )
              , prod(
                  [ label(quoted("\"left\""), sort("Group"))
                  , sort("Associativity")
                  , label(quoted("\"right\""), sort("Group"))
                  ]
                , sort("Priority")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"assoc\""))]))
                     )]
                  )
                )
              , prod(
                  [label(unquoted("list"), iter-star-sep(sort("Priority"), lit("\",\"")))]
                , sort("Priorities")
                , no-attrs()
                )
              , prod(
                  [lit("\"priorities\""), sort("Priorities")]
                , sort("Grammar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"priorities\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Lifting")
    , [imports([module(unparameterized("languages/sdf2/syntax/Kernel"))])]
    , [ exports(
          context-free-syntax(
            [ prod(
                [ label(unquoted("left-quote"), lit("\"`\""))
                , sort("Symbol")
                , label(unquoted("right-quote"), lit("\"`\""))
                ]
              , sort("Symbol")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"lifting\""))]))
                   )]
                )
              )
            ]
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Regular")
    , [ imports([module(unparameterized("languages/sdf2/syntax/Kernel"))])
      , imports([module(unparameterized("languages/aterm/syntax/IntCon"))])
      ]
    , [ exports(
          conc-grammars(
            context-free-syntax(
              [ prod(
                  [lit("\"(\""), lit("\")\"")]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"empty\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"(\"")
                  , label(unquoted("head"), sort("Symbol"))
                  , label(unquoted("tail"), iter(sort("Symbol")))
                  , lit("\")\"")
                  ]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"seq\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Symbol"), lit("\"?\"")]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"opt\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Symbol"), lit("\"+\"")]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"iter\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Symbol"), lit("\"*\"")]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"iter-star\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"{\"")
                  , sort("Symbol")
                  , label(unquoted("sep"), sort("Symbol"))
                  , lit("\"}\"")
                  , lit("\"+\"")
                  ]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"iter-sep\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"{\"")
                  , sort("Symbol")
                  , label(unquoted("sep"), sort("Symbol"))
                  , lit("\"}\"")
                  , lit("\"*\"")
                  ]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"iter-star-sep\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"<\"")
                  , label(unquoted("head"), sort("Symbol"))
                  , lit("\",\"")
                  , label(unquoted("rest"), iter-sep(sort("Symbol"), lit("\",\"")))
                  , lit("\">\"")
                  ]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"tuple\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"(\"")
                  , label(unquoted("arguments"), sort("Symbols"))
                  , lit("\"=>\"")
                  , label(unquoted("results"), sort("Symbol"))
                  , lit("\")\"")
                  ]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"func\""))]))
                     )]
                  )
                )
              , prod(
                  [ label(quoted("\"left\""), sort("Symbol"))
                  , lit("\"|\"")
                  , label(quoted("\"right\""), sort("Symbol"))
                  ]
                , sort("Symbol")
                , attrs(
                    [ assoc(right())
                    , term(
                        default(appl(unquoted("cons"), [fun(quoted("\"alt\""))]))
                      )
                    ]
                  )
                )
              , prod(
                  [ lit("\"(\"")
                  , label(quoted("\"left\""), sort("Symbol"))
                  , lit("\"->\"")
                  , label(quoted("\"right\""), sort("Symbol"))
                  , lit("\")\"")
                  ]
                , sort("Symbol")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"strategy\""))]))
                     )]
                  )
                )
              ]
            )
          , context-free-priorities(
              [ chain(
                  [ prods-group(
                      [ prod(
                          [sort("Symbol"), lit("\"?\"")]
                        , sort("Symbol")
                        , no-attrs()
                        )
                      , prod(
                          [sort("Symbol"), lit("\"*\"")]
                        , sort("Symbol")
                        , no-attrs()
                        )
                      , prod(
                          [sort("Symbol"), lit("\"+\"")]
                        , sort("Symbol")
                        , no-attrs()
                        )
                      ]
                    )
                  , simple-group(
                      prod(
                        [sort("Symbol"), lit("\"|\""), sort("Symbol")]
                      , sort("Symbol")
                      , no-attrs()
                      )
                    )
                  ]
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Renaming")
    , [imports([module(unparameterized("languages/sdf2/syntax/Kernel"))])]
    , [ exports(
          conc-grammars(
            sorts([sort("Renaming"), sort("Renamings")])
          , context-free-syntax(
              [ prod(
                  [ lit("\"[\"")
                  , label(unquoted("list"), iter-star(sort("Renaming")))
                  , lit("\"]\"")
                  ]
                , sort("Renamings")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"renamings\""))]))
                     )]
                  )
                )
              , prod(
                  [ label(unquoted("from"), sort("Symbol"))
                  , lit("\"=>\"")
                  , label(unquoted("to"), sort("Symbol"))
                  ]
                , sort("Renaming")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"symbol\""))]))
                     )]
                  )
                )
              , prod(
                  [ label(unquoted("from-prod"), sort("Production"))
                  , lit("\"=>\"")
                  , label(unquoted("to-prod"), sort("Production"))
                  ]
                , sort("Renaming")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"production\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Modules")
    , [imports([module(unparameterized("languages/sdf2/syntax/Kernel")), module(unparameterized("languages/sdf2/syntax/Renaming"))])]
    , [ hiddens(sorts([sort("ModuleWord")]))
      , exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  context-free-start-symbols([sort("Module")])
                , sorts(
                    [ sort("ModuleId")
                    , sort("ModuleName")
                    , sort("Import")
                    , sort("Imports")
                    , sort("Section")
                    , sort("Sections")
                    , sort("Module")
                    , sort("Definition")
                    , sort("ImpSection")
                    ]
                  )
                )
              , lexical-syntax(
                  [ prod(
                      [ label(
                          unquoted("letters")
                        , iter(
                            char-class(
                              simple-charclass(
                                present(
                                  conc(
                                    range(short("A"), short("Z"))
                                  , conc(
                                      range(short("a"), short("z"))
                                    , conc(
                                        range(short("0"), short("9"))
                                      , conc(short("\\_"), short("\\-"))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , sort("ModuleWord")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"word\""))]))
                         )]
                      )
                    )
                  , prod(
                      [sort("ModuleWord")]
                    , sort("ModuleId")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"leaf\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ label(unquoted("sep"), lit("\"/\""))
                      , label(unquoted("basename"), sort("ModuleId"))
                      ]
                    , sort("ModuleId")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"root\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ label(unquoted("dirname"), sort("ModuleWord"))
                      , label(unquoted("sep"), lit("\"/\""))
                      , label(unquoted("basename"), sort("ModuleId"))
                      ]
                    , sort("ModuleId")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"path\""))]))
                         )]
                      )
                    )
                  ]
                )
              )
            , context-free-syntax(
                [ prod(
                    [label(unquoted("list"), iter-star(sort("Module")))]
                  , sort("Definition")
                  , no-attrs()
                  )
                , prod(
                    [ lit("\"module\"")
                    , sort("ModuleName")
                    , label(unquoted("list"), iter-star(sort("ImpSection")))
                    , sort("Sections")
                    ]
                  , sort("Module")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"module\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"exports\""), sort("Grammar")]
                  , sort("Section")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"exports\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"hiddens\""), sort("Grammar")]
                  , sort("Section")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"hiddens\""))]))
                       )]
                    )
                  )
                , prod(
                    [label(unquoted("list"), iter-star(sort("Section")))]
                  , sort("Sections")
                  , no-attrs()
                  )
                , prod(
                    [sort("ModuleId")]
                  , sort("ModuleName")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"unparameterized\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("ModuleId")
                    , lit("\"[\"")
                    , label(unquoted("params"), sort("Symbols"))
                    , lit("\"]\"")
                    ]
                  , sort("ModuleName")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"parameterized\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"id\""), lit("\"(\""), sort("ModuleName"), lit("\")\"")]
                  , sort("Attribute")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"id\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"imports\""), label(unquoted("list"), sort("Imports"))]
                  , sort("ImpSection")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"imports\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("ImpSection")]
                  , sort("Grammar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"imp-section\""))]))
                       )]
                    )
                  )
                , prod(
                    [label(unquoted("list"), iter-star(sort("Import")))]
                  , sort("Imports")
                  , no-attrs()
                  )
                , prod(
                    [sort("ModuleName")]
                  , sort("Import")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"module\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("ModuleName"), sort("Renamings")]
                  , sort("Import")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"renamed-module\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"(\""), sort("Import"), lit("\")\"")]
                  , sort("Import")
                  , attrs([bracket()])
                  )
                ]
              )
            )
          , lexical-restrictions(
              [ follow(
                  [sort("ModuleWord")]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            range(short("A"), short("Z"))
                          , conc(
                              range(short("a"), short("z"))
                            , conc(
                                range(short("0"), short("9"))
                              , conc(short("\\_"), short("\\-"))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              , follow(
                  [sort("ModuleId")]
                , single(char-class(simple-charclass(present(short("\\/")))))
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Basic")
    , [imports([module(unparameterized("languages/sdf2/syntax/Kernel"))])]
    , [ exports(
          context-free-syntax(
            [ prod(
                [lit("\"lexical\""), lit("\"syntax\""), sort("Productions")]
              , sort("Grammar")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"lexical-syntax\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"context-free\""), lit("\"syntax\""), sort("Productions")]
              , sort("Grammar")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"context-free-syntax\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"variables\""), sort("Productions")]
              , sort("Grammar")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"variables\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"lexical\""), lit("\"variables\""), sort("Productions")]
              , sort("Grammar")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"lexical-variables\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"<\""), sort("Symbol"), lit("\"-CF\""), lit("\">\"")]
              , sort("Symbol")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"cf\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"<\""), sort("Symbol"), lit("\"-LEX\""), lit("\">\"")]
              , sort("Symbol")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"lex\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"<\""), sort("Symbol"), lit("\"-VAR\""), lit("\">\"")]
              , sort("Symbol")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"varsym\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"LAYOUT\"")]
              , sort("Symbol")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"layout\""))]))
                   )]
                )
              )
            ]
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Grammars")
    , [imports([module(unparameterized("basic/Comments"))])]
    , [ exports(
          conc-grammars(
            sorts([sort("Grammar")])
          , context-free-syntax(
              [ prod(
                  [lit("\"(/)\"")]
                , sort("Grammar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"empty-grammar\""))]))
                     )]
                  )
                )
              , prod(
                  [ label(quoted("\"left\""), sort("Grammar"))
                  , label(quoted("\"right\""), sort("Grammar"))
                  ]
                , sort("Grammar")
                , attrs(
                    [ assoc(assoc())
                    , term(
                        default(appl(unquoted("cons"), [fun(quoted("\"conc-grammars\""))]))
                      )
                    ]
                  )
                )
              , prod(
                  [lit("\"(\""), sort("Grammar"), lit("\")\"")]
                , sort("Grammar")
                , attrs([bracket()])
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("basic/Comments")
    , [imports([module(unparameterized("basic/Whitespace"))])]
    , [ exports(
          conc-grammars(
            lexical-syntax(
              [ prod(
                  [ lit("\"%%\"")
                  , label(
                      unquoted("line")
                    , iter-star(char-class(comp(simple-charclass(present(short("\\n"))))))
                    )
                  , lit("\"\\n\"")
                  ]
                , layout()
                , attrs(
                    [ term(
                        default(appl(unquoted("cons"), [fun(quoted("\"line\""))]))
                      )
                    , term(
                        default(appl(unquoted("category"), [fun(quoted("\"Comment\""))]))
                      )
                    ]
                  )
                )
              , prod(
                  [ lit("\"%\"")
                  , label(
                      unquoted("content")
                    , iter(
                        char-class(
                          comp(simple-charclass(present(conc(short("\\%"), short("\\n")))))
                        )
                      )
                    )
                  , lit("\"%\"")
                  ]
                , layout()
                , attrs(
                    [ term(
                        default(appl(unquoted("cons"), [fun(quoted("\"nested\""))]))
                      )
                    , term(
                        default(appl(unquoted("category"), [fun(quoted("\"Comment\""))]))
                      )
                    ]
                  )
                )
              ]
            )
          , context-free-restrictions(
              [ follow(
                  [opt(layout())]
                , single(char-class(simple-charclass(present(short("\\%")))))
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Symbols")
    , [imports([module(unparameterized("basic/Comments"))])]
    , [ exports(
          conc-grammars(
            sorts([sort("Symbol"), sort("Symbols")])
          , context-free-syntax(
              [ prod(
                  [lit("\"(\""), sort("Symbol"), lit("\")\"")]
                , sort("Symbol")
                , attrs([bracket()])
                )
              , prod(
                  [label(unquoted("list"), iter-star(sort("Symbol")))]
                , sort("Symbols")
                , no-attrs()
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("basic/IdentifierCon")
    , []
    , [ exports(
          conc-grammars(
            conc-grammars(
              sorts([sort("IdCon")])
            , lexical-syntax(
                [ prod(
                    [ label(
                        unquoted("head")
                      , char-class(
                          simple-charclass(
                            present(
                              conc(
                                range(short("A"), short("Z"))
                              , range(short("a"), short("z"))
                              )
                            )
                          )
                        )
                      )
                    , label(
                        unquoted("tail")
                      , iter-star(
                          char-class(
                            simple-charclass(
                              present(
                                conc(
                                  range(short("A"), short("Z"))
                                , conc(
                                    range(short("a"), short("z"))
                                  , conc(short("\\-"), range(short("0"), short("9")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    ]
                  , sort("IdCon")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"default\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , lexical-restrictions(
              [ follow(
                  [sort("IdCon")]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            range(short("A"), short("Z"))
                          , conc(
                              range(short("a"), short("z"))
                            , conc(short("\\-"), range(short("0"), short("9")))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("basic/StrCon")
    , []
    , [ exports(
          conc-grammars(
            sorts([sort("StrCon"), sort("StrChar")])
          , lexical-syntax(
              [ prod(
                  [lit("\"\\\\n\"")]
                , sort("StrChar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"newline\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"\\\\t\"")]
                , sort("StrChar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"tab\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"\\\\\\\"\"")]
                , sort("StrChar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"quote\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"\\\\\\\\\"")]
                , sort("StrChar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"backslash\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"\\\\\"")
                  , label(
                      unquoted("a")
                    , char-class(simple-charclass(present(range(short("0"), short("9")))))
                    )
                  , label(
                      unquoted("b")
                    , char-class(simple-charclass(present(range(short("0"), short("9")))))
                    )
                  , label(
                      unquoted("c")
                    , char-class(simple-charclass(present(range(short("0"), short("9")))))
                    )
                  ]
                , sort("StrChar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"decimal\""))]))
                     )]
                  )
                )
              , prod(
                  [ char-class(
                      comp(
                        simple-charclass(
                          present(
                            conc(
                              range(numeric("\\0"), numeric("\\31"))
                            , conc(
                                short("\\n")
                              , conc(short("\\t"), conc(short("\\\""), short("\\\\")))
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                , sort("StrChar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"normal\""))]))
                     )]
                  )
                )
              , prod(
                  [ char-class(simple-charclass(present(short("\\\""))))
                  , label(unquoted("chars"), iter-star(sort("StrChar")))
                  , char-class(simple-charclass(present(short("\\\""))))
                  ]
                , sort("StrCon")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"default\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/aterm/syntax/RealCon")
    , [imports([module(unparameterized("languages/aterm/syntax/IntCon"))])]
    , [ hiddens(context-free-start-symbols([sort("RealCon")]))
      , exports(
          conc-grammars(
            sorts([sort("OptExp"), sort("RealCon")])
          , context-free-syntax(
              [ prod(
                  [lit("\"e\""), sort("IntCon")]
                , sort("OptExp")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"present\""))]))
                     )]
                  )
                )
              , prod(
                  []
                , sort("OptExp")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"absent\""))]))
                     )]
                  )
                )
              , prod(
                  [ label(unquoted("base"), sort("IntCon"))
                  , lit("\".\"")
                  , label(unquoted("decimal"), sort("NatCon"))
                  , label(unquoted("exp"), sort("OptExp"))
                  ]
                , sort("RealCon")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"real-con\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("basic/NatCon")
    , []
    , [ exports(
          conc-grammars(
            conc-grammars(
              sorts([sort("NatCon")])
            , lexical-syntax(
                [ prod(
                    [iter(
                       char-class(simple-charclass(present(range(short("0"), short("9")))))
                     )]
                  , sort("NatCon")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"digits\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , lexical-restrictions(
              [ follow(
                  [sort("NatCon")]
                , single(
                    char-class(simple-charclass(present(range(short("0"), short("9")))))
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("basic/Whitespace")
    , []
    , [ exports(
          conc-grammars(
            lexical-syntax(
              [ prod(
                  [ char-class(
                      simple-charclass(
                        present(
                          conc(
                            short("\\ ")
                          , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                          )
                        )
                      )
                    )
                  ]
                , layout()
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"whitespace\""))]))
                     )]
                  )
                )
              ]
            )
          , context-free-restrictions(
              [ follow(
                  [opt(layout())]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            short("\\ ")
                          , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/aterm/syntax/IntCon")
    , [imports([module(unparameterized("basic/Whitespace")), module(unparameterized("basic/NatCon"))])]
    , [ hiddens(context-free-start-symbols([sort("IntCon")]))
      , exports(
          conc-grammars(
            sorts([sort("IntCon")])
          , context-free-syntax(
              [ prod(
                  [sort("NatCon")]
                , sort("IntCon")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"natural\""))]))
                     )]
                  )
                )
              , prod(
                  [label(unquoted("pos"), lit("\"+\"")), sort("NatCon")]
                , sort("IntCon")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"positive\""))]))
                     )]
                  )
                )
              , prod(
                  [label(unquoted("neg"), lit("\"-\"")), sort("NatCon")]
                , sort("IntCon")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"negative\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/aterm/syntax/ATerms")
    , [ imports(
          [ module(unparameterized("languages/aterm/syntax/IntCon"))
          , module(unparameterized("languages/aterm/syntax/RealCon"))
          , module(unparameterized("basic/StrCon"))
          , module(unparameterized("basic/IdentifierCon"))
          ]
        )
      ]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts([sort("AFun"), sort("ATerm"), sort("Annotation")])
              , context-free-syntax(
                  [ prod(
                      [sort("StrCon")]
                    , sort("AFun")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"quoted\""))]))
                         )]
                      )
                    )
                  , prod(
                      [sort("IdCon")]
                    , sort("AFun")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"unquoted\""))]))
                         )]
                      )
                    )
                  ]
                )
              )
            , context-free-syntax(
                [ prod(
                    [sort("IntCon")]
                  , sort("ATerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"int\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("RealCon")]
                  , sort("ATerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"real\""))]))
                       )]
                    )
                  )
                , prod(
                    [label(unquoted("fun"), sort("AFun"))]
                  , sort("ATerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"fun\""))]))
                       )]
                    )
                  )
                , prod(
                    [ label(unquoted("fun"), sort("AFun"))
                    , lit("\"(\"")
                    , label(unquoted("args"), iter-sep(sort("ATerm"), lit("\",\"")))
                    , lit("\")\"")
                    ]
                  , sort("ATerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"appl\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"<\""), label(unquoted("type"), sort("ATerm")), lit("\">\"")]
                  , sort("ATerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"placeholder\""))]))
                       )]
                    )
                  )
                , prod(
                    [ lit("\"[\"")
                    , label(unquoted("elems"), iter-star-sep(sort("ATerm"), lit("\",\"")))
                    , lit("\"]\"")
                    ]
                  , sort("ATerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"list\""))]))
                       )]
                    )
                  )
                , prod(
                    [label(unquoted("trm"), sort("ATerm")), sort("Annotation")]
                  , sort("ATerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"annotated\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [ lit("\"{\"")
                  , label(unquoted("annos"), iter-sep(sort("ATerm"), lit("\",\"")))
                  , lit("\"}\"")
                  ]
                , sort("Annotation")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"default\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      , hiddens(context-free-start-symbols([sort("ATerm")]))
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Kernel")
    , [ imports(
          [module(unparameterized("languages/aterm/syntax/ATerms")), module(unparameterized("languages/sdf2/syntax/Symbols")), module(unparameterized("languages/sdf2/syntax/Grammars"))]
        )
      ]
    , [ exports(
          conc-grammars(
            sorts(
              [ sort("Attribute")
              , sort("ATermAttribute")
              , sort("Attributes")
              , sort("Production")
              , sort("Productions")
              ]
            )
          , context-free-syntax(
              [ prod(
                  [label(unquoted("aterm"), sort("ATerm"))]
                , sort("ATermAttribute")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"default\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("ATermAttribute")]
                , sort("Attribute")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"term\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"{\"")
                  , label(unquoted("list"), iter-star-sep(sort("Attribute"), lit("\",\"")))
                  , lit("\"}\"")
                  ]
                , sort("Attributes")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"attrs\""))]))
                     )]
                  )
                )
              , prod(
                  []
                , sort("Attributes")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"no-attrs\""))]))
                     )]
                  )
                )
              , prod(
                  [ sort("Symbols")
                  , lit("\"->\"")
                  , label(unquoted("result"), sort("Symbol"))
                  , sort("Attributes")
                  ]
                , sort("Production")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"prod\""))]))
                     )]
                  )
                )
              , prod(
                  [label(unquoted("list"), iter-star(sort("Production")))]
                , sort("Productions")
                , no-attrs()
                )
              , prod(
                  [lit("\"syntax\""), sort("Productions")]
                , sort("Grammar")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"syntax\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Sdf2-Syntax")
    , [ imports(
          [ module(unparameterized("languages/sdf2/syntax/Kernel"))
          , module(unparameterized("languages/sdf2/syntax/Basic"))
          , module(unparameterized("languages/sdf2/syntax/Modules"))
          , module(unparameterized("languages/sdf2/syntax/Regular"))
          , module(unparameterized("languages/sdf2/syntax/Lifting"))
          , module(unparameterized("languages/sdf2/syntax/Priority"))
          , module(unparameterized("languages/sdf2/syntax/CC"))
          , module(unparameterized("languages/sdf2/syntax/Sorts"))
          , module(unparameterized("languages/sdf2/syntax/Start-Symbols"))
          , module(unparameterized("languages/sdf2/syntax/Literals"))
          , module(unparameterized("languages/sdf2/syntax/Labels"))
          , module(unparameterized("languages/sdf2/syntax/Restrictions"))
          , module(unparameterized("languages/sdf2/syntax/Aliases"))
          ]
        )
      ]
    , [ exports(
          conc-grammars(
            conc-grammars(
              sorts([sort("SDF")])
            , context-free-syntax(
                [ prod(
                    [lit("\"<START>\"")]
                  , sort("Symbol")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"start\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"<Start>\"")]
                  , sort("Symbol")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"file-start\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"lexical\""), lit("\"priorities\""), sort("Priorities")]
                  , sort("Grammar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"lexical-priorities\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"context-free\""), lit("\"priorities\""), sort("Priorities")]
                  , sort("Grammar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"context-free-priorities\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"lexical\""), lit("\"restrictions\""), sort("Restrictions")]
                  , sort("Grammar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"lexical-restrictions\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"context-free\""), lit("\"restrictions\""), sort("Restrictions")]
                  , sort("Grammar")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"context-free-restrictions\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"definition\""), sort("Definition")]
                  , sort("SDF")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"definition\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , context-free-priorities(
              [ chain(
                  [ simple-group(
                      prod(
                        [sort("Symbol"), lit("\"|\""), sort("Symbol")]
                      , sort("Symbol")
                      , no-attrs()
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("Label"), lit("\":\""), sort("Symbol")]
                      , sort("Symbol")
                      , no-attrs()
                      )
                    )
                  ]
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("languages/sdf2/syntax/Sdf2")
    , [imports([module(unparameterized("languages/sdf2/syntax/Sdf2-Syntax"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              lexical-syntax(
                [prod(
                   [lit("\"LAYOUT\"")]
                 , sort("Sort")
                 , attrs([reject()])
                 )]
              )
            , context-free-syntax(
                [ prod(
                    [lit("\"aliases\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"lexical\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"priorities\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"context-free\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"definition\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"syntax\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"variables\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"module\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"imports\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"exports\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"hiddens\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"left\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"right\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"assoc\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"non-assoc\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"bracket\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"sorts\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"bracket\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"sorts\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"restrictions\"")]
                  , sort("ModuleName")
                  , attrs([reject()])
                  )
                , prod(
                    [ sort("StrCon")
                    , lit("\"(\"")
                    , label(unquoted("arguments"), iter-star-sep(sort("Symbol"), lit("\",\"")))
                    , lit("\")\"")
                    ]
                  , sort("Symbols")
                  , attrs([reject()])
                  )
                , prod(
                    [sort("Associativity")]
                  , sort("Label")
                  , attrs([reject()])
                  )
                , prod(
                    [sort("Associativity")]
                  , sort("ATermAttribute")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"reject\"")]
                  , sort("ATermAttribute")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"prefer\"")]
                  , sort("ATermAttribute")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"avoid\"")]
                  , sort("ATermAttribute")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"bracket\"")]
                  , sort("ATermAttribute")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"id\""), lit("\"(\""), sort("ModuleName"), lit("\")\"")]
                  , sort("ATermAttribute")
                  , attrs([reject()])
                  )
                ]
              )
            )
          , restrictions(
              [ follow(
                  [ cf(sort("Sort"))
                  , lit("\"aliases\"")
                  , lit("\"lexical\"")
                  , lit("\"priorities\"")
                  , lit("\"context-free\"")
                  , lit("\"definition\"")
                  , lit("\"syntax\"")
                  , lit("\"variables\"")
                  , lit("\"module\"")
                  , lit("\"imports\"")
                  , lit("\"exports\"")
                  , lit("\"hiddens\"")
                  , lit("\"left\"")
                  , lit("\"right\"")
                  , lit("\"assoc\"")
                  , lit("\"non-assoc\"")
                  , lit("\"bracket\"")
                  , lit("\"sorts\"")
                  ]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            range(short("A"), short("Z"))
                          , conc(
                              range(short("a"), short("z"))
                            , range(short("0"), short("9"))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              , follow(
                  [cf(sort("NatCon"))]
                , single(
                    char-class(simple-charclass(present(range(short("0"), short("9")))))
                  )
                )
              , follow(
                  [cf(opt(layout()))]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            short("\\ ")
                          , conc(short("\\t"), conc(short("\\n"), short("\\%")))
                          )
                        )
                      )
                    )
                  )
                )
              , follow(
                  [cf(sort("NumChar"))]
                , single(
                    char-class(simple-charclass(present(range(short("0"), short("9")))))
                  )
                )
              , follow(
                  [cf(sort("ModuleName"))]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            range(short("A"), short("Z"))
                          , conc(
                              range(short("a"), short("z"))
                            , conc(
                                range(short("0"), short("9"))
                              , conc(short("\\_"), short("\\-"))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      , exports(context-free-start-symbols([sort("SDF"), sort("Module")]))
      ]
    )
  , module(
      unparameterized("SDF")
    , [imports([module(unparameterized("languages/sdf2/syntax/Sdf2"))])]
    , [ hiddens(
          conc-grammars(
            context-free-start-symbols([sort("SDF"), sort("Module")])
          , context-free-syntax(
              [ prod(
                  [sort("Group"), lit("\".\"")]
                , sort("Group")
                , attrs(
                    [ assoc(non-assoc())
                    , term(
                        default(appl(unquoted("cons"), [fun(quoted("\"non-transitive\""))]))
                      )
                    ]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      parameterized("SDFMix", [sort("Ctx0")])
    , [ imports(
          [ renamed-module(
              unparameterized("SDF")
            , renamings(
                [ symbol(sort("SDF"), parameterized-sort("SDF", [sort("Ctx0")]))
                , symbol(sort("Aliases"), parameterized-sort("Aliases", [sort("Ctx0")]))
                , symbol(sort("Alias"), parameterized-sort("Alias", [sort("Ctx0")]))
                , symbol(sort("Restrictions"), parameterized-sort("Restrictions", [sort("Ctx0")]))
                , symbol(sort("Restriction"), parameterized-sort("Restriction", [sort("Ctx0")]))
                , symbol(sort("Label"), parameterized-sort("Label", [sort("Ctx0")]))
                , symbol(sort("FunctionName"), parameterized-sort("FunctionName", [sort("Ctx0")]))
                , symbol(sort("SingleQuotedStrCon"), parameterized-sort("SingleQuotedStrCon", [sort("Ctx0")]))
                , symbol(sort("SingleQuotedStrChar"), parameterized-sort("SingleQuotedStrChar", [sort("Ctx0")]))
                , symbol(sort("Sort"), parameterized-sort("Sort", [sort("Ctx0")]))
                , symbol(sort("OptCharRanges"), parameterized-sort("OptCharRanges", [sort("Ctx0")]))
                , symbol(sort("CharRange"), parameterized-sort("CharRange", [sort("Ctx0")]))
                , symbol(sort("Character"), parameterized-sort("Character", [sort("Ctx0")]))
                , symbol(sort("ShortChar"), parameterized-sort("ShortChar", [sort("Ctx0")]))
                , symbol(sort("NumChar"), parameterized-sort("NumChar", [sort("Ctx0")]))
                , symbol(sort("Priorities"), parameterized-sort("Priorities", [sort("Ctx0")]))
                , symbol(sort("Priority"), parameterized-sort("Priority", [sort("Ctx0")]))
                , symbol(sort("ArgumentIndicator"), parameterized-sort("ArgumentIndicator", [sort("Ctx0")]))
                , symbol(sort("Associativity"), parameterized-sort("Associativity", [sort("Ctx0")]))
                , symbol(sort("Import"), parameterized-sort("Import", [sort("Ctx0")]))
                , symbol(sort("Imports"), parameterized-sort("Imports", [sort("Ctx0")]))
                , symbol(sort("ImpSection"), parameterized-sort("ImpSection", [sort("Ctx0")]))
                , symbol(sort("ModuleName"), parameterized-sort("ModuleName", [sort("Ctx0")]))
                , symbol(sort("Sections"), parameterized-sort("Sections", [sort("Ctx0")]))
                , symbol(sort("Section"), parameterized-sort("Section", [sort("Ctx0")]))
                , symbol(sort("Module"), parameterized-sort("Module", [sort("Ctx0")]))
                , symbol(sort("Definition"), parameterized-sort("Definition", [sort("Ctx0")]))
                , symbol(sort("ModuleId"), parameterized-sort("ModuleId", [sort("Ctx0")]))
                , symbol(sort("ModuleWord"), parameterized-sort("ModuleWord", [sort("Ctx0")]))
                , symbol(sort("Renaming"), parameterized-sort("Renaming", [sort("Ctx0")]))
                , symbol(sort("Renamings"), parameterized-sort("Renamings", [sort("Ctx0")]))
                , symbol(sort("Productions"), parameterized-sort("Productions", [sort("Ctx0")]))
                , symbol(sort("Production"), parameterized-sort("Production", [sort("Ctx0")]))
                , symbol(sort("Attributes"), parameterized-sort("Attributes", [sort("Ctx0")]))
                , symbol(sort("Attribute"), parameterized-sort("Attribute", [sort("Ctx0")]))
                , symbol(sort("ATermAttribute"), parameterized-sort("ATermAttribute", [sort("Ctx0")]))
                , symbol(sort("Symbols"), parameterized-sort("Symbols", [sort("Ctx0")]))
                , symbol(sort("Annotation"), parameterized-sort("Annotation", [sort("Ctx0")]))
                , symbol(sort("ATerm"), parameterized-sort("ATerm", [sort("Ctx0")]))
                , symbol(sort("AFun"), parameterized-sort("AFun", [sort("Ctx0")]))
                , symbol(sort("IdCon"), parameterized-sort("IdCon", [sort("Ctx0")]))
                , symbol(sort("StrCon"), parameterized-sort("StrCon", [sort("Ctx0")]))
                , symbol(sort("StrChar"), parameterized-sort("StrChar", [sort("Ctx0")]))
                , symbol(sort("RealCon"), parameterized-sort("RealCon", [sort("Ctx0")]))
                , symbol(sort("OptExp"), parameterized-sort("OptExp", [sort("Ctx0")]))
                , symbol(sort("IntCon"), parameterized-sort("IntCon", [sort("Ctx0")]))
                , symbol(sort("NatCon"), parameterized-sort("NatCon", [sort("Ctx0")]))
                , symbol(sort("Lookahead"), parameterized-sort("Lookahead", [sort("Ctx0")]))
                , symbol(sort("Grammar"), parameterized-sort("Grammar", [sort("Ctx0")]))
                , symbol(sort("Symbol"), parameterized-sort("Symbol", [sort("Ctx0")]))
                , symbol(sort("CharRanges"), parameterized-sort("CharRanges", [sort("Ctx0")]))
                , symbol(sort("CharClass"), parameterized-sort("CharClass", [sort("Ctx0")]))
                , symbol(sort("Lookaheads"), parameterized-sort("Lookaheads", [sort("Ctx0")]))
                , symbol(sort("Group"), parameterized-sort("Group", [sort("Ctx0")]))
                ]
              )
            )
          ]
        )
      ]
    , []
    )
  , module(
      unparameterized("ResultTerms")
    , [imports([module(unparameterized("Stratego-Sugar"))])]
    , [ exports(
          lexical-syntax(
            [ prod(
                []
              , lit("\";\"")
              , attrs(
                  [ term(default(fun(unquoted("recover"))))
                  , term(
                      default(appl(unquoted("cons"), [fun(quoted("\"INSERTION\""))]))
                    )
                  ]
                )
              )
            ]
          )
        )
      , exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts(
                  [sort("LineEnd"), sort("TermNoApp"), sort("ResultTerm"), sort("SingleLineLayout")]
                )
              , context-free-syntax(
                  [ prod([sort("TermNoApp")], sort("ResultTerm"), no-attrs())
                  , prod([sort("Term")], sort("TermNoApp"), no-attrs())
                  , prod(
                      [sort("StrategyAngle")]
                    , sort("TermNoApp")
                    , attrs([reject()])
                    )
                  , prod(
                      [lit("\"<\""), sort("Strategy"), lit("\">\""), sort("Term")]
                    , sort("TermNoApp")
                    , attrs([reject()])
                    )
                  ]
                )
              )
            , lexical-syntax(
                [ prod([sort("ShortCom")], sort("SingleLineLayout"), no-attrs())
                , prod([sort("LongCom")], sort("SingleLineLayout"), no-attrs())
                , prod(
                    [iter(
                       char-class(simple-charclass(present(conc(short("\\ "), short("\\t")))))
                     )]
                  , sort("SingleLineLayout")
                  , no-attrs()
                  )
                , prod(
                    [char-class(simple-charclass(present(conc(short("\\n"), short("\\r")))))]
                  , sort("LineEnd")
                  , no-attrs()
                  )
                , prod([sort("Eof")], sort("LineEnd"), no-attrs())
                ]
              )
            )
          , syntax(
              [ prod(
                  [ cf(sort("StrategyAngle"))
                  , lex(iter-star(sort("SingleLineLayout")))
                  , cf(sort("LineEnd"))
                  ]
                , cf(sort("ResultTerm"))
                , attrs(
                    [term(
                       default(appl(unquoted("ast"), [fun(quoted("\"RootApp(<1>)\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"<\"")
                  , cf(opt(layout()))
                  , cf(sort("Strategy"))
                  , cf(opt(layout()))
                  , lit("\">\"")
                  , lex(iter-star(sort("SingleLineLayout")))
                  , cf(sort("Term"))
                  ]
                , cf(sort("ResultTerm"))
                , attrs(
                    [term(
                       default(appl(unquoted("ast"), [fun(quoted("\"App(<1>, <3>)\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-Overlays")
    , [imports([module(unparameterized("Stratego-Core-Identifiers")), module(unparameterized("Stratego-Sugar-Terms"))])]
    , [ exports(
          conc-grammars(
            sorts([sort("Overlay")])
          , context-free-syntax(
              [ prod(
                  [sort("Id"), lit("\"=\""), sort("Term")]
                , sort("Overlay")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"OverlayNoArgs\""))]))
                     )]
                  )
                )
              , prod(
                  [ sort("Id")
                  , lit("\"(\"")
                  , iter-star-sep(sort("Id"), lit("\",\""))
                  , lit("\")\"")
                  , lit("\"=\"")
                  , sort("Term")
                  ]
                , sort("Overlay")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Overlay\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-DynamicRules")
    , [ imports(
          [module(unparameterized("Stratego-Core-Identifiers")), module(unparameterized("Stratego-Sugar-Strategies")), module(unparameterized("Stratego-Sugar-Rules"))]
        )
      ]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      conc-grammars(
                        conc-grammars(
                          conc-grammars(
                            conc-grammars(
                              sorts([sort("ScopeLabels")])
                            , context-free-syntax(
                                [ prod(
                                    [ lit("\"{|\"")
                                    , sort("ScopeLabels")
                                    , lit("\":\"")
                                    , sort("Strategy")
                                    , lit("\"|}\"")
                                    ]
                                  , sort("Strategy")
                                  , attrs(
                                      [term(
                                         default(appl(unquoted("cons"), [fun(quoted("\"DynRuleScope\""))]))
                                       )]
                                    )
                                  )
                                , prod(
                                    [iter-star-sep(sort("DynRuleScopeId"), lit("\",\""))]
                                  , sort("ScopeLabels")
                                  , no-attrs()
                                  )
                                , prod(
                                    [lit("\"~\""), sort("Term")]
                                  , sort("ScopeLabels")
                                  , attrs(
                                      [term(
                                         default(appl(unquoted("cons"), [fun(quoted("\"ScopeLabels\""))]))
                                       )]
                                    )
                                  )
                                ]
                              )
                            )
                          , sorts(
                              [sort("DynRuleDef"), sort("DynRuleId"), sort("DynRuleScopeId"), sort("RuleDec")]
                            )
                          )
                        , context-free-syntax(
                            [ prod(
                                [lit("\"rules\""), lit("\"(\""), iter-star(sort("DynRuleDef")), lit("\")\"")]
                              , sort("Strategy")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"GenDynRules\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("Id"), lit("\"+\""), sort("Term")]
                              , sort("DynRuleDef")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"AddScopeLabel\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("DynRuleId"), lit("\":-\""), sort("Term")]
                              , sort("DynRuleDef")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"UndefineDynRule\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("DynRuleId"), lit("\":\""), sort("Rule")]
                              , sort("DynRuleDef")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"SetDynRule\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("DynRuleId"), lit("\":+\""), sort("Rule")]
                              , sort("DynRuleDef")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"AddDynRule\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("DynRuleId"), lit("\":\""), sort("Term")]
                              , sort("DynRuleDef")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"SetDynRuleMatch\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("DynRuleId"), lit("\":=\""), sort("Term")]
                              , sort("DynRuleDef")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"DynRuleAssign\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("DynRuleId"), lit("\":+=\""), sort("Term")]
                              , sort("DynRuleDef")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"DynRuleAssignAdd\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [ sort("DynRuleId")
                                , lit("\":\"")
                                , sort("Rule")
                                , lit("\"depends\"")
                                , lit("\"on\"")
                                , sort("Term")
                                ]
                              , sort("DynRuleDef")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"SetDynRuleDepends\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("RuleDec"), lit("\".\""), sort("Term")]
                              , sort("DynRuleId")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"LabeledDynRuleId\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("RuleDec"), lit("\"+\""), sort("Term")]
                              , sort("DynRuleId")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"AddLabelDynRuleId\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("RuleDec")]
                              , sort("DynRuleId")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"DynRuleId\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("Id"), lit("\".\""), sort("Term")]
                              , sort("DynRuleScopeId")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"LabeledDynRuleScopeId\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("Id")]
                              , sort("DynRuleScopeId")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"DynRuleScopeId\""))]))
                                   )]
                                )
                              )
                            ]
                          )
                        )
                      , context-free-syntax(
                          [ prod(
                              [sort("Id")]
                            , sort("RuleDec")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"RDecNoArgs\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("Id")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Typedid"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("RuleDec")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"RDec\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("Id")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Typedid"), lit("\",\""))
                              , lit("\"|\"")
                              , iter-star-sep(sort("Typedid"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("RuleDec")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"RDecT\""))]))
                                 )]
                              )
                            )
                          ]
                        )
                      )
                    , sorts([sort("RuleNames")])
                    )
                  , context-free-syntax(
                      [ prod(
                          [iter-star-sep(sort("Id"), lit("\",\""))]
                        , sort("RuleNames")
                        , no-attrs()
                        )
                      , prod(
                          [lit("\"~\""), sort("Term")]
                        , sort("RuleNames")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"RuleNames\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lit("\"/\""), sort("RuleNames"), lit("\"\\\\*\""), sort("Strategy")]
                        , sort("Strategy")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersectFix\""))]))
                             )]
                          )
                        )
                      ]
                    )
                  )
                , syntax(
                    [ prod(
                        [ lit("\"\\\\\"")
                        , cf(opt(layout()))
                        , cf(sort("RuleNames"))
                        , lit("\"/*\"")
                        , cf(opt(layout()))
                        , cf(sort("Strategy"))
                        ]
                      , cf(sort("Strategy"))
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"DynRuleUnionFix\""))]))
                           )]
                        )
                      )
                    , prod(
                        [ lit("\"\\\\\"")
                        , cf(opt(layout()))
                        , cf(sort("RuleNames"))
                        , lit("\" /*\"")
                        , cf(opt(layout()))
                        , cf(sort("Strategy"))
                        ]
                      , cf(sort("Strategy"))
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"DynRuleUnionFix\""))]))
                           )]
                        )
                      )
                    , prod(
                        [ lit("\"/\"")
                        , cf(opt(layout()))
                        , cf(sort("RuleNames"))
                        , cf(opt(layout()))
                        , lit("\"\\\\\"")
                        , cf(opt(layout()))
                        , cf(sort("RuleNames"))
                        , lit("\"/*\"")
                        , cf(opt(layout()))
                        , cf(sort("Strategy"))
                        ]
                      , cf(sort("Strategy"))
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersectUnionFix\""))]))
                           )]
                        )
                      )
                    , prod(
                        [ lit("\"/\"")
                        , cf(opt(layout()))
                        , cf(sort("RuleNames"))
                        , cf(opt(layout()))
                        , lit("\"\\\\\"")
                        , cf(opt(layout()))
                        , cf(sort("RuleNames"))
                        , lit("\" /*\"")
                        , cf(opt(layout()))
                        , cf(sort("Strategy"))
                        ]
                      , cf(sort("Strategy"))
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersectUnionFix\""))]))
                           )]
                        )
                      )
                    ]
                  )
                )
              , context-free-syntax(
                  [ prod(
                      [ sort("Strategy")
                      , lit("\"/\"")
                      , sort("RuleNames")
                      , lit("\"\\\\\"")
                      , sort("Strategy")
                      ]
                    , sort("Strategy")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersect\""))]))
                          )
                        , assoc(right())
                        ]
                      )
                    )
                  , prod(
                      [ sort("Strategy")
                      , lit("\"\\\\\"")
                      , sort("RuleNames")
                      , lit("\"/\"")
                      , sort("Strategy")
                      ]
                    , sort("Strategy")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"DynRuleUnion\""))]))
                          )
                        , assoc(right())
                        ]
                      )
                    )
                  , prod(
                      [ sort("Strategy")
                      , lit("\"/\"")
                      , sort("RuleNames")
                      , lit("\"\\\\\"")
                      , sort("RuleNames")
                      , lit("\"/\"")
                      , sort("Strategy")
                      ]
                    , sort("Strategy")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersectUnion\""))]))
                          )
                        , assoc(right())
                        ]
                      )
                    )
                  ]
                )
              )
            , priorities(
                [ chain(
                    [ simple-group(
                        prod(
                          [cf(sort("StrategyAngle")), cf(opt(layout())), cf(sort("Term"))]
                        , cf(sort("Strategy"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"BA\""))]))
                             )]
                          )
                        )
                      )
                    , prods-group(
                        [ prod(
                            [ lit("\"\\\\\"")
                            , cf(opt(layout()))
                            , cf(sort("RuleNames"))
                            , lit("\"/*\"")
                            , cf(opt(layout()))
                            , cf(sort("Strategy"))
                            ]
                          , cf(sort("Strategy"))
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"DynRuleUnionFix\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ lit("\"\\\\\"")
                            , cf(opt(layout()))
                            , cf(sort("RuleNames"))
                            , lit("\" /*\"")
                            , cf(opt(layout()))
                            , cf(sort("Strategy"))
                            ]
                          , cf(sort("Strategy"))
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"DynRuleUnionFix\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ lit("\"/\"")
                            , cf(opt(layout()))
                            , cf(sort("RuleNames"))
                            , cf(opt(layout()))
                            , lit("\"\\\\\"")
                            , cf(opt(layout()))
                            , cf(sort("RuleNames"))
                            , lit("\"/*\"")
                            , cf(opt(layout()))
                            , cf(sort("Strategy"))
                            ]
                          , cf(sort("Strategy"))
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersectUnionFix\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ lit("\"/\"")
                            , cf(opt(layout()))
                            , cf(sort("RuleNames"))
                            , cf(opt(layout()))
                            , lit("\"\\\\\"")
                            , cf(opt(layout()))
                            , cf(sort("RuleNames"))
                            , lit("\" /*\"")
                            , cf(opt(layout()))
                            , cf(sort("Strategy"))
                            ]
                          , cf(sort("Strategy"))
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersectUnionFix\""))]))
                               )]
                            )
                          )
                        ]
                      )
                    , simple-group(
                        prod(
                          [ cf(sort("Strategy"))
                          , cf(opt(layout()))
                          , lit("\"=>\"")
                          , cf(opt(layout()))
                          , cf(sort("Term"))
                          ]
                        , cf(sort("Strategy"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"AM\""))]))
                             )]
                          )
                        )
                      )
                    ]
                  )
                ]
              )
            )
          , context-free-priorities(
              [ chain(
                  [ simple-group(
                      prod(
                        [sort("StrategyAngle"), sort("Term")]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"BA\""))]))
                           )]
                        )
                      )
                    )
                  , simple-group(
                      prod(
                        [lit("\"/\""), sort("RuleNames"), lit("\"\\\\*\""), sort("Strategy")]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersectFix\""))]))
                           )]
                        )
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("Strategy"), lit("\"=>\""), sort("Term")]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"AM\""))]))
                           )]
                        )
                      )
                    )
                  , simple-group(
                      prod(
                        [ sort("Strategy")
                        , lit("\"/\"")
                        , sort("RuleNames")
                        , lit("\"\\\\\"")
                        , sort("Strategy")
                        ]
                      , sort("Strategy")
                      , attrs(
                          [ term(
                              default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersect\""))]))
                            )
                          , assoc(right())
                          ]
                        )
                      )
                    )
                  , simple-group(
                      prod(
                        [ sort("Strategy")
                        , lit("\"\\\\\"")
                        , sort("RuleNames")
                        , lit("\"/\"")
                        , sort("Strategy")
                        ]
                      , sort("Strategy")
                      , attrs(
                          [ term(
                              default(appl(unquoted("cons"), [fun(quoted("\"DynRuleUnion\""))]))
                            )
                          , assoc(right())
                          ]
                        )
                      )
                    )
                  , simple-group(
                      prod(
                        [ sort("Strategy")
                        , lit("\"/\"")
                        , sort("RuleNames")
                        , lit("\"\\\\\"")
                        , sort("RuleNames")
                        , lit("\"/\"")
                        , sort("Strategy")
                        ]
                      , sort("Strategy")
                      , attrs(
                          [ term(
                              default(appl(unquoted("cons"), [fun(quoted("\"DynRuleIntersectUnion\""))]))
                            )
                          , assoc(right())
                          ]
                        )
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("Strategy"), lit("\";\""), sort("Strategy")]
                      , sort("Strategy")
                      , attrs(
                          [ term(
                              default(appl(unquoted("cons"), [fun(quoted("\"Seq\""))]))
                            )
                          , assoc(right())
                          ]
                        )
                      )
                    )
                  ]
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-Rules")
    , [imports([module(unparameterized("Stratego-Sugar-Strategies"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts([sort("RuleDef")])
              , context-free-syntax(
                  [ prod(
                      [sort("Id"), lit("\":\""), sort("Rule")]
                    , sort("RuleDef")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"RDefNoArgs\""))]))
                         )]
                      )
                    )
                  , prod(
                      [iter(sort("Anno")), sort("RuleDef")]
                    , sort("Def")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"AnnoDef\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ sort("Id")
                      , lit("\"(\"")
                      , iter-star-sep(sort("Typedid"), lit("\",\""))
                      , lit("\")\"")
                      , lit("\":\"")
                      , sort("Rule")
                      ]
                    , sort("RuleDef")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"RDef\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ sort("Id")
                      , lit("\"(\"")
                      , iter-star-sep(sort("Typedid"), lit("\",\""))
                      , lit("\"|\"")
                      , iter-star-sep(sort("Typedid"), lit("\",\""))
                      , lit("\")\"")
                      , lit("\":\"")
                      , sort("Rule")
                      ]
                    , sort("RuleDef")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"RDefT\""))]))
                         )]
                      )
                    )
                  ]
                )
              )
            , sorts([sort("Rule"), sort("RuleCond")])
            )
          , context-free-syntax(
              [ prod(
                  [sort("Term"), lit("\"->\""), sort("Term")]
                , sort("Rule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"RuleNoCond\""))]))
                     )]
                  )
                )
              , prod(
                  [ sort("Term")
                  , lit("\"->\"")
                  , sort("Term")
                  , lit("\"where\"")
                  , sort("Strategy")
                  ]
                , sort("Rule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Rule\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Term"), lit("\"->\""), sort("Term"), iter(sort("RuleCond"))]
                , sort("Rule")
                , attrs(
                    [ term(
                        default(appl(unquoted("cons"), [fun(quoted("\"Rule\""))]))
                      )
                    , avoid()
                    ]
                  )
                )
              , prod(
                  [lit("\"where\""), sort("Strategy")]
                , sort("RuleCond")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"WhereClause\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"with\""), sort("Strategy")]
                , sort("RuleCond")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"WithClause\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-Strategies")
    , [ imports(
          [ module(unparameterized("Stratego-Core-Strategies"))
          , module(unparameterized("Stratego-Sugar-Terms"))
          , module(unparameterized("Stratego-Sugar-Constants"))
          , module(unparameterized("Stratego-Sugar-Signatures"))
          ]
        )
      ]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      conc-grammars(
                        conc-grammars(
                          conc-grammars(
                            context-free-syntax(
                              [ prod(
                                  [sort("Id"), lit("\"=\""), sort("Strategy")]
                                , sort("StrategyDef")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"SDefNoArgs\""))]))
                                     )]
                                  )
                                )
                              , prod(
                                  [ sort("Id")
                                  , lit("\"(\"")
                                  , iter-star-sep(sort("Typedid"), lit("\",\""))
                                  , lit("\")\"")
                                  , lit("\"=\"")
                                  , sort("Strategy")
                                  ]
                                , sort("StrategyDef")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"SDef\""))]))
                                     )]
                                  )
                                )
                              ]
                            )
                          , context-free-syntax(
                              [ prod(
                                  [sort("ID")]
                                , sort("Typedid")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"DefaultVarDec\""))]))
                                     )]
                                  )
                                )
                              ]
                            )
                          )
                        , sorts([sort("Rule")])
                        )
                      , sorts([sort("StrategyParen"), sort("StrategyCurly"), sort("StrategyAngle")])
                      )
                    , context-free-syntax(
                        [ prod(
                            [ sort("SVar")
                            , lit("\"(\"")
                            , iter-star-sep(sort("Strategy"), lit("\",\""))
                            , lit("\")\"")
                            ]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Call\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"{\""), sort("Strategy"), lit("\"}\"")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"ScopeDefault\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("StrategyAngle"), sort("Term")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"BA\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"<\""), sort("Strategy"), lit("\">\"")]
                          , sort("StrategyAngle")
                          , attrs([bracket()])
                          )
                        , prod(
                            [sort("Strategy"), lit("\"<+\""), sort("Strategy")]
                          , sort("Strategy")
                          , attrs(
                              [ term(
                                  default(appl(unquoted("cons"), [fun(quoted("\"LChoice\""))]))
                                )
                              , assoc(right())
                              ]
                            )
                          )
                        , prod(
                            [ lit("\"rec\"")
                            , sort("Id")
                            , lit("\"(\"")
                            , sort("Strategy")
                            , lit("\")\"")
                            ]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Rec\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"not\""), lit("\"(\""), sort("Strategy"), lit("\")\"")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Not\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"where\""), lit("\"(\""), sort("Strategy"), lit("\")\"")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Where\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"with\""), lit("\"(\""), sort("Strategy"), lit("\")\"")]
                          , sort("Strategy")
                          , attrs(
                              [ term(
                                  default(appl(unquoted("cons"), [fun(quoted("\"With\""))]))
                                )
                              , prefer()
                              ]
                            )
                          )
                        , prod(
                            [lit("\"test\""), lit("\"(\""), sort("Strategy"), lit("\")\"")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Test\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"prim\""), lit("\"(\""), sort("String"), lit("\")\"")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"PrimNoArgs\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ lit("\"prim\"")
                            , lit("\"(\"")
                            , sort("String")
                            , lit("\",\"")
                            , iter-star-sep(sort("Term"), lit("\",\""))
                            , lit("\")\"")
                            ]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Prim\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("String")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"StrCong\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("Int")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"IntCong\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("Real")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"RealCong\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("Char")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"CharCong\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ sort("String")
                            , lit("\"(\"")
                            , iter-star-sep(sort("Strategy"), lit("\",\""))
                            , lit("\")\"")
                            ]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"CongQ\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("Strategy"), sort("StrategyCurly")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"AnnoCong\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"{\""), sort("Strategy"), lit("\"}\"")]
                          , sort("StrategyCurly")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"StrategyCurly\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"(\""), lit("\")\"")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"EmptyTupleCong\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"(\""), sort("Strategy"), lit("\")\"")]
                          , sort("Strategy")
                          , attrs([bracket()])
                          )
                        , prod(
                            [ lit("\"(\"")
                            , sort("Strategy")
                            , lit("\",\"")
                            , iter-sep(sort("Strategy"), lit("\",\""))
                            , lit("\")\"")
                            ]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"TupleCong\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"[\""), iter-star-sep(sort("Strategy"), lit("\",\"")), lit("\"]\"")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"ListCongNoTail\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ lit("\"[\"")
                            , iter-star-sep(sort("Strategy"), lit("\",\""))
                            , lit("\"|\"")
                            , sort("Strategy")
                            , lit("\"]\"")
                            ]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"ListCong\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("Strategy"), lit("\"#\""), sort("StrategyParen")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"ExplodeCong\""))]))
                               )]
                            )
                          )
                        ]
                      )
                    )
                  , sorts([sort("SwitchCase")])
                  )
                , context-free-syntax(
                    [ prod(
                        [sort("SVar")]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"CallNoArgs\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"\\\\\""), sort("Rule"), lit("\"\\\\\"")]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"LRule\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"(\""), sort("Rule"), lit("\")\"")]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"SRule\""))]))
                           )]
                        )
                      )
                    , prod(
                        [sort("Strategy"), lit("\"+\""), sort("Strategy")]
                      , sort("Strategy")
                      , attrs(
                          [ term(
                              default(appl(unquoted("cons"), [fun(quoted("\"Choice\""))]))
                            )
                          , assoc(right())
                          ]
                        )
                      )
                    , prod(
                        [sort("Strategy"), lit("\"+>\""), sort("Strategy")]
                      , sort("Strategy")
                      , attrs(
                          [ term(
                              default(appl(unquoted("cons"), [fun(quoted("\"RChoice\""))]))
                            )
                          , assoc(right())
                          ]
                        )
                      )
                    , prod(
                        [ lit("\"proceed\"")
                        , lit("\"(\"")
                        , iter-sep(sort("Strategy"), lit("\",\""))
                        , lit("\")\"")
                        ]
                      , sort("Strategy")
                      , attrs(
                          [ term(
                              default(appl(unquoted("cons"), [fun(quoted("\"Proceed\""))]))
                            )
                          , prefer()
                          ]
                        )
                      )
                    , prod(
                        [ lit("\"if\"")
                        , sort("Strategy")
                        , lit("\"then\"")
                        , sort("Strategy")
                        , lit("\"else\"")
                        , sort("Strategy")
                        , lit("\"end\"")
                        ]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"CondChoice\""))]))
                           )]
                        )
                      )
                    , prod(
                        [ lit("\"if\"")
                        , sort("Strategy")
                        , lit("\"then\"")
                        , sort("Strategy")
                        , lit("\"end\"")
                        ]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"IfThen\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"switch\""), sort("Strategy"), iter-star(sort("SwitchCase")), lit("\"end\"")]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"SwitchChoiceNoOtherwise\""))]))
                           )]
                        )
                      )
                    , prod(
                        [ lit("\"switch\"")
                        , sort("Strategy")
                        , iter-star(sort("SwitchCase"))
                        , lit("\"otherwise\"")
                        , lit("\":\"")
                        , sort("Strategy")
                        , lit("\"end\"")
                        ]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"SwitchChoice\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"case\""), sort("Strategy"), lit("\":\""), sort("Strategy")]
                      , sort("SwitchCase")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"SwitchCase\""))]))
                           )]
                        )
                      )
                    , prod(
                        [sort("Strategy"), lit("\"=>\""), sort("Term")]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"AM\""))]))
                           )]
                        )
                      )
                    , prod(
                        [sort("Term"), lit("\":=\""), sort("Term")]
                      , sort("Strategy")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"Assign\""))]))
                           )]
                        )
                      )
                    ]
                  )
                )
              , context-free-priorities(
                  [ chain(
                      [ prods-group(
                          [ prod(
                              [sort("Strategy"), sort("StrategyCurly")]
                            , sort("Strategy")
                            , no-attrs()
                            )
                          , prod(
                              [sort("Strategy"), lit("\"#\""), sort("StrategyParen")]
                            , sort("Strategy")
                            , no-attrs()
                            )
                          ]
                        )
                      , prods-group(
                          [ prod(
                              [lit("\"!\""), sort("Term")]
                            , sort("Strategy")
                            , no-attrs()
                            )
                          , prod(
                              [lit("\"?\""), sort("Term")]
                            , sort("Strategy")
                            , no-attrs()
                            )
                          ]
                        )
                      , simple-group(
                          prod(
                            [sort("StrategyAngle"), sort("Term")]
                          , sort("Strategy")
                          , no-attrs()
                          )
                        )
                      , simple-group(
                          prod(
                            [sort("Strategy"), lit("\"=>\""), sort("Term")]
                          , sort("Strategy")
                          , no-attrs()
                          )
                        )
                      , simple-group(
                          prod(
                            [sort("Strategy"), lit("\";\""), sort("Strategy")]
                          , sort("Strategy")
                          , no-attrs()
                          )
                        )
                      , assoc-group(
                          right()
                        , [ prod(
                              [sort("Strategy"), lit("\"+\""), sort("Strategy")]
                            , sort("Strategy")
                            , no-attrs()
                            )
                          , prod(
                              [sort("Strategy"), lit("\"<+\""), sort("Strategy")]
                            , sort("Strategy")
                            , no-attrs()
                            )
                          , prod(
                              [sort("Strategy"), lit("\"+>\""), sort("Strategy")]
                            , sort("Strategy")
                            , no-attrs()
                            )
                          , prod(
                              [ sort("Strategy")
                              , lit("\"<\"")
                              , sort("StrategyMid")
                              , lit("\"+\"")
                              , sort("Strategy")
                              ]
                            , sort("Strategy")
                            , no-attrs()
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              )
            , context-free-priorities(
                [ chain(
                    [ simple-group(prod([sort("Strategy")], sort("StrategyMid"), no-attrs()))
                    , simple-group(
                        prod(
                          [sort("Strategy"), lit("\"+\""), sort("Strategy")]
                        , sort("Strategy")
                        , no-attrs()
                        )
                      )
                    ]
                  )
                ]
              )
            )
          , context-free-priorities(
              [ chain(
                  [ non-transitive(
                      prods-group(
                        [ prod(
                            [sort("Strategy"), sort("StrategyCurly")]
                          , sort("Strategy")
                          , no-attrs()
                          )
                        , prod(
                            [sort("Strategy"), lit("\"#\""), sort("StrategyParen")]
                          , sort("Strategy")
                          , no-attrs()
                          )
                        ]
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("Term"), lit("\":=\""), sort("Term")]
                      , sort("Strategy")
                      , no-attrs()
                      )
                    )
                  ]
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-Terms")
    , [imports([module(unparameterized("Stratego-Core-Terms")), module(unparameterized("Stratego-Sugar-Strategies"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts([sort("LID")])
              , context-free-syntax(
                  [ prod(
                      [sort("LId")]
                    , sort("LID")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"ListVar\""))]))
                         )]
                      )
                    )
                  , prod(
                      [sort("LID")]
                    , sort("Var")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"Var\""))]))
                         )]
                      )
                    )
                  , prod([sort("LID")], sort("ID"), no-attrs())
                  ]
                )
              )
            , context-free-syntax(
                [ prod(
                    [lit("\"_\""), sort("PreTerm")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"BuildDefaultPT\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"_\""), sort("Term")]
                  , sort("Term")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"BuildDefault\""))]))
                        )
                      , prefer()
                      ]
                    )
                  )
                , prod(
                    [sort("Char")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Char\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("PreTerm")
                    , lit("\"{\"")
                    , iter-star-sep(sort("Term"), lit("\",\""))
                    , lit("\"}\"")
                    ]
                  , sort("Term")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"AnnoList\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("PreTerm")]
                  , sort("Term")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"NoAnnoList\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"<\""), sort("Strategy"), lit("\">\""), sort("Term")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"App\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"<\""), sort("Strategy"), lit("\">\""), sort("Term")]
                  , sort("Term")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"App\""))]))
                        )
                      , prefer()
                      ]
                    )
                  )
                , prod(
                    [sort("StrategyAngle")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"RootApp\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("StrategyAngle")]
                  , sort("Term")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"RootApp\""))]))
                        )
                      , prefer()
                      ]
                    )
                  )
                , prod(
                    [lit("\"(\""), iter-star-sep(sort("Term"), lit("\",\"")), lit("\")\"")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Tuple\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"[\""), iter-star-sep(sort("Term"), lit("\",\"")), lit("\"]\"")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"List\""))]))
                       )]
                    )
                  )
                , prod(
                    [ lit("\"[\"")
                    , iter-star-sep(sort("Term"), lit("\",\""))
                    , lit("\"|\"")
                    , sort("Term")
                    , lit("\"]\"")
                    ]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"ListTail\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , context-free-priorities(
              [ chain(
                  [ simple-group(
                      prod(
                        [ sort("Term")
                        , lit("\"#\"")
                        , lit("\"(\"")
                        , sort("Term")
                        , lit("\")\"")
                        ]
                      , sort("PreTerm")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"Explode\""))]))
                           )]
                        )
                      )
                    )
                  , simple-group(
                      prod(
                        [ sort("PreTerm")
                        , lit("\"{\"")
                        , iter-star-sep(sort("Term"), lit("\",\""))
                        , lit("\"}\"")
                        ]
                      , sort("Term")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"AnnoList\""))]))
                           )]
                        )
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("Var"), lit("\"@\""), sort("Term")]
                      , sort("Term")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"As\""))]))
                           )]
                        )
                      )
                    )
                  ]
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-Signatures")
    , [imports([module(unparameterized("Stratego-Core-Signatures")), module(unparameterized("Stratego-Sugar-Constants"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts([sort("Sort")])
              , context-free-syntax(
                  [ prod(
                      [lit("\"[\""), iter-star-sep(sort("Sort"), lit("\",\"")), lit("\"]\"")]
                    , sort("Sort")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"SortList\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ lit("\"[\"")
                      , iter-star-sep(sort("Sort"), lit("\",\""))
                      , lit("\"|\"")
                      , sort("Sort")
                      , lit("\"]\"")
                      ]
                    , sort("Sort")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"SortListTl\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"(\""), iter-star-sep(sort("Sort"), lit("\",\"")), lit("\")\"")]
                    , sort("Sort")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"SortTuple\""))]))
                         )]
                      )
                    )
                  ]
                )
              )
            , sorts([sort("Kind")])
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"*\"")]
                , sort("Kind")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Star\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"**\"")]
                , sort("Kind")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"StarStar\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Core-Signatures")
    , [imports([module(unparameterized("Stratego-Core-Identifiers")), module(unparameterized("Stratego-Core-Constants"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      conc-grammars(
                        conc-grammars(
                          conc-grammars(
                            sorts([sort("Sdecl")])
                          , context-free-syntax(
                              [ prod(
                                  [lit("\"sorts\""), iter-star(sort("Sort"))]
                                , sort("Sdecl")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"Sorts\""))]))
                                     )]
                                  )
                                )
                              , prod(
                                  [lit("\"constructors\""), iter-star(sort("Opdecl"))]
                                , sort("Sdecl")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"Constructors\""))]))
                                     )]
                                  )
                                )
                              ]
                            )
                          )
                        , sorts([sort("Sort")])
                        )
                      , context-free-syntax(
                          [ prod(
                              [sort("LCID")]
                            , sort("Sort")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"SortVar\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [sort("UCID")]
                            , sort("Sort")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"SortNoArgs\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("Id")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Sort"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("Sort")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"Sort\""))]))
                                 )]
                              )
                            )
                          ]
                        )
                      )
                    , sorts([sort("Opdecl")])
                    )
                  , context-free-syntax(
                      [ prod(
                          [sort("Id"), lit("\":\""), sort("Type")]
                        , sort("Opdecl")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"OpDecl\""))]))
                             )]
                          )
                        )
                      , prod(
                          [sort("String"), lit("\":\""), sort("Type")]
                        , sort("Opdecl")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"OpDeclQ\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lit("\":\""), sort("Type")]
                        , sort("Opdecl")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"OpDeclInj\""))]))
                             )]
                          )
                        )
                      ]
                    )
                  )
                , context-free-syntax(
                    [ prod(
                        [lit("\"external\""), sort("Id"), lit("\":\""), sort("Type")]
                      , sort("Opdecl")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"ExtOpDecl\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"external\""), sort("String"), lit("\":\""), sort("Type")]
                      , sort("Opdecl")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"ExtOpDeclQ\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"external\""), lit("\":\""), sort("Type")]
                      , sort("Opdecl")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"ExtOpDeclInj\""))]))
                           )]
                        )
                      )
                    ]
                  )
                )
              , sorts(
                  [ sort("Type")
                  , sort("ArgType")
                  , sort("ConstType")
                  , sort("FunType")
                  , sort("RetType")
                  ]
                )
              )
            , context-free-syntax(
                [ prod(
                    [sort("Sort")]
                  , sort("ConstType")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"ConstType\""))]))
                       )]
                    )
                  )
                , prod(
                    [iter-sep(sort("ArgType"), lit("\"*\"")), lit("\"->\""), sort("RetType")]
                  , sort("FunType")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"FunType\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"(\""), sort("Type"), lit("\")\"")]
                  , sort("ArgType")
                  , attrs([bracket()])
                  )
                , prod([sort("ConstType")], sort("ArgType"), no-attrs())
                , prod([sort("Type")], sort("RetType"), no-attrs())
                , prod(
                    [sort("FunType")]
                  , sort("RetType")
                  , attrs([reject()])
                  )
                , prod([sort("FunType")], sort("Type"), no-attrs())
                , prod([sort("ConstType")], sort("Type"), no-attrs())
                ]
              )
            )
          , context-free-restrictions(
              [ follow(
                  [sort("Sort")]
                , single(char-class(simple-charclass(present(short("\\(")))))
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Core-Terms")
    , [imports([module(unparameterized("Stratego-Core-Identifiers")), module(unparameterized("Stratego-Core-Constants"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  sorts([sort("ID"), sort("Var"), sort("Wld")])
                , context-free-syntax(
                    [ prod(
                        [sort("Id")]
                      , sort("Var")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"Var\""))]))
                           )]
                        )
                      )
                    , prod([sort("Id")], sort("ID"), no-attrs())
                    ]
                  )
                )
              , sorts([sort("Term"), sort("PreTerm")])
              )
            , context-free-syntax(
                [ prod([sort("Var")], sort("PreTerm"), no-attrs())
                , prod(
                    [sort("Var")]
                  , sort("Term")
                  , attrs([prefer()])
                  )
                , prod(
                    [lit("\"_\"")]
                  , sort("Wld")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Wld\""))]))
                       )]
                    )
                  )
                , prod([sort("Wld")], sort("PreTerm"), no-attrs())
                , prod(
                    [sort("Wld")]
                  , sort("Term")
                  , attrs([prefer()])
                  )
                , prod(
                    [sort("Int")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Int\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("Real")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Real\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("String")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Str\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("Id")
                    , lit("\"(\"")
                    , iter-star-sep(sort("Term"), lit("\",\""))
                    , lit("\")\"")
                    ]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Op\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("String")
                    , lit("\"(\"")
                    , iter-star-sep(sort("Term"), lit("\",\""))
                    , lit("\")\"")
                    ]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"OpQ\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("Term")
                    , lit("\"#\"")
                    , lit("\"(\"")
                    , sort("Term")
                    , lit("\")\"")
                    ]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Explode\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("PreTerm"), lit("\"{^\""), sort("PreTerm"), lit("\"}\"")]
                  , sort("Term")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Anno\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("Var"), lit("\"@\""), sort("Term")]
                  , sort("Term")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"As\""))]))
                        )
                      , prefer()
                      ]
                    )
                  )
                , prod(
                    [sort("Var"), lit("\"@\""), sort("PreTerm")]
                  , sort("PreTerm")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"As\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , context-free-priorities(
              [ chain(
                  [ simple-group(
                      prod(
                        [ sort("Term")
                        , lit("\"#\"")
                        , lit("\"(\"")
                        , sort("Term")
                        , lit("\")\"")
                        ]
                      , sort("PreTerm")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"Explode\""))]))
                           )]
                        )
                      )
                    )
                  , simple-group(
                      prod(
                        [sort("Var"), lit("\"@\""), sort("Term")]
                      , sort("Term")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"As\""))]))
                           )]
                        )
                      )
                    )
                  ]
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Core-Strategies")
    , [ imports(
          [module(unparameterized("Stratego-Core-Terms")), module(unparameterized("Stratego-Core-Constants")), module(unparameterized("Stratego-Core-Signatures"))]
        )
      ]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      conc-grammars(
                        conc-grammars(
                          conc-grammars(
                            conc-grammars(
                              conc-grammars(
                                conc-grammars(
                                  conc-grammars(
                                    conc-grammars(
                                      conc-grammars(
                                        sorts([sort("Def")])
                                      , context-free-syntax(
                                          [ prod([sort("StrategyDef")], sort("Def"), no-attrs())
                                          , prod(
                                              [sort("Id")]
                                            , sort("SVar")
                                            , attrs(
                                                [term(
                                                   default(appl(unquoted("cons"), [fun(quoted("\"SVar\""))]))
                                                 )]
                                              )
                                            )
                                          , prod(
                                              [ lit("\"let\"")
                                              , iter-star(sort("Def"))
                                              , lit("\"in\"")
                                              , sort("Strategy")
                                              , lit("\"end\"")
                                              ]
                                            , sort("Strategy")
                                            , attrs(
                                                [term(
                                                   default(appl(unquoted("cons"), [fun(quoted("\"Let\""))]))
                                                 )]
                                              )
                                            )
                                          , prod(
                                              [ sort("SVar")
                                              , lit("\"(\"")
                                              , iter-star-sep(sort("Strategy"), lit("\",\""))
                                              , lit("\"|\"")
                                              , iter-star-sep(sort("Term"), lit("\",\""))
                                              , lit("\")\"")
                                              ]
                                            , sort("Strategy")
                                            , attrs(
                                                [term(
                                                   default(appl(unquoted("cons"), [fun(quoted("\"CallT\""))]))
                                                 )]
                                              )
                                            )
                                          , prod(
                                              [ lit("\"call\"")
                                              , lit("\"(\"")
                                              , sort("Term")
                                              , lit("\"|\"")
                                              , iter-star-sep(sort("Strategy"), lit("\",\""))
                                              , lit("\"|\"")
                                              , iter-star-sep(sort("Term"), lit("\",\""))
                                              , lit("\")\"")
                                              ]
                                            , sort("Strategy")
                                            , attrs(
                                                [term(
                                                   default(appl(unquoted("cons"), [fun(quoted("\"CallDynamic\""))]))
                                                 )]
                                              )
                                            )
                                          ]
                                        )
                                      )
                                    , sorts([sort("StrategyDef")])
                                    )
                                  , context-free-syntax(
                                      [ prod(
                                          [ sort("Id")
                                          , lit("\"(\"")
                                          , iter-star-sep(sort("Typedid"), lit("\",\""))
                                          , lit("\"|\"")
                                          , iter-star-sep(sort("Typedid"), lit("\",\""))
                                          , lit("\")\"")
                                          , lit("\"=\"")
                                          , sort("Strategy")
                                          ]
                                        , sort("StrategyDef")
                                        , attrs(
                                            [term(
                                               default(appl(unquoted("cons"), [fun(quoted("\"SDefT\""))]))
                                             )]
                                          )
                                        )
                                      , prod(
                                          [iter(sort("Anno")), sort("StrategyDef")]
                                        , sort("Def")
                                        , attrs(
                                            [term(
                                               default(appl(unquoted("cons"), [fun(quoted("\"AnnoDef\""))]))
                                             )]
                                          )
                                        )
                                      , prod(
                                          [ lit("\"external\"")
                                          , sort("Id")
                                          , lit("\"(\"")
                                          , iter-star-sep(sort("Typedid"), lit("\",\""))
                                          , lit("\"|\"")
                                          , iter-star-sep(sort("Typedid"), lit("\",\""))
                                          , lit("\")\"")
                                          , lit("\"=\"")
                                          , sort("Strategy")
                                          ]
                                        , sort("StrategyDef")
                                        , attrs(
                                            [term(
                                               default(appl(unquoted("cons"), [fun(quoted("\"ExtSDefInl\""))]))
                                             )]
                                          )
                                        )
                                      , prod(
                                          [ lit("\"external\"")
                                          , sort("Id")
                                          , lit("\"(\"")
                                          , iter-star-sep(sort("Typedid"), lit("\",\""))
                                          , lit("\"|\"")
                                          , iter-star-sep(sort("Typedid"), lit("\",\""))
                                          , lit("\")\"")
                                          ]
                                        , sort("StrategyDef")
                                        , attrs(
                                            [term(
                                               default(appl(unquoted("cons"), [fun(quoted("\"ExtSDef\""))]))
                                             )]
                                          )
                                        )
                                      , prod(
                                          [ lit("\"external\"")
                                          , sort("EmptyId")
                                          , lit("\"(\"")
                                          , iter-star-sep(sort("Typedid"), lit("\",\""))
                                          , lit("\"|\"")
                                          , iter-star-sep(sort("Typedid"), lit("\",\""))
                                          , lit("\")\"")
                                          ]
                                        , sort("StrategyDef")
                                        , attrs(
                                            [term(
                                               default(appl(unquoted("cons"), [fun(quoted("\"ExtSDef\""))]))
                                             )]
                                          )
                                        )
                                      ]
                                    )
                                  )
                                , sorts([sort("EmptyId")])
                                )
                              , lexical-syntax([prod([], sort("EmptyId"), no-attrs())])
                              )
                            , sorts([sort("Anno")])
                            )
                          , context-free-syntax(
                              [ prod(
                                  [lit("\"extend\"")]
                                , sort("Anno")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"Extend\""))]))
                                     )]
                                  )
                                )
                              , prod(
                                  [lit("\"override\"")]
                                , sort("Anno")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"Override\""))]))
                                     )]
                                  )
                                )
                              , prod(
                                  [lit("\"internal\"")]
                                , sort("Anno")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"Internal\""))]))
                                     )]
                                  )
                                )
                              ]
                            )
                          )
                        , lexical-syntax(
                            [ prod([lit("\"extend\"")], sort("Keyword"), no-attrs())
                            , prod([lit("\"override\"")], sort("Keyword"), no-attrs())
                            , prod([lit("\"internal\"")], sort("Keyword"), no-attrs())
                            , prod([lit("\"sealed\"")], sort("Keyword"), no-attrs())
                            , prod([lit("\"extensible\"")], sort("Keyword"), no-attrs())
                            , prod([lit("\"overridable\"")], sort("Keyword"), no-attrs())
                            ]
                          )
                        )
                      , lexical-restrictions(
                          [ follow(
                              [ lit("\"extend\"")
                              , lit("\"override\"")
                              , lit("\"internal\"")
                              , lit("\"sealed\"")
                              , lit("\"extensible\"")
                              , lit("\"overridable\"")
                              ]
                            , single(
                                char-class(
                                  simple-charclass(
                                    present(
                                      conc(
                                        range(short("a"), short("z"))
                                      , conc(
                                          range(short("A"), short("Z"))
                                        , conc(
                                            range(short("0"), short("9"))
                                          , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          ]
                        )
                      )
                    , sorts([sort("Typedid")])
                    )
                  , context-free-syntax(
                      [ prod(
                          [sort("ID"), lit("\":\""), sort("Type")]
                        , sort("Typedid")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"VarDec\""))]))
                             )]
                          )
                        )
                      ]
                    )
                  )
                , sorts(
                    [sort("Strategy"), sort("SVar"), sort("StrategyParen"), sort("StrategyMid")]
                  )
                )
              , context-free-syntax(
                  [ prod(
                      [lit("\"(\""), sort("Strategy"), lit("\")\"")]
                    , sort("StrategyParen")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"ParenStrat\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"fail\"")]
                    , sort("Strategy")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"Fail\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"id\"")]
                    , sort("Strategy")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"Id\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ lit("\"proceed\"")
                      , lit("\"(\"")
                      , iter-star-sep(sort("Strategy"), lit("\",\""))
                      , lit("\"|\"")
                      , iter-star-sep(sort("Term"), lit("\",\""))
                      , lit("\")\"")
                      ]
                    , sort("Strategy")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"ProceedT\""))]))
                          )
                        , prefer()
                        ]
                      )
                    )
                  , prod(
                      [lit("\"proceed\"")]
                    , sort("Strategy")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"ProceedNoArgs\""))]))
                          )
                        , prefer()
                        ]
                      )
                    )
                  , prod(
                      [lit("\"?\""), sort("Term")]
                    , sort("Strategy")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"Match\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"!\""), sort("Term")]
                    , sort("Strategy")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"Build\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ lit("\"{\"")
                      , iter-star-sep(sort("ID"), lit("\",\""))
                      , lit("\":\"")
                      , sort("Strategy")
                      , lit("\"}\"")
                      ]
                    , sort("Strategy")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"Scope\""))]))
                         )]
                      )
                    )
                  , prod(
                      [sort("Strategy"), lit("\";\""), sort("Strategy")]
                    , sort("Strategy")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"Seq\""))]))
                          )
                        , assoc(right())
                        ]
                      )
                    )
                  , prod(
                      [ sort("Strategy")
                      , lit("\"<\"")
                      , sort("StrategyMid")
                      , lit("\"+\"")
                      , sort("Strategy")
                      ]
                    , sort("Strategy")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"GuardedLChoice\""))]))
                          )
                        , assoc(right())
                        ]
                      )
                    )
                  , prod([sort("Strategy")], sort("StrategyMid"), no-attrs())
                  , prod(
                      [ lit("\"prim\"")
                      , lit("\"(\"")
                      , sort("String")
                      , lit("\",\"")
                      , iter-star-sep(sort("Strategy"), lit("\",\""))
                      , lit("\"|\"")
                      , iter-star-sep(sort("Term"), lit("\",\""))
                      , lit("\")\"")
                      ]
                    , sort("Strategy")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"PrimT\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"some\""), lit("\"(\""), sort("Strategy"), lit("\")\"")]
                    , sort("Strategy")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"Some\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"one\""), lit("\"(\""), sort("Strategy"), lit("\")\"")]
                    , sort("Strategy")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"One\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"all\""), lit("\"(\""), sort("Strategy"), lit("\")\"")]
                    , sort("Strategy")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"All\""))]))
                         )]
                      )
                    )
                  ]
                )
              )
            , context-free-priorities(
                [ chain(
                    [ prods-group(
                        [ prod(
                            [lit("\"!\""), sort("Term")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Build\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"?\""), sort("Term")]
                          , sort("Strategy")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Match\""))]))
                               )]
                            )
                          )
                        ]
                      )
                    , simple-group(
                        prod(
                          [sort("Strategy"), lit("\";\""), sort("Strategy")]
                        , sort("Strategy")
                        , attrs(
                            [ term(
                                default(appl(unquoted("cons"), [fun(quoted("\"Seq\""))]))
                              )
                            , assoc(right())
                            ]
                          )
                        )
                      )
                    , assoc-group(
                        right()
                      , [ prod(
                            [ sort("Strategy")
                            , lit("\"<\"")
                            , sort("StrategyMid")
                            , lit("\"+\"")
                            , sort("Strategy")
                            ]
                          , sort("Strategy")
                          , attrs(
                              [ term(
                                  default(appl(unquoted("cons"), [fun(quoted("\"GuardedLChoice\""))]))
                                )
                              , assoc(right())
                              ]
                            )
                          )
                        ]
                      )
                    ]
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"import-term\""), lit("\"(\""), sort("ModName"), lit("\")\"")]
                , sort("Strategy")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ImportTerm\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Core-Modules")
    , [ imports(
          [module(unparameterized("Stratego-Core-Identifiers")), module(unparameterized("Stratego-Core-Strategies")), module(unparameterized("Stratego-Core-Signatures"))]
        )
      ]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      sorts([sort("Module")])
                    , context-free-syntax(
                        [ prod(
                            [lit("\"module\""), sort("ModName"), iter-star(sort("Decl"))]
                          , sort("Module")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Module\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"specification\""), iter-star(sort("Decl"))]
                          , sort("Module")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Specification\""))]))
                               )]
                            )
                          )
                        ]
                      )
                    )
                  , sorts([sort("Decl")])
                  )
                , context-free-syntax(
                    [ prod(
                        [lit("\"imports\""), iter-star(sort("ImportModName"))]
                      , sort("Decl")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"Imports\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"strategies\""), iter-star(sort("Def"))]
                      , sort("Decl")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"Strategies\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"signature\""), iter-star(sort("Sdecl"))]
                      , sort("Decl")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"Signature\""))]))
                           )]
                        )
                      )
                    ]
                  )
                )
              , sorts([sort("ImportModName")])
              )
            , context-free-syntax(
                [ prod(
                    [sort("ModName")]
                  , sort("ImportModName")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Import\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , syntax(
              [ prod(
                  [cf(sort("ModName")), lit("\"/\""), lit("\"-\"")]
                , cf(sort("ImportModName"))
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ImportWildcard\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-Modules")
    , [ imports(
          [ module(unparameterized("Stratego-Core-Modules"))
          , module(unparameterized("Stratego-Sugar-Strategies"))
          , module(unparameterized("Stratego-Sugar-Signatures"))
          , module(unparameterized("Stratego-Sugar-Overlays"))
          , module(unparameterized("Stratego-Sugar-Rules"))
          ]
        )
      ]
    , [ exports(
          conc-grammars(
            sorts([sort("Decl"), sort("Def")])
          , context-free-syntax(
              [ prod(
                  [lit("\"rules\""), iter-star(sort("Def"))]
                , sort("Decl")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Rules\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"overlays\""), iter-star(sort("Overlay"))]
                , sort("Decl")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Overlays\""))]))
                     )]
                  )
                )
              , prod([sort("RuleDef")], sort("Def"), no-attrs())
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-StringQuotations")
    , []
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts(
                  [ sort("StringQuotation")
                  , sort("StringQuotedPart1")
                  , sort("StringQuotedChars1")
                  , sort("DollarOpen1")
                  , sort("DollarClose1")
                  , sort("QuotedBracket1")
                  , sort("Dollar1")
                  , sort("StringQuotedPart2")
                  , sort("StringQuotedChars2")
                  , sort("DollarOpen2")
                  , sort("DollarClose2")
                  , sort("QuotedBracket2")
                  , sort("Dollar2")
                  , sort("StringQuotedPart3")
                  , sort("StringQuotedChars3")
                  , sort("DollarOpen3")
                  , sort("DollarClose3")
                  , sort("QuotedBracket3")
                  , sort("Dollar3")
                  , sort("StringQuotedPart4")
                  , sort("StringQuotedChars4")
                  , sort("DollarOpen4")
                  , sort("DollarClose4")
                  , sort("QuotedBracket4")
                  , sort("Dollar4")
                  , sort("Padding")
                  ]
                )
              , context-free-syntax(
                  [prod([sort("StringQuotation")], sort("PreTerm"), no-attrs())]
                )
              )
            , syntax(
                [ prod([sort("StringQuotation")], cf(sort("PreTerm")), no-attrs())
                , prod(
                    [ lit("\"$\"")
                    , lit("\"[\"")
                    , sort("Padding")
                    , iter-star(sort("StringQuotedPart1"))
                    , lit("\"]\"")
                    ]
                  , sort("StringQuotation")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"StringQuotation1\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("Padding")
                    , lit("\"[\"")
                    , cf(opt(layout()))
                    , cf(sort("Term"))
                    , cf(opt(layout()))
                    , lit("\"]\"")
                    ]
                  , sort("StringQuotedPart1")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"StringEscape1\""))]))
                       )]
                    )
                  )
                , prod(
                    [lex(sort("StringQuotedChars1"))]
                  , sort("StringQuotedPart1")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QStr\""))]))
                       )]
                    )
                  )
                , prod(
                    [lex(sort("Dollar1"))]
                  , sort("StringQuotedPart1")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QDollar\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"$\""), lex(sort("QuotedBracket1")), lit("\"$\"")]
                  , sort("StringQuotedPart1")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QBr\""))]))
                       )]
                    )
                  )
                , prod(
                    [ iter(
                        char-class(
                          comp(
                            simple-charclass(
                              present(
                                conc(short("\\["), conc(short("\\]"), short("\\$")))
                              )
                            )
                          )
                        )
                      )
                    ]
                  , lex(sort("StringQuotedChars1"))
                  , no-attrs()
                  )
                , prod(
                    [char-class(simple-charclass(present(conc(short("\\["), short("\\]")))))]
                  , lex(sort("QuotedBracket1"))
                  , no-attrs()
                  )
                , prod([lit("\"$\"")], lex(sort("Dollar1")), no-attrs())
                , prod(
                    [ lit("\"$\"")
                    , lit("\"{\"")
                    , sort("Padding")
                    , iter-star(sort("StringQuotedPart2"))
                    , lit("\"}\"")
                    ]
                  , sort("StringQuotation")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"StringQuotation2\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("Padding")
                    , lit("\"{\"")
                    , cf(opt(layout()))
                    , cf(sort("Term"))
                    , cf(opt(layout()))
                    , lit("\"}\"")
                    ]
                  , sort("StringQuotedPart2")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"StringEscape2\""))]))
                       )]
                    )
                  )
                , prod(
                    [lex(sort("StringQuotedChars2"))]
                  , sort("StringQuotedPart2")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QStr\""))]))
                       )]
                    )
                  )
                , prod(
                    [lex(sort("Dollar2"))]
                  , sort("StringQuotedPart2")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QDollar\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"$\""), lex(sort("QuotedBracket2")), lit("\"$\"")]
                  , sort("StringQuotedPart2")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QBr\""))]))
                       )]
                    )
                  )
                , prod(
                    [ iter(
                        char-class(
                          comp(
                            simple-charclass(
                              present(
                                conc(short("\\{"), conc(short("\\}"), short("\\$")))
                              )
                            )
                          )
                        )
                      )
                    ]
                  , lex(sort("StringQuotedChars2"))
                  , no-attrs()
                  )
                , prod(
                    [char-class(simple-charclass(present(conc(short("\\{"), short("\\}")))))]
                  , lex(sort("QuotedBracket2"))
                  , no-attrs()
                  )
                , prod([lit("\"$\"")], lex(sort("Dollar2")), no-attrs())
                , prod(
                    [ lit("\"$\"")
                    , lit("\"(\"")
                    , sort("Padding")
                    , iter-star(sort("StringQuotedPart3"))
                    , lit("\")\"")
                    ]
                  , sort("StringQuotation")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"StringQuotation3\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("Padding")
                    , lit("\"(\"")
                    , cf(opt(layout()))
                    , cf(sort("Term"))
                    , cf(opt(layout()))
                    , lit("\")\"")
                    ]
                  , sort("StringQuotedPart3")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"StringEscape3\""))]))
                       )]
                    )
                  )
                , prod(
                    [lex(sort("StringQuotedChars3"))]
                  , sort("StringQuotedPart3")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QStr\""))]))
                       )]
                    )
                  )
                , prod(
                    [lex(sort("Dollar3"))]
                  , sort("StringQuotedPart3")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QDollar\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"$\""), lex(sort("QuotedBracket3")), lit("\"$\"")]
                  , sort("StringQuotedPart3")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QBr\""))]))
                       )]
                    )
                  )
                , prod(
                    [ iter(
                        char-class(
                          comp(
                            simple-charclass(
                              present(
                                conc(short("\\("), conc(short("\\)"), short("\\$")))
                              )
                            )
                          )
                        )
                      )
                    ]
                  , lex(sort("StringQuotedChars3"))
                  , no-attrs()
                  )
                , prod(
                    [char-class(simple-charclass(present(conc(short("\\("), short("\\)")))))]
                  , lex(sort("QuotedBracket3"))
                  , no-attrs()
                  )
                , prod([lit("\"$\"")], lex(sort("Dollar3")), no-attrs())
                , prod(
                    [ lit("\"$\"")
                    , lit("\"<\"")
                    , sort("Padding")
                    , iter-star(sort("StringQuotedPart4"))
                    , lit("\">\"")
                    ]
                  , sort("StringQuotation")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"StringQuotation4\""))]))
                       )]
                    )
                  )
                , prod(
                    [ sort("Padding")
                    , lit("\"<\"")
                    , cf(opt(layout()))
                    , cf(sort("Term"))
                    , cf(opt(layout()))
                    , lit("\">\"")
                    ]
                  , sort("StringQuotedPart4")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"StringEscape4\""))]))
                       )]
                    )
                  )
                , prod(
                    [lex(sort("StringQuotedChars4"))]
                  , sort("StringQuotedPart4")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QStr\""))]))
                       )]
                    )
                  )
                , prod(
                    [lex(sort("Dollar4"))]
                  , sort("StringQuotedPart4")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QDollar\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"$\""), lex(sort("QuotedBracket4")), lit("\"$\"")]
                  , sort("StringQuotedPart4")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"QBr\""))]))
                       )]
                    )
                  )
                , prod(
                    [ iter(
                        char-class(
                          comp(
                            simple-charclass(
                              present(
                                conc(short("\\<"), conc(short("\\>"), short("\\$")))
                              )
                            )
                          )
                        )
                      )
                    ]
                  , lex(sort("StringQuotedChars4"))
                  , no-attrs()
                  )
                , prod(
                    [char-class(simple-charclass(present(conc(short("\\<"), short("\\>")))))]
                  , lex(sort("QuotedBracket4"))
                  , no-attrs()
                  )
                , prod([lit("\"$\"")], lex(sort("Dollar4")), no-attrs())
                , prod([lex(sort("Padding"))], sort("Padding"), no-attrs())
                , prod(
                    []
                  , lex(sort("Padding"))
                  , attrs([term(default(fun(unquoted("indentpadding"))))])
                  )
                ]
              )
            )
          , lexical-restrictions(
              [ follow(
                  [sort("StringQuotedChars1")]
                , single(
                    char-class(
                      comp(
                        simple-charclass(
                          present(
                            conc(short("\\["), conc(short("\\]"), short("\\$")))
                          )
                        )
                      )
                    )
                  )
                )
              , follow(
                  [sort("StringQuotedChars2")]
                , single(
                    char-class(
                      comp(
                        simple-charclass(
                          present(
                            conc(short("\\{"), conc(short("\\}"), short("\\$")))
                          )
                        )
                      )
                    )
                  )
                )
              , follow(
                  [sort("StringQuotedChars3")]
                , single(
                    char-class(
                      comp(
                        simple-charclass(
                          present(
                            conc(short("\\("), conc(short("\\)"), short("\\$")))
                          )
                        )
                      )
                    )
                  )
                )
              , follow(
                  [sort("StringQuotedChars4")]
                , single(
                    char-class(
                      comp(
                        simple-charclass(
                          present(
                            conc(short("\\<"), conc(short("\\>"), short("\\$")))
                          )
                        )
                      )
                    )
                  )
                )
              , follow(
                  [sort("Dollar1")]
                , single(
                    seq(
                      simple-charclass(present(conc(short("\\["), short("\\]"))))
                    , single(char-class(simple-charclass(present(short("\\$")))))
                    )
                  )
                )
              , follow(
                  [sort("Dollar2")]
                , single(
                    seq(
                      simple-charclass(present(conc(short("\\{"), short("\\}"))))
                    , single(char-class(simple-charclass(present(short("\\$")))))
                    )
                  )
                )
              , follow(
                  [sort("Dollar3")]
                , single(
                    seq(
                      simple-charclass(present(conc(short("\\("), short("\\)"))))
                    , single(char-class(simple-charclass(present(short("\\$")))))
                    )
                  )
                )
              , follow(
                  [sort("Dollar4")]
                , single(
                    seq(
                      simple-charclass(present(conc(short("\\<"), short("\\>"))))
                    , single(char-class(simple-charclass(present(short("\\$")))))
                    )
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Core-Constants")
    , []
    , [ exports(
          conc-grammars(
            sorts(
              [sort("Int"), sort("Real"), sort("String"), sort("StrChar")]
            )
          , lexical-syntax(
              [ prod(
                  [ opt(char-class(simple-charclass(present(short("\\-")))))
                  , iter(
                      char-class(simple-charclass(present(range(short("0"), short("9")))))
                    )
                  ]
                , sort("Int")
                , no-attrs()
                )
              , prod(
                  [ opt(char-class(simple-charclass(present(short("\\-")))))
                  , iter(
                      char-class(simple-charclass(present(range(short("0"), short("9")))))
                    )
                  , char-class(simple-charclass(present(short("\\."))))
                  , iter(
                      char-class(simple-charclass(present(range(short("0"), short("9")))))
                    )
                  ]
                , sort("Real")
                , no-attrs()
                )
              , prod(
                  [lit("\"\\\"\""), iter-star(sort("StrChar")), lit("\"\\\"\"")]
                , sort("String")
                , no-attrs()
                )
              , prod(
                  [char-class(
                     comp(simple-charclass(present(conc(short("\\\""), short("\\\\")))))
                   )]
                , sort("StrChar")
                , no-attrs()
                )
              , prod(
                  [ char-class(simple-charclass(present(short("\\\\"))))
                  , char-class(
                      simple-charclass(
                        present(
                          conc(
                            short("\\\"")
                          , conc(
                              short("t")
                            , conc(short("n"), conc(short("r"), short("\\\\")))
                            )
                          )
                        )
                      )
                    )
                  ]
                , sort("StrChar")
                , no-attrs()
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-Constants")
    , [ imports(
          [module(unparameterized("Stratego-Core-Identifiers")), module(unparameterized("Stratego-Core-Constants")), module(unparameterized("Stratego-Sugar-StringQuotations"))]
        )
      ]
    , [ exports(
          conc-grammars(
            sorts([sort("Char"), sort("CharChar")])
          , lexical-syntax(
              [ prod(
                  [lit("\"'\""), sort("CharChar"), lit("\"'\"")]
                , sort("Char")
                , no-attrs()
                )
              , prod(
                  [char-class(comp(simple-charclass(present(short("\\'")))))]
                , sort("CharChar")
                , no-attrs()
                )
              , prod(
                  [ char-class(simple-charclass(present(short("\\\\"))))
                  , char-class(
                      simple-charclass(
                        present(
                          conc(
                            short("\\'")
                          , conc(
                              short("n")
                            , conc(short("t"), conc(short("r"), short("\\ ")))
                            )
                          )
                        )
                      )
                    )
                  ]
                , sort("CharChar")
                , no-attrs()
                )
              , prod(
                  [sort("Char")]
                , sort("Id")
                , attrs([reject()])
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Core-Identifiers")
    , []
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      conc-grammars(
                        conc-grammars(
                          conc-grammars(
                            conc-grammars(
                              conc-grammars(
                                sorts([sort("ModName"), sort("ModNamePart")])
                              , lexical-syntax(
                                  [ prod(
                                      [iter-sep(sort("ModNamePart"), lit("\"/\""))]
                                    , sort("ModName")
                                    , no-attrs()
                                    )
                                  , prod(
                                      [ char-class(
                                          simple-charclass(
                                            present(
                                              conc(
                                                range(short("a"), short("z"))
                                              , conc(
                                                  range(short("A"), short("Z"))
                                                , conc(short("\\."), short("\\_"))
                                                )
                                              )
                                            )
                                          )
                                        )
                                      , iter-star(
                                          char-class(
                                            simple-charclass(
                                              present(
                                                conc(
                                                  range(short("a"), short("z"))
                                                , conc(
                                                    range(short("A"), short("Z"))
                                                  , conc(
                                                      range(short("0"), short("9"))
                                                    , conc(
                                                        short("\\'")
                                                      , conc(short("\\."), conc(short("\\-"), short("\\_")))
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      ]
                                    , sort("ModNamePart")
                                    , no-attrs()
                                    )
                                  ]
                                )
                              )
                            , lexical-restrictions(
                                [ follow(
                                    [sort("ModName")]
                                  , single(
                                      char-class(
                                        simple-charclass(
                                          present(
                                            conc(
                                              range(short("a"), short("z"))
                                            , conc(
                                                range(short("A"), short("Z"))
                                              , conc(
                                                  range(short("0"), short("9"))
                                                , conc(
                                                    short("\\'")
                                                  , conc(short("\\."), conc(short("\\-"), short("\\_")))
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                ]
                              )
                            )
                          , lexical-syntax(
                              [ prod(
                                  [lit("\"imports\"")]
                                , sort("ModName")
                                , attrs([reject()])
                                )
                              , prod(
                                  [lit("\"overlays\"")]
                                , sort("ModName")
                                , attrs([reject()])
                                )
                              , prod(
                                  [lit("\"rules\"")]
                                , sort("ModName")
                                , attrs([reject()])
                                )
                              , prod(
                                  [lit("\"signature\"")]
                                , sort("ModName")
                                , attrs([reject()])
                                )
                              , prod(
                                  [lit("\"strategies\"")]
                                , sort("ModName")
                                , attrs([reject()])
                                )
                              ]
                            )
                          )
                        , sorts(
                            [ sort("Id")
                            , sort("LId")
                            , sort("LCID")
                            , sort("UCID")
                            , sort("Wld")
                            ]
                          )
                        )
                      , lexical-syntax(
                          [ prod(
                              [ char-class(
                                  simple-charclass(
                                    present(
                                      conc(
                                        range(short("a"), short("z"))
                                      , conc(range(short("A"), short("Z")), short("\\_"))
                                      )
                                    )
                                  )
                                )
                              , iter-star(
                                  char-class(
                                    simple-charclass(
                                      present(
                                        conc(
                                          range(short("a"), short("z"))
                                        , conc(
                                            range(short("A"), short("Z"))
                                          , conc(
                                              range(short("0"), short("9"))
                                            , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              ]
                            , sort("Id")
                            , no-attrs()
                            )
                          , prod(
                              [ char-class(
                                  simple-charclass(
                                    present(
                                      conc(
                                        range(short("a"), short("z"))
                                      , conc(range(short("A"), short("Z")), short("\\_"))
                                      )
                                    )
                                  )
                                )
                              , iter-star(
                                  char-class(
                                    simple-charclass(
                                      present(
                                        conc(
                                          range(short("a"), short("z"))
                                        , conc(
                                            range(short("A"), short("Z"))
                                          , conc(
                                              range(short("0"), short("9"))
                                            , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              , lit("\"*\"")
                              ]
                            , sort("LId")
                            , no-attrs()
                            )
                          , prod(
                              [ char-class(simple-charclass(present(short("\\'"))))
                              , iter(
                                  char-class(simple-charclass(present(range(short("a"), short("z")))))
                                )
                              ]
                            , sort("Id")
                            , no-attrs()
                            )
                          , prod(
                              [ char-class(simple-charclass(present(range(short("a"), short("z")))))
                              , iter-star(
                                  char-class(
                                    simple-charclass(
                                      present(
                                        conc(
                                          range(short("a"), short("z"))
                                        , conc(
                                            range(short("A"), short("Z"))
                                          , conc(
                                              range(short("0"), short("9"))
                                            , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              ]
                            , sort("LCID")
                            , no-attrs()
                            )
                          , prod(
                              [ char-class(simple-charclass(present(range(short("A"), short("Z")))))
                              , iter-star(
                                  char-class(
                                    simple-charclass(
                                      present(
                                        conc(
                                          range(short("a"), short("z"))
                                        , conc(
                                            range(short("A"), short("Z"))
                                          , conc(
                                              range(short("0"), short("9"))
                                            , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              ]
                            , sort("UCID")
                            , no-attrs()
                            )
                          ]
                        )
                      )
                    , lexical-restrictions(
                        [ follow(
                            [sort("Id")]
                          , single(
                              char-class(
                                simple-charclass(
                                  present(
                                    conc(
                                      range(short("a"), short("z"))
                                    , conc(
                                        range(short("A"), short("Z"))
                                      , conc(
                                          range(short("0"), short("9"))
                                        , conc(short("\\'"), conc(short("\\_"), short("\\*")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        , follow(
                            [sort("Id")]
                          , single(
                              seq(
                                simple-charclass(present(short("\\-")))
                              , single(char-class(comp(simple-charclass(present(short("\\>"))))))
                              )
                            )
                          )
                        , follow(
                            [sort("LId")]
                          , single(
                              char-class(
                                simple-charclass(
                                  present(
                                    conc(
                                      range(short("a"), short("z"))
                                    , conc(
                                        range(short("A"), short("Z"))
                                      , conc(
                                          range(short("0"), short("9"))
                                        , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        , follow(
                            [sort("LCID")]
                          , single(
                              char-class(
                                simple-charclass(
                                  present(
                                    conc(
                                      range(short("a"), short("z"))
                                    , conc(
                                        range(short("A"), short("Z"))
                                      , conc(
                                          range(short("0"), short("9"))
                                        , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        , follow(
                            [sort("UCID")]
                          , single(
                              char-class(
                                simple-charclass(
                                  present(
                                    conc(
                                      range(short("a"), short("z"))
                                    , conc(
                                        range(short("A"), short("Z"))
                                      , conc(
                                          range(short("0"), short("9"))
                                        , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        ]
                      )
                    )
                  , lexical-syntax(
                      [ prod(
                          [lit("\"_\"")]
                        , sort("Id")
                        , attrs([reject()])
                        )
                      , prod(
                          [lit("\"'\"")]
                        , sort("Id")
                        , attrs([reject()])
                        )
                      , prod(
                          [sort("Keyword")]
                        , sort("Id")
                        , attrs([reject()])
                        )
                      , prod(
                          [sort("Keyword")]
                        , sort("LId")
                        , attrs([reject()])
                        )
                      , prod(
                          [sort("Keyword")]
                        , sort("LCID")
                        , attrs([reject()])
                        )
                      , prod(
                          [sort("Keyword")]
                        , sort("UCID")
                        , attrs([reject()])
                        )
                      ]
                    )
                  )
                , lexical-restrictions(
                    [ follow(
                        [ lit("\"all\"")
                        , lit("\"case\"")
                        , lit("\"constructors\"")
                        , lit("\"else\"")
                        , lit("\"end\"")
                        , lit("\"external\"")
                        , lit("\"fail\"")
                        , lit("\"id\"")
                        , lit("\"if\"")
                        , lit("\"in\"")
                        , lit("\"imports\"")
                        , lit("\"let\"")
                        , lit("\"module\"")
                        , lit("\"not\"")
                        , lit("\"one\"")
                        , lit("\"overlays\"")
                        , lit("\"otherwise\"")
                        , lit("\"prim\"")
                        , lit("\"rec\"")
                        , lit("\"rules\"")
                        , lit("\"script\"")
                        , lit("\"signature\"")
                        , lit("\"some\"")
                        , lit("\"sorts\"")
                        , lit("\"strategies\"")
                        , lit("\"stratego\"")
                        , lit("\"switch\"")
                        , lit("\"test\"")
                        , lit("\"then\"")
                        , lit("\"where\"")
                        , lit("\"import-term\"")
                        ]
                      , single(
                          char-class(
                            simple-charclass(
                              present(
                                conc(
                                  range(short("a"), short("z"))
                                , conc(
                                    range(short("A"), short("Z"))
                                  , conc(
                                      range(short("0"), short("9"))
                                    , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    ]
                  )
                )
              , context-free-restrictions(
                  [ follow(
                      [sort("Wld")]
                    , single(
                        char-class(
                          simple-charclass(
                            present(
                              conc(
                                range(short("a"), short("z"))
                              , conc(
                                  range(short("A"), short("Z"))
                                , conc(
                                    range(short("0"), short("9"))
                                  , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              )
            , sorts([sort("Keyword")])
            )
          , lexical-syntax(
              [ prod([lit("\"all\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"constructors\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"fail\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"id\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"in\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"let\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"module\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"not\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"one\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"overlays\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"prim\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"rules\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"script\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"signature\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"some\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"sorts\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"strategies\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"stratego\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"test\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"where\"")], sort("Keyword"), no-attrs())
              , prod([lit("\"import-term\"")], sort("Keyword"), no-attrs())
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Core-Layout")
    , []
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  sorts(
                    [ sort("Ws")
                    , sort("ShortCom")
                    , sort("LongCom")
                    , sort("CommChar")
                    , sort("Asterisk")
                    , sort("Eof")
                    ]
                  )
                , lexical-syntax(
                    [ prod(
                        [ char-class(
                            simple-charclass(
                              present(
                                conc(
                                  short("\\t")
                                , conc(short("\\ "), conc(short("\\n"), short("\\r")))
                                )
                              )
                            )
                          )
                        ]
                      , sort("Ws")
                      , no-attrs()
                      )
                    , prod(
                        [ lit("\"//\"")
                        , iter-star(char-class(comp(simple-charclass(present(short("\\n"))))))
                        , alt(char-class(simple-charclass(present(short("\\n")))), sort("Eof"))
                        ]
                      , sort("ShortCom")
                      , no-attrs()
                      )
                    , prod(
                        [lit("\"/*\""), iter-star(sort("CommChar")), lit("\"*/\"")]
                      , sort("LongCom")
                      , no-attrs()
                      )
                    , prod([], sort("Eof"), no-attrs())
                    , prod(
                        [char-class(comp(simple-charclass(present(short("\\*")))))]
                      , sort("CommChar")
                      , no-attrs()
                      )
                    , prod([lit("\"*\"")], sort("Asterisk"), no-attrs())
                    , prod([sort("Asterisk")], sort("CommChar"), no-attrs())
                    ]
                  )
                )
              , lexical-restrictions(
                  [ follow(
                      [sort("Asterisk")]
                    , single(char-class(simple-charclass(present(short("\\/")))))
                    )
                  , follow(
                      [sort("Eof")]
                    , single(char-class(comp(simple-charclass(absent()))))
                    )
                  ]
                )
              )
            , lexical-syntax(
                [ prod([sort("ShortCom")], layout(), no-attrs())
                , prod([sort("LongCom")], layout(), no-attrs())
                , prod([sort("Ws")], layout(), no-attrs())
                ]
              )
            )
          , context-free-restrictions(
              [ follow(
                  [opt(layout())]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            short("\\ ")
                          , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                          )
                        )
                      )
                    )
                  )
                )
              , follow(
                  [opt(layout())]
                , single(
                    seq(
                      simple-charclass(present(short("\\/")))
                    , single(char-class(simple-charclass(present(short("\\*")))))
                    )
                  )
                )
              , follow(
                  [opt(layout())]
                , single(
                    seq(
                      simple-charclass(present(short("\\/")))
                    , single(char-class(simple-charclass(present(short("\\/")))))
                    )
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Stratego-Sugar-Layout")
    , [imports([module(unparameterized("Stratego-Core-Layout"))])]
    , []
    )
  , module(
      unparameterized("Stratego-Sugar")
    , [ imports(
          [ module(unparameterized("Stratego-Sugar-Layout"))
          , module(unparameterized("Stratego-Core-Identifiers"))
          , module(unparameterized("Stratego-Sugar-Constants"))
          , module(unparameterized("Stratego-Sugar-Modules"))
          , module(unparameterized("Stratego-Sugar-Signatures"))
          , module(unparameterized("Stratego-Sugar-Terms"))
          , module(unparameterized("Stratego-Sugar-Strategies"))
          , module(unparameterized("Stratego-Sugar-Rules"))
          , module(unparameterized("Stratego-Sugar-DynamicRules"))
          , module(unparameterized("Stratego-Sugar-Overlays"))
          ]
        )
      ]
    , [hiddens(context-free-start-symbols([sort("Module")]))]
    )
  , module(
      unparameterized("Stratego-Attributes")
    , [imports([module(unparameterized("Stratego-Sugar")), module(unparameterized("ResultTerms"))])]
    , [ hiddens(context-free-start-symbols([sort("Module"), sort("Decl")]))
      , exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      conc-grammars(
                        conc-grammars(
                          conc-grammars(
                            conc-grammars(
                              sorts(
                                [ sort("DefType")
                                , sort("Pattern")
                                , sort("ADef")
                                , sort("AttributeDef")
                                , sort("AttributeRef")
                                , sort("AttributeCall")
                                , sort("AttributeCallLHS")
                                , sort("AttributeDecl")
                                , sort("AttributeType")
                                , sort("AttributeTypeNoSort")
                                , sort("DecoratorRef")
                                , sort("DecoratorRefNoArgs")
                                , sort("DecoratorId")
                                , sort("AttributeKeyword")
                                , sort("ChildDot")
                                , sort("DotChild")
                                , sort("AttributeId")
                                , sort("AttributeDeclId")
                                , sort("OptChildDot")
                                , sort("OptDotChild")
                                , sort("OptSortDot")
                                , sort("NoSortDot")
                                , sort("AttributeNameValue")
                                , sort("NameDefBlockDef")
                                , sort("PatternDefBlockDef")
                                , sort("Where")
                                , sort("NoWhere")
                                , sort("UNDEFINED")
                                ]
                              )
                            , lexical-syntax(
                                [ prod([lit("\"all\"")], sort("AttributeId"), no-attrs())
                                , prod([lit("\"one\"")], sort("AttributeId"), no-attrs())
                                , prod([lit("\"some\"")], sort("AttributeId"), no-attrs())
                                , prod([lit("\"test\"")], sort("AttributeId"), no-attrs())
                                , prod([lit("\"in\"")], sort("AttributeId"), no-attrs())
                                , prod([lit("\"signature\"")], sort("AttributeId"), no-attrs())
                                ]
                              )
                            )
                          , context-free-restrictions(
                              [ follow(
                                  [sort("AttributeId")]
                                , single(
                                    char-class(
                                      simple-charclass(
                                        present(
                                          conc(
                                            range(short("a"), short("z"))
                                          , conc(
                                              range(short("A"), short("Z"))
                                            , conc(
                                                range(short("0"), short("9"))
                                              , conc(
                                                  short("\\'")
                                                , conc(short("\\-"), conc(short("\\_"), short("\\*")))
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              , follow(
                                  [sort("DecoratorRefNoArgs")]
                                , single(char-class(simple-charclass(present(short("\\(")))))
                                )
                              ]
                            )
                          )
                        , context-free-syntax(
                            [ prod(
                                [sort("Id")]
                              , sort("AttributeId")
                              , attrs([prefer()])
                              )
                            , prod([sort("AttributeId")], sort("AttributeDeclId"), no-attrs())
                            , prod(
                                [sort("AttributeKeyword")]
                              , sort("AttributeDeclId")
                              , attrs([reject()])
                              )
                            , prod([sort("AttributeId")], sort("DecoratorId"), no-attrs())
                            , prod([lit("\"*\"")], sort("DecoratorId"), no-attrs())
                            , prod(
                                [lit("\"plain\"")]
                              , sort("DecoratorId")
                              , attrs([prefer()])
                              )
                            , prod(
                                [sort("AttributeKeyword")]
                              , sort("DecoratorId")
                              , attrs([reject()])
                              )
                            ]
                          )
                        )
                      , context-free-syntax(
                          [ prod(
                              [ sort("AttributeDeclId")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Typedid"), lit("\",\""))
                              , lit("\"|\"")
                              , iter-star-sep(sort("Term"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("AttributeDecl")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"Attribute\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("AttributeDeclId")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Typedid"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("AttributeDecl")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"AttributeNoTerms\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [sort("AttributeDeclId")]
                            , sort("AttributeDecl")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"AttributeNoArgs\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("AttributeId")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Typedid"), lit("\",\""))
                              , lit("\"|\"")
                              , iter-star-sep(sort("Term"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("AttributeDef")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"Attribute\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("AttributeId")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Typedid"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("AttributeDef")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"AttributeNoTerms\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [sort("AttributeId")]
                            , sort("AttributeDef")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"AttributeNoArgs\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("AttributeId")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Strategy"), lit("\",\""))
                              , lit("\"|\"")
                              , iter-star-sep(sort("Term"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("AttributeRef")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"Attribute\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("AttributeId")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Strategy"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("AttributeRef")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"AttributeNoTerms\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [sort("AttributeId")]
                            , sort("AttributeRef")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"AttributeNoArgs\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("DecoratorId")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Strategy"), lit("\",\""))
                              , lit("\"|\"")
                              , iter-star-sep(sort("Term"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("DecoratorRef")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"Decorator\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ sort("DecoratorId")
                              , lit("\"(\"")
                              , iter-star-sep(sort("Strategy"), lit("\",\""))
                              , lit("\")\"")
                              ]
                            , sort("DecoratorRef")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"DecoratorNoTerms\""))]))
                                 )]
                              )
                            )
                          , prod([sort("DecoratorRefNoArgs")], sort("DecoratorRef"), no-attrs())
                          , prod(
                              [sort("DecoratorId")]
                            , sort("DecoratorRefNoArgs")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"DecoratorNoArgs\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [sort("AttributeCallLHS"), lit("\".\""), sort("AttributeRef")]
                            , sort("AttributeCall")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"AttributeRef\""))]))
                                 )]
                              )
                            )
                          , prod([sort("Term")], sort("AttributeCallLHS"), no-attrs())
                          , prod(
                              [lit("\"<\""), sort("Strategy"), lit("\">\""), sort("Term")]
                            , sort("AttributeCallLHS")
                            , attrs([reject()])
                            )
                          , prod(
                              [sort("AttributeCall")]
                            , sort("Strategy")
                            , attrs([prefer()])
                            )
                          , prod(
                              [sort("AttributeCall")]
                            , sort("PreTerm")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"AttributeTerm\""))]))
                                 )]
                              )
                            )
                          ]
                        )
                      )
                    , context-free-syntax(
                        [ prod(
                            [lit("\"attributes\""), iter-star(sort("ADef"))]
                          , sort("Decl")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Attributes\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("AttributeType"), iter-sep(sort("AttributeDecl"), lit("\",\""))]
                          , sort("ADef")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"ADecl\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("AttributeTypeNoSort"), sort("Pattern"), lit("\".\""), sort("AttributeNameValue")]
                          , sort("ADef")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"ADef\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("DefType"), iter-star(sort("DecoratorRef")), sort("OptSortDot")]
                          , sort("AttributeType")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Type\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("DefType"), iter-star(sort("DecoratorRef")), sort("NoSortDot")]
                          , sort("AttributeTypeNoSort")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Type\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("OptChildDot"), sort("AttributeDef"), lit("\"=\""), sort("Strategy")]
                          , sort("AttributeNameValue")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"ADefStrategy\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"eq\"")]
                          , sort("DefType")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Eq\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"def\"")]
                          , sort("DefType")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Def\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"decorator\"")]
                          , sort("DefType")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Decorator\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("Id"), lit("\".\"")]
                          , sort("ChildDot")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Child\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\".\""), sort("Id")]
                          , sort("DotChild")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"DotChild\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"id\""), lit("\".\"")]
                          , sort("ChildDot")
                          , attrs(
                              [ term(
                                  default(appl(unquoted("cons"), [fun(quoted("\"IdChild\""))]))
                                )
                              , prefer()
                              ]
                            )
                          )
                        , prod(
                            [lit("\".\""), lit("\"id\"")]
                          , sort("DotChild")
                          , attrs(
                              [ term(
                                  default(appl(unquoted("cons"), [fun(quoted("\"DotIdChild\""))]))
                                )
                              , prefer()
                              ]
                            )
                          )
                        , prod(
                            [lit("\"root\""), lit("\".\"")]
                          , sort("ChildDot")
                          , attrs([reject()])
                          )
                        , prod(
                            [lit("\".\""), lit("\"root\"")]
                          , sort("DotChild")
                          , attrs([reject()])
                          )
                        , prod([sort("ChildDot")], sort("OptChildDot"), no-attrs())
                        , prod(
                            []
                          , sort("OptChildDot")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"NoChild\""))]))
                               )]
                            )
                          )
                        , prod([sort("DotChild")], sort("OptDotChild"), no-attrs())
                        , prod(
                            []
                          , sort("OptDotChild")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"NoChild\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("Sort"), lit("\".\"")]
                          , sort("OptSortDot")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Sort\""))]))
                               )]
                            )
                          )
                        , prod(
                            []
                          , sort("OptSortDot")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"NoSort\""))]))
                               )]
                            )
                          )
                        , prod(
                            []
                          , sort("NoSortDot")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"NoSort\""))]))
                               )]
                            )
                          )
                        , prod([sort("Term")], sort("Pattern"), no-attrs())
                        , prod(
                            [sort("AttributeKeyword")]
                          , sort("Pattern")
                          , attrs([reject()])
                          )
                        , prod(
                            [sort("AttributeCall")]
                          , sort("Pattern")
                          , attrs([reject()])
                          )
                        , prod(
                            [lit("\"root\"")]
                          , sort("Pattern")
                          , attrs(
                              [ term(
                                  default(appl(unquoted("cons"), [fun(quoted("\"Root\""))]))
                                )
                              , prefer()
                              ]
                            )
                          )
                        ]
                      )
                    )
                  , context-free-syntax(
                      [ prod(
                          [lit("\"decorators\""), iter-star(sort("ADef"))]
                        , sort("Decl")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Decorators\""))]))
                             )]
                          )
                        )
                      , prod(
                          [sort("AttributeTypeNoSort"), sort("AttributeNameValue")]
                        , sort("ADef")
                        , attrs(
                            [ term(
                                default(appl(unquoted("cons"), [fun(quoted("\"ADefNoPattern\""))]))
                              )
                            , avoid()
                            ]
                          )
                        )
                      , prod(
                          [ sort("OptChildDot")
                          , sort("AttributeDef")
                          , lit("\":=\"")
                          , sort("Term")
                          , iter-star(sort("Where"))
                          ]
                        , sort("AttributeNameValue")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"ADefTerm\""))]))
                             )]
                          )
                        )
                      , prod(
                          [sort("AttributeType"), sort("Pattern"), lit("\":\""), iter(sort("NameDefBlockDef"))]
                        , sort("ADef")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"NameDefBlock\""))]))
                             )]
                          )
                        )
                      , prod(
                          [sort("AttributeType"), sort("AttributeDef"), lit("\":\""), iter(sort("PatternDefBlockDef"))]
                        , sort("ADef")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"PatternDefBlock\""))]))
                             )]
                          )
                        )
                      , prod(
                          [ sort("ChildDot")
                          , sort("AttributeDef")
                          , lit("\":=\"")
                          , sort("Term")
                          , iter-star(sort("Where"))
                          ]
                        , sort("NameDefBlockDef")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"ADefTerm\""))]))
                             )]
                          )
                        )
                      , prod(
                          [sort("ChildDot"), sort("AttributeDef"), lit("\"=\""), sort("Strategy")]
                        , sort("NameDefBlockDef")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"ADefStrategy\""))]))
                             )]
                          )
                        )
                      , prod(
                          [ sort("Pattern")
                          , sort("OptDotChild")
                          , lit("\"->\"")
                          , sort("ResultTerm")
                          , iter-star(sort("NoWhere"))
                          ]
                        , sort("PatternDefBlockDef")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"APDefTerm\""))]))
                             )]
                          )
                        )
                      , prod(
                          [ sort("Pattern")
                          , sort("OptDotChild")
                          , lit("\"->\"")
                          , sort("Term")
                          , iter(sort("Where"))
                          ]
                        , sort("PatternDefBlockDef")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"APDefTerm\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lit("\"where\""), sort("Strategy")]
                        , sort("Where")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Where\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lit("\"with\""), sort("Strategy")]
                        , sort("Where")
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"With\""))]))
                             )]
                          )
                        )
                      , prod([sort("UNDEFINED")], sort("NoWhere"), no-attrs())
                      ]
                    )
                  )
                , context-free-syntax(
                    [ prod(
                        [ lit("\"rewrite\"")
                        , sort("Pattern")
                        , lit("\"->\"")
                        , sort("Term")
                        , iter-star(sort("Where"))
                        ]
                      , sort("ADef")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"AnonymousRewriteRule\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"id\"")]
                      , sort("PreTerm")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"IdTerm\""))]))
                           )]
                        )
                      )
                    , prod(
                        [lit("\"fail\"")]
                      , sort("Term")
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"FailTerm\""))]))
                           )]
                        )
                      )
                    ]
                  )
                )
              , context-free-syntax(
                  [ prod(
                      [sort("AttributeKeyword")]
                    , sort("Var")
                    , attrs([reject()])
                    )
                  , prod(
                      [sort("AttributeKeyword")]
                    , sort("ImportModName")
                    , attrs([reject()])
                    )
                  ]
                )
              )
            , lexical-syntax(
                [ prod([lit("\"eq\"")], sort("AttributeKeyword"), no-attrs())
                , prod([lit("\"def\"")], sort("AttributeKeyword"), no-attrs())
                , prod([lit("\"attributes\"")], sort("AttributeKeyword"), no-attrs())
                , prod([lit("\"decorators\"")], sort("AttributeKeyword"), no-attrs())
                , prod([lit("\"decorator\"")], sort("AttributeKeyword"), no-attrs())
                , prod([lit("\"rewrite\"")], sort("AttributeKeyword"), no-attrs())
                ]
              )
            )
          , context-free-restrictions(
              [ follow(
                  [ lit("\"eq\"")
                  , lit("\"def\"")
                  , lit("\"root\"")
                  , lit("\"rewrite\"")
                  , lit("\"decorator\"")
                  , lit("\"decorators\"")
                  , lit("\"attributes\"")
                  ]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            range(short("a"), short("z"))
                          , conc(
                              range(short("A"), short("Z"))
                            , conc(
                                range(short("0"), short("9"))
                              , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      parameterized("Stratego-AttributesMix", [sort("Ctx0")])
    , [ imports(
          [ renamed-module(
              unparameterized("Stratego-Attributes")
            , renamings(
                [ symbol(sort("NoWhere"), parameterized-sort("NoWhere", [sort("Ctx0")]))
                , symbol(sort("Where"), parameterized-sort("Where", [sort("Ctx0")]))
                , symbol(sort("PatternDefBlockDef"), parameterized-sort("PatternDefBlockDef", [sort("Ctx0")]))
                , symbol(sort("NameDefBlockDef"), parameterized-sort("NameDefBlockDef", [sort("Ctx0")]))
                , symbol(sort("Pattern"), parameterized-sort("Pattern", [sort("Ctx0")]))
                , symbol(sort("NoSortDot"), parameterized-sort("NoSortDot", [sort("Ctx0")]))
                , symbol(sort("OptSortDot"), parameterized-sort("OptSortDot", [sort("Ctx0")]))
                , symbol(sort("OptDotChild"), parameterized-sort("OptDotChild", [sort("Ctx0")]))
                , symbol(sort("OptChildDot"), parameterized-sort("OptChildDot", [sort("Ctx0")]))
                , symbol(sort("DotChild"), parameterized-sort("DotChild", [sort("Ctx0")]))
                , symbol(sort("ChildDot"), parameterized-sort("ChildDot", [sort("Ctx0")]))
                , symbol(sort("DefType"), parameterized-sort("DefType", [sort("Ctx0")]))
                , symbol(sort("AttributeNameValue"), parameterized-sort("AttributeNameValue", [sort("Ctx0")]))
                , symbol(sort("AttributeTypeNoSort"), parameterized-sort("AttributeTypeNoSort", [sort("Ctx0")]))
                , symbol(sort("AttributeType"), parameterized-sort("AttributeType", [sort("Ctx0")]))
                , symbol(sort("ADef"), parameterized-sort("ADef", [sort("Ctx0")]))
                , symbol(sort("AttributeCallLHS"), parameterized-sort("AttributeCallLHS", [sort("Ctx0")]))
                , symbol(sort("AttributeCall"), parameterized-sort("AttributeCall", [sort("Ctx0")]))
                , symbol(sort("DecoratorRefNoArgs"), parameterized-sort("DecoratorRefNoArgs", [sort("Ctx0")]))
                , symbol(sort("DecoratorRef"), parameterized-sort("DecoratorRef", [sort("Ctx0")]))
                , symbol(sort("AttributeRef"), parameterized-sort("AttributeRef", [sort("Ctx0")]))
                , symbol(sort("AttributeDef"), parameterized-sort("AttributeDef", [sort("Ctx0")]))
                , symbol(sort("AttributeDecl"), parameterized-sort("AttributeDecl", [sort("Ctx0")]))
                , symbol(sort("DecoratorId"), parameterized-sort("DecoratorId", [sort("Ctx0")]))
                , symbol(sort("AttributeDeclId"), parameterized-sort("AttributeDeclId", [sort("Ctx0")]))
                , symbol(sort("AttributeKeyword"), parameterized-sort("AttributeKeyword", [sort("Ctx0")]))
                , symbol(sort("AttributeId"), parameterized-sort("AttributeId", [sort("Ctx0")]))
                , symbol(sort("TermNoApp"), parameterized-sort("TermNoApp", [sort("Ctx0")]))
                , symbol(sort("ResultTerm"), parameterized-sort("ResultTerm", [sort("Ctx0")]))
                , symbol(sort("LineEnd"), parameterized-sort("LineEnd", [sort("Ctx0")]))
                , symbol(sort("SingleLineLayout"), parameterized-sort("SingleLineLayout", [sort("Ctx0")]))
                , symbol(sort("RuleNames"), parameterized-sort("RuleNames", [sort("Ctx0")]))
                , symbol(sort("RuleDec"), parameterized-sort("RuleDec", [sort("Ctx0")]))
                , symbol(sort("DynRuleScopeId"), parameterized-sort("DynRuleScopeId", [sort("Ctx0")]))
                , symbol(sort("DynRuleId"), parameterized-sort("DynRuleId", [sort("Ctx0")]))
                , symbol(sort("DynRuleDef"), parameterized-sort("DynRuleDef", [sort("Ctx0")]))
                , symbol(sort("ScopeLabels"), parameterized-sort("ScopeLabels", [sort("Ctx0")]))
                , symbol(sort("RuleCond"), parameterized-sort("RuleCond", [sort("Ctx0")]))
                , symbol(sort("Rule"), parameterized-sort("Rule", [sort("Ctx0")]))
                , symbol(sort("RuleDef"), parameterized-sort("RuleDef", [sort("Ctx0")]))
                , symbol(sort("Overlay"), parameterized-sort("Overlay", [sort("Ctx0")]))
                , symbol(sort("SwitchCase"), parameterized-sort("SwitchCase", [sort("Ctx0")]))
                , symbol(sort("StrategyCurly"), parameterized-sort("StrategyCurly", [sort("Ctx0")]))
                , symbol(sort("StrategyAngle"), parameterized-sort("StrategyAngle", [sort("Ctx0")]))
                , symbol(sort("Kind"), parameterized-sort("Kind", [sort("Ctx0")]))
                , symbol(sort("LID"), parameterized-sort("LID", [sort("Ctx0")]))
                , symbol(sort("ImportModName"), parameterized-sort("ImportModName", [sort("Ctx0")]))
                , symbol(sort("Decl"), parameterized-sort("Decl", [sort("Ctx0")]))
                , symbol(sort("Module"), parameterized-sort("Module", [sort("Ctx0")]))
                , symbol(sort("StrategyParen"), parameterized-sort("StrategyParen", [sort("Ctx0")]))
                , symbol(sort("Typedid"), parameterized-sort("Typedid", [sort("Ctx0")]))
                , symbol(sort("Anno"), parameterized-sort("Anno", [sort("Ctx0")]))
                , symbol(sort("EmptyId"), parameterized-sort("EmptyId", [sort("Ctx0")]))
                , symbol(sort("StrategyDef"), parameterized-sort("StrategyDef", [sort("Ctx0")]))
                , symbol(sort("SVar"), parameterized-sort("SVar", [sort("Ctx0")]))
                , symbol(sort("Def"), parameterized-sort("Def", [sort("Ctx0")]))
                , symbol(sort("Type"), parameterized-sort("Type", [sort("Ctx0")]))
                , symbol(sort("RetType"), parameterized-sort("RetType", [sort("Ctx0")]))
                , symbol(sort("ArgType"), parameterized-sort("ArgType", [sort("Ctx0")]))
                , symbol(sort("FunType"), parameterized-sort("FunType", [sort("Ctx0")]))
                , symbol(sort("ConstType"), parameterized-sort("ConstType", [sort("Ctx0")]))
                , symbol(sort("Opdecl"), parameterized-sort("Opdecl", [sort("Ctx0")]))
                , symbol(sort("Sort"), parameterized-sort("Sort", [sort("Ctx0")]))
                , symbol(sort("Sdecl"), parameterized-sort("Sdecl", [sort("Ctx0")]))
                , symbol(sort("Wld"), parameterized-sort("Wld", [sort("Ctx0")]))
                , symbol(sort("ID"), parameterized-sort("ID", [sort("Ctx0")]))
                , symbol(sort("Var"), parameterized-sort("Var", [sort("Ctx0")]))
                , symbol(sort("CharChar"), parameterized-sort("CharChar", [sort("Ctx0")]))
                , symbol(sort("Char"), parameterized-sort("Char", [sort("Ctx0")]))
                , symbol(sort("Padding"), parameterized-sort("Padding", [sort("Ctx0")]))
                , symbol(sort("Dollar4"), parameterized-sort("Dollar4", [sort("Ctx0")]))
                , symbol(sort("QuotedBracket4"), parameterized-sort("QuotedBracket4", [sort("Ctx0")]))
                , symbol(sort("StringQuotedChars4"), parameterized-sort("StringQuotedChars4", [sort("Ctx0")]))
                , symbol(sort("StringQuotedPart4"), parameterized-sort("StringQuotedPart4", [sort("Ctx0")]))
                , symbol(sort("Dollar3"), parameterized-sort("Dollar3", [sort("Ctx0")]))
                , symbol(sort("QuotedBracket3"), parameterized-sort("QuotedBracket3", [sort("Ctx0")]))
                , symbol(sort("StringQuotedChars3"), parameterized-sort("StringQuotedChars3", [sort("Ctx0")]))
                , symbol(sort("StringQuotedPart3"), parameterized-sort("StringQuotedPart3", [sort("Ctx0")]))
                , symbol(sort("Dollar2"), parameterized-sort("Dollar2", [sort("Ctx0")]))
                , symbol(sort("QuotedBracket2"), parameterized-sort("QuotedBracket2", [sort("Ctx0")]))
                , symbol(sort("StringQuotedChars2"), parameterized-sort("StringQuotedChars2", [sort("Ctx0")]))
                , symbol(sort("StringQuotedPart2"), parameterized-sort("StringQuotedPart2", [sort("Ctx0")]))
                , symbol(sort("Dollar1"), parameterized-sort("Dollar1", [sort("Ctx0")]))
                , symbol(sort("QuotedBracket1"), parameterized-sort("QuotedBracket1", [sort("Ctx0")]))
                , symbol(sort("StringQuotedChars1"), parameterized-sort("StringQuotedChars1", [sort("Ctx0")]))
                , symbol(sort("StringQuotedPart1"), parameterized-sort("StringQuotedPart1", [sort("Ctx0")]))
                , symbol(sort("StringQuotation"), parameterized-sort("StringQuotation", [sort("Ctx0")]))
                , symbol(sort("StrChar"), parameterized-sort("StrChar", [sort("Ctx0")]))
                , symbol(sort("String"), parameterized-sort("String", [sort("Ctx0")]))
                , symbol(sort("Real"), parameterized-sort("Real", [sort("Ctx0")]))
                , symbol(sort("Int"), parameterized-sort("Int", [sort("Ctx0")]))
                , symbol(sort("Keyword"), parameterized-sort("Keyword", [sort("Ctx0")]))
                , symbol(sort("UCID"), parameterized-sort("UCID", [sort("Ctx0")]))
                , symbol(sort("LCID"), parameterized-sort("LCID", [sort("Ctx0")]))
                , symbol(sort("LId"), parameterized-sort("LId", [sort("Ctx0")]))
                , symbol(sort("Id"), parameterized-sort("Id", [sort("Ctx0")]))
                , symbol(sort("ModNamePart"), parameterized-sort("ModNamePart", [sort("Ctx0")]))
                , symbol(sort("ModName"), parameterized-sort("ModName", [sort("Ctx0")]))
                , symbol(sort("PreTerm"), parameterized-sort("PreTerm", [sort("Ctx0")]))
                , symbol(sort("Term"), parameterized-sort("Term", [sort("Ctx0")]))
                , symbol(sort("StrategyMid"), parameterized-sort("StrategyMid", [sort("Ctx0")]))
                , symbol(sort("Strategy"), parameterized-sort("Strategy", [sort("Ctx0")]))
                ]
              )
            )
          ]
        )
      ]
    , []
    )
  , module(
      unparameterized("RefactoringsService")
    , [imports([module(unparameterized("SemanticServices")), module(unparameterized("BuildersService"))])]
    , [ exports(
          conc-grammars(
            syntax(
              [ prod(
                  [ lit("\"refactorings\"")
                  , lex(sort("SectionName"))
                  , cf(opt(layout()))
                  , cf(iter-star(sort("SemanticRule")))
                  ]
                , cf(sort("Section"))
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Refactorings\""))]))
                     )]
                  )
                )
              , prod([lit("\"refactorings\"")], cf(sort("ReservedName")), no-attrs())
              ]
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"pp-table\""), lit("\":\""), sort("StrategoCall")]
                , sort("SemanticRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"PPTable\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"pretty-print\""), lit("\":\""), sort("StrategoCall")]
                , sort("SemanticRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"PrettyPrint\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"refactoring\"")
                  , iter-star(sort("SemanticNode"))
                  , lit("\":\"")
                  , sort("String")
                  , lit("\"=\"")
                  , sort("StrategoCall")
                  , iter-star(sort("BuilderOption"))
                  ]
                , sort("SemanticRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Refactoring\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("BuildersService")
    , [imports([module(unparameterized("SemanticServices"))])]
    , [ exports(
          conc-grammars(
            syntax(
              [ prod(
                  [ lit("\"builders\"")
                  , lex(sort("SectionName"))
                  , cf(opt(layout()))
                  , cf(iter-star(sort("SemanticRule")))
                  ]
                , cf(sort("Section"))
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Builders\""))]))
                     )]
                  )
                )
              , prod([lit("\"builders\"")], cf(sort("ReservedName")), no-attrs())
              , prod(
                  [ lit("\"analysis\"")
                  , lex(sort("SectionName"))
                  , cf(opt(layout()))
                  , cf(iter-star(sort("SemanticRule")))
                  ]
                , cf(sort("Section"))
                , attrs(
                    [ term(
                        default(appl(unquoted("cons"), [fun(quoted("\"Builders\""))]))
                      )
                    , term(
                        default(appl(unquoted("deprecated"), [fun(quoted("\"Use 'builders' instead\""))]))
                      )
                    ]
                  )
                )
              , prod([lit("\"analysis\"")], cf(sort("ReservedName")), no-attrs())
              ]
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"observer\""), lit("\":\""), sort("StrategoCall")]
                , sort("SemanticRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"SemanticObserver\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"builder\"")
                  , lit("\":\"")
                  , sort("String")
                  , lit("\"=\"")
                  , sort("StrategoCall")
                  , iter-star(sort("BuilderOption"))
                  ]
                , sort("SemanticRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Builder\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"builder\""), lit("\"caption\""), lit("\":\""), sort("PropertyValue")]
                , sort("SemanticRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"BuilderCaption\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"(openeditor)\"")]
                , sort("BuilderOption")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"OpenEditor\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"(realtime)\"")]
                , sort("BuilderOption")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"RealTime\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"(persistent)\"")]
                , sort("BuilderOption")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Persistent\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"(meta)\"")]
                , sort("BuilderOption")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Meta\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"(cursor)\"")]
                , sort("BuilderOption")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Cursor\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"(source)\"")]
                , sort("BuilderOption")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Source\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("CompletionsService")
    , [imports([module(unparameterized("SemanticServices"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  sorts([sort("CompletionPart"), sort("CompletionAnno")])
                , syntax(
                    [ prod(
                        [ lit("\"completions\"")
                        , lex(sort("SectionName"))
                        , cf(opt(layout()))
                        , cf(iter-star(sort("SemanticRule")))
                        ]
                      , cf(sort("Section"))
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"Completions\""))]))
                           )]
                        )
                      )
                    , prod([lit("\"completions\"")], cf(sort("ReservedName")), no-attrs())
                    ]
                  )
                )
              , context-free-syntax(
                  [ prod(
                      [lit("\"completion\""), lit("\"proposer\""), lit("\":\""), sort("StrategoCall")]
                    , sort("SemanticRule")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"CompletionProposer\""))]))
                         )]
                      )
                    )
                  , prod(
                      [lit("\"completion\""), lit("\"lexical\""), lit("\":\""), sort("PropertyValue")]
                    , sort("SemanticRule")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"IdentifierLexical\""))]))
                          )
                        , term(
                            default(appl(unquoted("deprecated"), [fun(quoted("\"Use 'identifier lexical' instead\""))]))
                          )
                        ]
                      )
                    )
                  , prod(
                      [lit("\"identifier\""), lit("\"lexical\""), lit("\":\""), sort("PropertyValue")]
                    , sort("SemanticRule")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"IdentifierLexical\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ lit("\"completion\"")
                      , lit("\"keyword\"")
                      , lit("\":\"")
                      , sort("PropertyValue")
                      , sort("OptCompletionAnno")
                      ]
                    , sort("SemanticRule")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"CompletionKeyword\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ lit("\"completion\"")
                      , lit("\"template\"")
                      , lit("\":\"")
                      , sort("Id")
                      , iter(sort("CompletionPart"))
                      , sort("OptCompletionAnno")
                      ]
                    , sort("SemanticRule")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"CompletionTemplate\""))]))
                          )
                        , avoid()
                        , term(
                            default(appl(unquoted("deprecated"), [fun(quoted("\"Add quotes to the starting literal\""))]))
                          )
                        ]
                      )
                    )
                  , prod(
                      [ lit("\"completion\"")
                      , lit("\"template\"")
                      , lit("\":\"")
                      , sort("Sort")
                      , lit("\"=\"")
                      , sort("CompletionPart")
                      , iter-star(sort("CompletionPart"))
                      , sort("OptCompletionAnno")
                      ]
                    , sort("SemanticRule")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"CompletionTemplateWithSort\""))]))
                          )
                        , avoid()
                        ]
                      )
                    )
                  , prod(
                      [ lit("\"completion\"")
                      , lit("\"template\"")
                      , iter-star(sort("Sort"))
                      , lit("\":\"")
                      , sort("PropertyValue")
                      , iter-star(sort("CompletionPart"))
                      , iter-star(sort("CompletionAnno"))
                      ]
                    , sort("SemanticRule")
                    , attrs(
                        [ term(
                            default(appl(unquoted("cons"), [fun(quoted("\"CompletionTemplateEx\""))]))
                          )
                        , term(default(fun(unquoted("recover"))))
                        , avoid()
                        ]
                      )
                    )
                  , prod(
                      [ lit("\"completion\"")
                      , lit("\"trigger\"")
                      , lit("\":\"")
                      , sort("PropertyValue")
                      , sort("OptCompletionAnno")
                      ]
                    , sort("SemanticRule")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"CompletionTrigger\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ lit("\"completion\"")
                      , lit("\"template\"")
                      , iter-star(sort("Sort"))
                      , lit("\":\"")
                      , sort("CompletionPrefix")
                      , iter(sort("CompletionPart"))
                      , iter-star(sort("CompletionAnno"))
                      ]
                    , sort("SemanticRule")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"CompletionTemplateEx\""))]))
                         )]
                      )
                    )
                  , prod(
                      []
                    , sort("CompletionPrefix")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"NoCompletionPrefix\""))]))
                         )]
                      )
                    )
                  , prod(
                      [sort("String"), lit("\"=\"")]
                    , sort("CompletionPrefix")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"CompletionPrefix\""))]))
                         )]
                      )
                    )
                  ]
                )
              )
            , context-free-syntax(
                [ prod(
                    [lit("\"completions\"")]
                  , sort("StrategoCall")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"completion\"")]
                  , sort("StrategoCall")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"identifier\"")]
                  , sort("StrategoCall")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"observer\"")]
                  , sort("StrategoCall")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"builder\"")]
                  , sort("StrategoCall")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"occurrence\"")]
                  , sort("StrategoCall")
                  , attrs([reject()])
                  )
                , prod(
                    [sort("ReservedName")]
                  , sort("StrategoCall")
                  , attrs([reject()])
                  )
                , prod([sort("String")], sort("CompletionPart"), no-attrs())
                , prod(
                    [sort("Placeholder")]
                  , sort("CompletionPart")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Placeholder\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"(cursor)\"")]
                  , sort("CompletionPart")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Cursor\""))]))
                       )]
                    )
                  )
                , prod(
                    [sort("PlaceholderWithSortPrefix"), sort("Id"), lit("\">\"")]
                  , sort("CompletionPart")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"PlaceholderWithSort\""))]))
                       )]
                    )
                  )
                , prod(
                    []
                  , sort("OptCompletionAnno")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"None\""))]))
                       )]
                    )
                  )
                , prod([sort("CompletionAnno")], sort("OptCompletionAnno"), no-attrs())
                , prod(
                    [lit("\"(disabled)\"")]
                  , sort("CompletionAnno")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Disable\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"(disable)\"")]
                  , sort("CompletionAnno")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"Disable\""))]))
                        )
                      , term(
                          default(appl(unquoted("deprecated"), [fun(quoted("\"Use (disabled) instead\""))]))
                        )
                      ]
                    )
                  )
                , prod(
                    [lit("\"(blank)\"")]
                  , sort("CompletionAnno")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Blank\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"(linked)\"")]
                  , sort("CompletionAnno")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Linked\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"(blank)\"")]
                  , sort("PropertyValue")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"(disable)\"")]
                  , sort("PropertyValue")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"(linked)\"")]
                  , sort("PropertyValue")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"completion\"")]
                  , sort("PropertyValue")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"template\"")]
                  , sort("PropertyValue")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"trigger\"")]
                  , sort("PropertyValue")
                  , attrs([reject()])
                  )
                , prod(
                    [lit("\"identifier\"")]
                  , sort("PropertyValue")
                  , attrs([reject()])
                  )
                ]
              )
            )
          , lexical-syntax(
              [ prod(
                  [lit("\"<\""), iter-star(sort("PlaceholderChar")), lit("\":\"")]
                , sort("PlaceholderWithSortPrefix")
                , no-attrs()
                )
              , prod(
                  [lit("\"<\""), iter-star(sort("PlaceholderChar")), lit("\">\"")]
                , sort("Placeholder")
                , no-attrs()
                )
              , prod(
                  [ char-class(
                      comp(
                        simple-charclass(
                          present(
                            conc(short("\\:"), conc(short("\\>"), short("\\n")))
                          )
                        )
                      )
                    )
                  ]
                , sort("PlaceholderChar")
                , no-attrs()
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("ReferencesService")
    , [imports([module(unparameterized("SemanticServices"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              syntax(
                [ prod(
                    [ lit("\"references\"")
                    , lex(sort("SectionName"))
                    , cf(opt(layout()))
                    , cf(iter-star(sort("SemanticRule")))
                    ]
                  , cf(sort("Section"))
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"References\""))]))
                       )]
                    )
                  )
                , prod([lit("\"references\"")], cf(sort("ReservedName")), no-attrs())
                ]
              )
            , context-free-syntax(
                [ prod(
                    [ lit("\"reference\"")
                    , sort("SemanticNode")
                    , lit("\":\"")
                    , sort("StrategoCall")
                    , sort("StrategoCall")
                    ]
                  , sort("SemanticRule")
                  , attrs(
                      [ term(
                          default(appl(unquoted("cons"), [fun(quoted("\"ReferenceHoverRule\""))]))
                        )
                      , term(default(fun(unquoted("deprecated"))))
                      ]
                    )
                  )
                , prod(
                    [lit("\"reference\""), sort("SemanticNode"), lit("\":\""), sort("StrategoCall")]
                  , sort("SemanticRule")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"ReferenceRule\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"hover\""), sort("SemanticNode"), lit("\":\""), sort("StrategoCall")]
                  , sort("SemanticRule")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"HoverRule\""))]))
                       )]
                    )
                  )
                , prod(
                    [lit("\"occurrence\""), sort("SemanticNode"), lit("\":\""), sort("StrategoCall")]
                  , sort("SemanticRule")
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"OccurrenceRule\""))]))
                       )]
                    )
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"references\"")]
                , sort("StrategoCall")
                , attrs([reject()])
                )
              , prod(
                  [lit("\"reference\"")]
                , sort("StrategoCall")
                , attrs([reject()])
                )
              , prod(
                  [lit("\"hover\"")]
                , sort("StrategoCall")
                , attrs([reject()])
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("ColorerService")
    , [imports([module(unparameterized("Common"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              sorts(
                [ sort("ColorRule")
                , sort("Font")
                , sort("Color")
                , sort("ColorNode")
                , sort("MaybeColor")
                , sort("NoColor")
                , sort("TokenKindName")
                , sort("AttributeId")
                , sort("Attribute")
                ]
              )
            , syntax(
                [ prod(
                    [ lit("\"colorer\"")
                    , lex(sort("SectionName"))
                    , cf(opt(layout()))
                    , cf(iter-star(sort("ColorRule")))
                    ]
                  , cf(sort("Section"))
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Colorer\""))]))
                       )]
                    )
                  )
                , prod([lit("\"colorer\"")], cf(sort("ReservedName")), no-attrs())
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"environment\""), sort("ColorNode"), lit("\":\""), sort("Attribute")]
                , sort("ColorRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ColorRuleAll\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("ColorNode"), lit("\":\""), sort("Attribute")]
                , sort("ColorRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ColorRule\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"environment\"")
                  , sort("ColorNode")
                  , lit("\":\"")
                  , sort("String")
                  , lit("\"=\"")
                  , sort("Attribute")
                  ]
                , sort("ColorRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ColorRuleAllNamed\""))]))
                     )]
                  )
                )
              , prod(
                  [ sort("ColorNode")
                  , lit("\":\"")
                  , sort("String")
                  , lit("\"=\"")
                  , sort("Attribute")
                  ]
                , sort("ColorRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ColorRuleNamed\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Color"), sort("MaybeColor"), sort("Font")]
                , sort("Attribute")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Attribute\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("AttributeId")]
                , sort("Attribute")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"AttributeRef\""))]))
                     )]
                  )
                )
              , prod([sort("Node")], sort("ColorNode"), no-attrs())
              , prod(
                  [sort("TokenKindName")]
                , sort("ColorNode")
                , attrs(
                    [ term(
                        default(appl(unquoted("cons"), [fun(quoted("\"Token\""))]))
                      )
                    , prefer()
                    ]
                  )
                )
              , prod(
                  [lit("\"token\""), sort("Id")]
                , sort("ColorNode")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Literal\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"identifier\"")]
                , sort("TokenKindName")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TK_IDENTIFIER\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"number\"")]
                , sort("TokenKindName")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TK_NUMBER\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"layout\"")]
                , sort("TokenKindName")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TK_LAYOUT\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"string\"")]
                , sort("TokenKindName")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TK_STRING\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"keyword\"")]
                , sort("TokenKindName")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TK_KEYWORD\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"operator\"")]
                , sort("TokenKindName")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TK_OPERATOR\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"var\"")]
                , sort("TokenKindName")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TK_VAR\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"error\"")]
                , sort("TokenKindName")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TK_ERROR\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"unknown\"")]
                , sort("TokenKindName")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TK_UNKNOWN\""))]))
                     )]
                  )
                )
              , prod(
                  []
                , sort("Font")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"NORMAL\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"bold\"")]
                , sort("Font")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"BOLD\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"italic\"")]
                , sort("Font")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ITALIC\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"bold\""), lit("\"italic\"")]
                , sort("Font")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"BOLD_ITALIC\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"italic\""), lit("\"bold\"")]
                , sort("Font")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"BOLD_ITALIC\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"_\"")]
                , sort("Color")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ColorDefault\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Int"), sort("Int"), sort("Int")]
                , sort("Color")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ColorRGB\""))]))
                     )]
                  )
                )
              , prod(
                  []
                , sort("NoColor")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"NoColor\""))]))
                     )]
                  )
                )
              , prod([sort("Color")], sort("MaybeColor"), no-attrs())
              , prod([sort("NoColor")], sort("MaybeColor"), no-attrs())
              , prod(
                  [sort("AttributeId"), lit("\"=\""), sort("Attribute")]
                , sort("ColorRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ColorDef\""))]))
                     )]
                  )
                )
              , prod([sort("Id")], sort("AttributeId"), no-attrs())
              , prod([sort("String")], sort("AttributeId"), no-attrs())
              , prod(
                  [lit("\"_\"")]
                , sort("AttributeId")
                , attrs([reject()])
                )
              , prod(
                  [sort("Font")]
                , sort("AttributeId")
                , attrs([reject()])
                )
              , prod(
                  [lit("\"environment\"")]
                , sort("AttributeId")
                , attrs([reject()])
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("OutlinerService")
    , [imports([module(unparameterized("Common"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              sorts(
                [sort("OutlineRule"), sort("Pattern"), sort("Term"), sort("PreTerm")]
              )
            , syntax(
                [ prod(
                    [ lit("\"outliner\"")
                    , lex(sort("SectionName"))
                    , cf(opt(layout()))
                    , cf(iter-star(sort("OutlineRule")))
                    ]
                  , cf(sort("Section"))
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Outliner\""))]))
                       )]
                    )
                  )
                , prod([lit("\"outliner\"")], cf(sort("ReservedName")), no-attrs())
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [sort("Node")]
                , sort("OutlineRule")
                , attrs(
                    [ term(
                        default(appl(unquoted("cons"), [fun(quoted("\"OutlineRule\""))]))
                      )
                    , prefer()
                    ]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("FoldingService")
    , [imports([module(unparameterized("Common"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              sorts([sort("FoldingRule"), sort("FoldingAnno")])
            , syntax(
                [ prod(
                    [ lit("\"folding\"")
                    , lex(sort("SectionName"))
                    , cf(opt(layout()))
                    , cf(iter-star(sort("FoldingRule")))
                    ]
                  , cf(sort("Section"))
                  , attrs(
                      [term(
                         default(appl(unquoted("cons"), [fun(quoted("\"Folding\""))]))
                       )]
                    )
                  )
                , prod([lit("\"folding\"")], cf(sort("ReservedName")), no-attrs())
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [sort("Node"), sort("FoldingAnno")]
                , sort("FoldingRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"FoldRule\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"all\""), sort("Node"), sort("FoldingAnno")]
                , sort("FoldingRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"FoldRuleAll\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"(disable)\"")]
                , sort("FoldingAnno")
                , attrs(
                    [ term(
                        default(appl(unquoted("cons"), [fun(quoted("\"Disable\""))]))
                      )
                    , term(
                        default(appl(unquoted("deprecated"), [fun(quoted("\"Use (disabled) instead\""))]))
                      )
                    ]
                  )
                )
              , prod(
                  [lit("\"(disabled)\"")]
                , sort("FoldingAnno")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Disable\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"(folded)\"")]
                , sort("FoldingAnno")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Folded\""))]))
                     )]
                  )
                )
              , prod(
                  []
                , sort("FoldingAnno")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"None\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("SemanticServices")
    , [imports([module(unparameterized("Common")), module(unparameterized("LanguageDescription"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts(
                  [ sort("SemanticRule")
                  , sort("SemanticNode")
                  , sort("StrategoId")
                  , sort("StrategoCall")
                  , sort("OnSaveAnno")
                  ]
                )
              , lexical-syntax(
                  [ prod(
                      [ char-class(
                          simple-charclass(
                            present(
                              conc(
                                range(short("a"), short("z"))
                              , conc(range(short("A"), short("Z")), short("\\_"))
                              )
                            )
                          )
                        )
                      , iter-star(
                          char-class(
                            simple-charclass(
                              present(
                                conc(
                                  range(short("a"), short("z"))
                                , conc(
                                    range(short("A"), short("Z"))
                                  , conc(
                                      range(short("0"), short("9"))
                                    , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , sort("StrategoId")
                    , no-attrs()
                    )
                  , prod([lit("\"_\"")], sort("SemanticNode"), no-attrs())
                  ]
                )
              )
            , lexical-restrictions(
                [ follow(
                    [sort("StrategoId")]
                  , single(
                      char-class(
                        simple-charclass(
                          present(
                            conc(
                              range(short("a"), short("z"))
                            , conc(
                                range(short("A"), short("Z"))
                              , conc(
                                  range(short("0"), short("9"))
                                , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod([sort("Node")], sort("SemanticNode"), no-attrs())
              , prod(
                  [lit("\"provider\""), sort("PropertyValue")]
                , sort("SemanticRule")
                , attrs(
                    [ term(
                        default(appl(unquoted("cons"), [fun(quoted("\"SemanticProvider\""))]))
                      )
                    , term(
                        default(appl(unquoted("deprecated"), [fun(quoted("\"Use 'provider :'\""))]))
                      )
                    ]
                  )
                )
              , prod(
                  [lit("\"provider\""), lit("\":\""), sort("PropertyValue")]
                , sort("SemanticRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"SemanticProvider\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"on\"")
                  , lit("\"save\"")
                  , lit("\":\"")
                  , sort("StrategoCall")
                  , sort("OnSaveAnno")
                  ]
                , sort("SemanticRule")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"OnSave\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("StrategoId")]
                , sort("StrategoCall")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Strategy\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"id\""), lit("\".\""), sort("StrategoId")]
                , sort("StrategoCall")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Attribute\""))]))
                     )]
                  )
                )
              , prod(
                  []
                , sort("OnSaveAnno")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"None\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("LanguageDescription")
    , [imports([module(unparameterized("Common")), module(unparameterized("SemanticServices"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  sorts(
                    [ sort("LanguageProperty")
                    , sort("PropertyValue")
                    , sort("NoContinuation")
                    , sort("PropertyValues")
                    , sort("URL")
                    , sort("FenceDef")
                    , sort("BlockCommentDef")
                    , sort("IndentDef")
                    ]
                  )
                , syntax(
                    [ prod(
                        [ lit("\"language\"")
                        , lex(sort("SectionName"))
                        , cf(opt(layout()))
                        , cf(iter-star(sort("LanguageProperty")))
                        ]
                      , cf(sort("Section"))
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"Language\""))]))
                           )]
                        )
                      )
                    , prod([lit("\"language\"")], cf(sort("ReservedName")), no-attrs())
                    ]
                  )
                )
              , lexical-syntax(
                  [ prod(
                      [ iter(
                          char-class(
                            comp(
                              simple-charclass(
                                present(
                                  conc(
                                    short("\\ ")
                                  , conc(
                                      short("\\t")
                                    , conc(
                                        short("\\n")
                                      , conc(
                                          short("\\r")
                                        , conc(
                                            short("\\,")
                                          , conc(short("\\:"), conc(short("\\\""), short("\\=")))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , sort("PropertyValue")
                    , attrs([avoid()])
                    )
                  , prod(
                      [ iter(
                          char-class(
                            comp(
                              simple-charclass(
                                present(
                                  conc(
                                    short("\\ ")
                                  , conc(
                                      short("\\t")
                                    , conc(
                                        short("\\n")
                                      , conc(
                                          short("\\r")
                                        , conc(short("\\,"), conc(short("\\/"), short("\\:")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      , lit("\"://\"")
                      , iter(
                          char-class(
                            comp(
                              simple-charclass(
                                present(
                                  conc(
                                    short("\\ ")
                                  , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , sort("URL")
                    , no-attrs()
                    )
                  ]
                )
              )
            , lexical-restrictions(
                [ follow(
                    [sort("PropertyValue")]
                  , single(
                      char-class(
                        comp(
                          simple-charclass(
                            present(
                              conc(
                                short("\\ ")
                              , conc(
                                  short("\\t")
                                , conc(
                                    short("\\n")
                                  , conc(
                                      short("\\r")
                                    , conc(
                                        short("\\,")
                                      , conc(short("\\:"), conc(short("\\\""), short("\\=")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , follow(
                    [sort("URL")]
                  , single(
                      char-class(
                        comp(
                          simple-charclass(
                            present(
                              conc(
                                short("\\ ")
                              , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [iter-star-sep(sort("PropertyValue"), lit("\",\""))]
                , sort("PropertyValues")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Values\""))]))
                     )]
                  )
                )
              , prod([sort("String")], sort("PropertyValue"), no-attrs())
              , prod(
                  [lit("\"name\""), lit("\":\""), sort("PropertyValue")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"LanguageName\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"id\""), lit("\":\""), sort("PropertyValue")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"LanguageId\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"extensions\""), lit("\":\""), sort("PropertyValues")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Extensions\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"description\""), lit("\":\""), sort("PropertyValue")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Description\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"table\""), lit("\":\""), sort("PropertyValue")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Table\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"table\""), lit("\"provider\""), lit("\":\""), sort("StrategoCall")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"TableProvider\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"start\""), lit("\"symbols\""), lit("\":\""), iter-star(sort("Sort"))]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"StartSymbols\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"start\""), lit("\"symbols\""), lit("\":\""), sort("PropertyValues")]
                , sort("LanguageProperty")
                , attrs(
                    [ term(
                        default(appl(unquoted("cons"), [fun(quoted("\"StartSymbols\""))]))
                      )
                    , avoid()
                    ]
                  )
                )
              , prod(
                  [lit("\"url\""), lit("\":\""), sort("URL")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"URL\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"extends\""), lit("\":\""), sort("PropertyValues")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Extends\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"aliases\""), lit("\":\""), sort("PropertyValues")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Aliases\""))]))
                     )]
                  )
                )
              , prod(
                  [ lit("\"unmanaged\"")
                  , lit("\"table\"")
                  , lit("\":\"")
                  , sort("Id")
                  , lit("\"*\"")
                  ]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"UnmanagedTablePrefix\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"disambiguator\""), lit("\":\""), sort("StrategoCall")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Disambiguator\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"line\""), lit("\"comment\""), lit("\":\""), sort("PropertyValue")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"LineCommentPrefix\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"block\""), lit("\"comment\""), lit("\":\""), sort("BlockCommentDef")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"BlockCommentDefs\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"fences\""), lit("\":\""), iter-star(sort("FenceDef"))]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"FenceDefs\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"indent\""), lit("\"after\""), lit("\":\""), iter-star(sort("IndentDef"))]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"IndentDefs\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"identifier\""), lit("\"lexical\""), lit("\":\""), sort("PropertyValue")]
                , sort("LanguageProperty")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"IdentifierLexical\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("PropertyValue"), sort("PropertyValue"), sort("PropertyValue")]
                , sort("BlockCommentDef")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"BlockCommentDef\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("PropertyValue"), sort("NoContinuation"), sort("PropertyValue")]
                , sort("BlockCommentDef")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"BlockCommentDef\""))]))
                     )]
                  )
                )
              , prod(
                  []
                , sort("NoContinuation")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"NoContinuation\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("PropertyValue"), sort("PropertyValue")]
                , sort("FenceDef")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"FenceDef\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("PropertyValue")]
                , sort("IndentDef")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"IndentDef\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"fences\"")]
                , sort("PropertyValue")
                , attrs([reject()])
                )
              , prod(
                  [lit("\"identifier\"")]
                , sort("PropertyValue")
                , attrs([reject()])
                )
              , prod(
                  [lit("\"indent\"")]
                , sort("PropertyValue")
                , attrs([reject()])
                )
              , prod(
                  [lit("\"fences\"")]
                , sort("PropertyValue")
                , attrs([reject()])
                )
              , prod(
                  [lit("\"line\"")]
                , sort("PropertyValue")
                , attrs([reject()])
                )
              , prod(
                  [lit("\"block\"")]
                , sort("PropertyValue")
                , attrs([reject()])
                )
              , prod(
                  [lit("\"unmanaged\"")]
                , sort("Sort")
                , attrs([reject()])
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Common")
    , []
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  sorts(
                    [ sort("Id")
                    , sort("IdStar")
                    , sort("Int")
                    , sort("STRING")
                    , sort("CHAR")
                    , sort("BACKSLASH")
                    , sort("String")
                    , sort("Node")
                    , sort("Sort")
                    , sort("Constructor")
                    , sort("ConstructorId")
                    , sort("ReservedName")
                    , sort("SectionName")
                    , sort("ModuleName")
                    , sort("Section")
                    , sort("Eof")
                    , sort("Ws")
                    , sort("ShortCom")
                    , sort("LongCom")
                    , sort("CommChar")
                    ]
                  )
                , lexical-syntax(
                    [ prod(
                        [ char-class(
                            simple-charclass(
                              present(
                                conc(
                                  range(short("a"), short("z"))
                                , range(short("A"), short("Z"))
                                )
                              )
                            )
                          )
                        , iter-star(
                            char-class(
                              simple-charclass(
                                present(
                                  conc(
                                    range(short("a"), short("z"))
                                  , conc(
                                      range(short("A"), short("Z"))
                                    , conc(
                                        range(short("0"), short("9"))
                                      , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        ]
                      , sort("Id")
                      , no-attrs()
                      )
                    , prod(
                        [ char-class(
                            simple-charclass(
                              present(
                                conc(
                                  range(short("a"), short("z"))
                                , range(short("A"), short("Z"))
                                )
                              )
                            )
                          )
                        , iter-star(
                            char-class(
                              simple-charclass(
                                present(
                                  conc(
                                    range(short("a"), short("z"))
                                  , conc(
                                      range(short("A"), short("Z"))
                                    , conc(
                                        range(short("0"), short("9"))
                                      , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        , lit("\"*\"")
                        ]
                      , sort("IdStar")
                      , no-attrs()
                      )
                    , prod(
                        [ opt(lit("\"-\""))
                        , iter(
                            char-class(simple-charclass(present(range(short("0"), short("9")))))
                          )
                        ]
                      , sort("Int")
                      , no-attrs()
                      )
                    , prod(
                        [lit("\"\\\"\""), iter-star(sort("StringChar")), lit("\"\\\"\"")]
                      , sort("STRING")
                      , no-attrs()
                      )
                    , prod(
                        [ char-class(
                            comp(
                              simple-charclass(
                                present(
                                  conc(short("\\\""), conc(short("\\n"), short("\\\\")))
                                )
                              )
                            )
                          )
                        ]
                      , sort("StringChar")
                      , no-attrs()
                      )
                    , prod([lit("\"\\\\\\\"\"")], sort("StringChar"), no-attrs())
                    , prod([sort("BACKSLASH")], sort("StringChar"), no-attrs())
                    , prod([lit("\"\\\\\"")], sort("BACKSLASH"), no-attrs())
                    , prod(
                        [ iter-star(
                            char-class(
                              comp(simple-charclass(present(conc(short("\\n"), short("\\r")))))
                            )
                          )
                        ]
                      , sort("SectionName")
                      , no-attrs()
                      )
                    , prod(
                        [ char-class(
                            simple-charclass(
                              present(
                                conc(
                                  short("\\t")
                                , conc(short("\\ "), conc(short("\\n"), short("\\r")))
                                )
                              )
                            )
                          )
                        ]
                      , sort("Ws")
                      , no-attrs()
                      )
                    , prod(
                        [ lit("\"//\"")
                        , iter-star(char-class(comp(simple-charclass(present(short("\\n"))))))
                        , alt(char-class(simple-charclass(present(short("\\n")))), sort("Eof"))
                        ]
                      , sort("ShortCom")
                      , no-attrs()
                      )
                    , prod(
                        [lit("\"/*\""), iter-star(sort("CommChar")), lit("\"*/\"")]
                      , sort("LongCom")
                      , no-attrs()
                      )
                    , prod(
                        [char-class(comp(simple-charclass(present(short("\\*")))))]
                      , sort("CommChar")
                      , no-attrs()
                      )
                    , prod([sort("Asterisk")], sort("CommChar"), no-attrs())
                    , prod([lit("\"*\"")], sort("Asterisk"), no-attrs())
                    , prod([sort("Ws")], layout(), no-attrs())
                    , prod([sort("ShortCom")], layout(), no-attrs())
                    , prod([sort("LongCom")], layout(), no-attrs())
                    , prod([], sort("Eof"), no-attrs())
                    ]
                  )
                )
              , lexical-restrictions(
                  [ follow(
                      [sort("Int")]
                    , single(
                        char-class(simple-charclass(present(range(short("0"), short("9")))))
                      )
                    )
                  , follow(
                      [sort("Id")]
                    , single(
                        char-class(
                          simple-charclass(
                            present(
                              conc(
                                range(short("a"), short("z"))
                              , conc(
                                  range(short("A"), short("Z"))
                                , conc(
                                    range(short("0"), short("9"))
                                  , conc(short("\\'"), conc(short("\\-"), short("\\_")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , follow(
                      [sort("SectionName")]
                    , single(
                        char-class(
                          comp(simple-charclass(present(conc(short("\\n"), short("\\r")))))
                        )
                      )
                    )
                  , follow(
                      [sort("Asterisk")]
                    , single(char-class(simple-charclass(present(short("\\/")))))
                    )
                  , follow(
                      [sort("BACKSLASH")]
                    , single(char-class(simple-charclass(present(short("\\\"")))))
                    )
                  , follow(
                      [sort("Eof")]
                    , single(char-class(comp(simple-charclass(absent()))))
                    )
                  ]
                )
              )
            , context-free-restrictions(
                [ follow(
                    [opt(layout())]
                  , single(
                      char-class(
                        simple-charclass(
                          present(
                            conc(
                              short("\\ ")
                            , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                            )
                          )
                        )
                      )
                    )
                  )
                , follow(
                    [opt(layout())]
                  , single(
                      seq(
                        simple-charclass(present(short("\\/")))
                      , single(char-class(simple-charclass(present(short("\\*")))))
                      )
                    )
                  )
                , follow(
                    [opt(layout())]
                  , single(
                      seq(
                        simple-charclass(present(short("\\/")))
                      , single(char-class(simple-charclass(present(short("\\/")))))
                      )
                    )
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [sort("Id")]
                , sort("Sort")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Sort\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Id"), lit("\"*\"")]
                , sort("Sort")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ListSort\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("STRING")]
                , sort("String")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"String\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Sort"), lit("\".\""), lit("\"_\"")]
                , sort("Sort")
                , attrs([bracket()])
                )
              , prod(
                  [lit("\"_\""), lit("\".\""), sort("ConstructorId")]
                , sort("Constructor")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ConstructorOnly\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("Id")]
                , sort("ConstructorId")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Constructor\""))]))
                     )]
                  )
                )
              , prod([sort("Sort")], sort("Node"), no-attrs())
              , prod([sort("Constructor")], sort("Node"), no-attrs())
              , prod(
                  [sort("Sort"), lit("\".\""), sort("ConstructorId")]
                , sort("Node")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"SortAndConstructor\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("ReservedName")]
                , sort("Node")
                , attrs([reject()])
                )
              , prod(
                  [sort("ReservedName")]
                , sort("ModuleName")
                , attrs([reject()])
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("EditorService")
    , [ imports(
          [ module(unparameterized("Common"))
          , module(unparameterized("LanguageDescription"))
          , module(unparameterized("FoldingService"))
          , module(unparameterized("OutlinerService"))
          , module(unparameterized("ColorerService"))
          , module(unparameterized("ReferencesService"))
          , module(unparameterized("CompletionsService"))
          , module(unparameterized("BuildersService"))
          , module(unparameterized("RefactoringsService"))
          ]
        )
      ]
    , [ hiddens(context-free-start-symbols([sort("Module")]))
      , exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                sorts(
                  [ sort("Module")
                  , sort("FileName")
                  , sort("ModuleName")
                  , sort("Imports")
                  , sort("Import")
                  ]
                )
              , lexical-syntax(
                  [ prod(
                      [ iter(
                          char-class(
                            simple-charclass(
                              present(
                                conc(
                                  range(short("a"), short("z"))
                                , conc(
                                    range(short("A"), short("Z"))
                                  , conc(
                                      range(short("0"), short("9"))
                                    , conc(short("\\-"), conc(short("\\_"), short("\\.")))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , sort("FileName")
                    , no-attrs()
                    )
                  , prod(
                      [iter-sep(sort("FileName"), lit("\"/\""))]
                    , sort("ModuleName")
                    , no-attrs()
                    )
                  ]
                )
              )
            , lexical-restrictions(
                [ follow(
                    [sort("FileName")]
                  , single(
                      char-class(
                        simple-charclass(
                          present(
                            conc(
                              range(short("a"), short("z"))
                            , conc(
                                range(short("A"), short("Z"))
                              , conc(
                                  range(short("0"), short("9"))
                                , conc(short("\\-"), conc(short("\\_"), short("\\.")))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"module\""), sort("ModuleName"), sort("Imports"), iter-star(sort("Section"))]
                , sort("Module")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Module\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"imports\""), iter(sort("Import"))]
                , sort("Imports")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Imports\""))]))
                     )]
                  )
                )
              , prod(
                  []
                , sort("Imports")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"NoImports\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("ModuleName")]
                , sort("Import")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Import\""))]))
                     )]
                  )
                )
              , prod(
                  [sort("ModuleName"), lit("\"[\""), sort("Id"), lit("\"]\"")]
                , sort("Import")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"ImportRenamed\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      parameterized("EditorServiceMix", [sort("Ctx1")])
    , [ imports(
          [ renamed-module(
              unparameterized("EditorService")
            , renamings(
                [ symbol(sort("Import"), parameterized-sort("Import", [sort("Ctx1")]))
                , symbol(sort("Imports"), parameterized-sort("Imports", [sort("Ctx1")]))
                , symbol(sort("Module"), parameterized-sort("Module", [sort("Ctx1")]))
                , symbol(sort("FileName"), parameterized-sort("FileName", [sort("Ctx1")]))
                , symbol(sort("BuilderOption"), parameterized-sort("BuilderOption", [sort("Ctx1")]))
                , symbol(sort("CompletionAnno"), parameterized-sort("CompletionAnno", [sort("Ctx1")]))
                , symbol(sort("CompletionPart"), parameterized-sort("CompletionPart", [sort("Ctx1")]))
                , symbol(sort("PlaceholderChar"), parameterized-sort("PlaceholderChar", [sort("Ctx1")]))
                , symbol(sort("Placeholder"), parameterized-sort("Placeholder", [sort("Ctx1")]))
                , symbol(sort("AttributeId"), parameterized-sort("AttributeId", [sort("Ctx1")]))
                , symbol(sort("MaybeColor"), parameterized-sort("MaybeColor", [sort("Ctx1")]))
                , symbol(sort("NoColor"), parameterized-sort("NoColor", [sort("Ctx1")]))
                , symbol(sort("Color"), parameterized-sort("Color", [sort("Ctx1")]))
                , symbol(sort("Font"), parameterized-sort("Font", [sort("Ctx1")]))
                , symbol(sort("TokenKindName"), parameterized-sort("TokenKindName", [sort("Ctx1")]))
                , symbol(sort("ColorNode"), parameterized-sort("ColorNode", [sort("Ctx1")]))
                , symbol(sort("Attribute"), parameterized-sort("Attribute", [sort("Ctx1")]))
                , symbol(sort("ColorRule"), parameterized-sort("ColorRule", [sort("Ctx1")]))
                , symbol(sort("OutlineRule"), parameterized-sort("OutlineRule", [sort("Ctx1")]))
                , symbol(
                    parameterized-sort("RuleNames", [sort("StrategoExpr")])
                  , parameterized-sort("RuleNames", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("RuleDec", [sort("StrategoExpr")])
                  , parameterized-sort("RuleDec", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("DynRuleScopeId", [sort("StrategoExpr")])
                  , parameterized-sort("DynRuleScopeId", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("DynRuleId", [sort("StrategoExpr")])
                  , parameterized-sort("DynRuleId", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("DynRuleDef", [sort("StrategoExpr")])
                  , parameterized-sort("DynRuleDef", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("ScopeLabels", [sort("StrategoExpr")])
                  , parameterized-sort("ScopeLabels", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("RuleCond", [sort("StrategoExpr")])
                  , parameterized-sort("RuleCond", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Rule", [sort("StrategoExpr")])
                  , parameterized-sort("Rule", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("RuleDef", [sort("StrategoExpr")])
                  , parameterized-sort("RuleDef", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Overlay", [sort("StrategoExpr")])
                  , parameterized-sort("Overlay", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("SwitchCase", [sort("StrategoExpr")])
                  , parameterized-sort("SwitchCase", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StrategyCurly", [sort("StrategoExpr")])
                  , parameterized-sort("StrategyCurly", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StrategyAngle", [sort("StrategoExpr")])
                  , parameterized-sort("StrategyAngle", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Kind", [sort("StrategoExpr")])
                  , parameterized-sort("Kind", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("LID", [sort("StrategoExpr")])
                  , parameterized-sort("LID", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("ImportModName", [sort("StrategoExpr")])
                  , parameterized-sort("ImportModName", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Decl", [sort("StrategoExpr")])
                  , parameterized-sort("Decl", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Module", [sort("StrategoExpr")])
                  , parameterized-sort("Module", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StrategyParen", [sort("StrategoExpr")])
                  , parameterized-sort("StrategyParen", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Typedid", [sort("StrategoExpr")])
                  , parameterized-sort("Typedid", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Anno", [sort("StrategoExpr")])
                  , parameterized-sort("Anno", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("EmptyId", [sort("StrategoExpr")])
                  , parameterized-sort("EmptyId", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StrategyDef", [sort("StrategoExpr")])
                  , parameterized-sort("StrategyDef", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("SVar", [sort("StrategoExpr")])
                  , parameterized-sort("SVar", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Def", [sort("StrategoExpr")])
                  , parameterized-sort("Def", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Type", [sort("StrategoExpr")])
                  , parameterized-sort("Type", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("RetType", [sort("StrategoExpr")])
                  , parameterized-sort("RetType", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("ArgType", [sort("StrategoExpr")])
                  , parameterized-sort("ArgType", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("FunType", [sort("StrategoExpr")])
                  , parameterized-sort("FunType", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("ConstType", [sort("StrategoExpr")])
                  , parameterized-sort("ConstType", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Opdecl", [sort("StrategoExpr")])
                  , parameterized-sort("Opdecl", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Sort", [sort("StrategoExpr")])
                  , parameterized-sort("Sort", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Sdecl", [sort("StrategoExpr")])
                  , parameterized-sort("Sdecl", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Wld", [sort("StrategoExpr")])
                  , parameterized-sort("Wld", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("ID", [sort("StrategoExpr")])
                  , parameterized-sort("ID", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Var", [sort("StrategoExpr")])
                  , parameterized-sort("Var", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("CharChar", [sort("StrategoExpr")])
                  , parameterized-sort("CharChar", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Char", [sort("StrategoExpr")])
                  , parameterized-sort("Char", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Padding", [sort("StrategoExpr")])
                  , parameterized-sort("Padding", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Dollar4", [sort("StrategoExpr")])
                  , parameterized-sort("Dollar4", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("QuotedBracket4", [sort("StrategoExpr")])
                  , parameterized-sort("QuotedBracket4", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StringQuotedChars4", [sort("StrategoExpr")])
                  , parameterized-sort("StringQuotedChars4", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StringQuotedPart4", [sort("StrategoExpr")])
                  , parameterized-sort("StringQuotedPart4", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Dollar3", [sort("StrategoExpr")])
                  , parameterized-sort("Dollar3", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("QuotedBracket3", [sort("StrategoExpr")])
                  , parameterized-sort("QuotedBracket3", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StringQuotedChars3", [sort("StrategoExpr")])
                  , parameterized-sort("StringQuotedChars3", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StringQuotedPart3", [sort("StrategoExpr")])
                  , parameterized-sort("StringQuotedPart3", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Dollar2", [sort("StrategoExpr")])
                  , parameterized-sort("Dollar2", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("QuotedBracket2", [sort("StrategoExpr")])
                  , parameterized-sort("QuotedBracket2", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StringQuotedChars2", [sort("StrategoExpr")])
                  , parameterized-sort("StringQuotedChars2", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StringQuotedPart2", [sort("StrategoExpr")])
                  , parameterized-sort("StringQuotedPart2", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Dollar1", [sort("StrategoExpr")])
                  , parameterized-sort("Dollar1", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("QuotedBracket1", [sort("StrategoExpr")])
                  , parameterized-sort("QuotedBracket1", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StringQuotedChars1", [sort("StrategoExpr")])
                  , parameterized-sort("StringQuotedChars1", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StringQuotedPart1", [sort("StrategoExpr")])
                  , parameterized-sort("StringQuotedPart1", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StringQuotation", [sort("StrategoExpr")])
                  , parameterized-sort("StringQuotation", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StrChar", [sort("StrategoExpr")])
                  , parameterized-sort("StrChar", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("String", [sort("StrategoExpr")])
                  , parameterized-sort("String", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Real", [sort("StrategoExpr")])
                  , parameterized-sort("Real", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Int", [sort("StrategoExpr")])
                  , parameterized-sort("Int", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Keyword", [sort("StrategoExpr")])
                  , parameterized-sort("Keyword", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("UCID", [sort("StrategoExpr")])
                  , parameterized-sort("UCID", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("LCID", [sort("StrategoExpr")])
                  , parameterized-sort("LCID", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("LId", [sort("StrategoExpr")])
                  , parameterized-sort("LId", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Id", [sort("StrategoExpr")])
                  , parameterized-sort("Id", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("ModNamePart", [sort("StrategoExpr")])
                  , parameterized-sort("ModNamePart", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("ModName", [sort("StrategoExpr")])
                  , parameterized-sort("ModName", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(sort("FoldingAnno"), parameterized-sort("FoldingAnno", [sort("Ctx1")]))
                , symbol(sort("FoldingRule"), parameterized-sort("FoldingRule", [sort("Ctx1")]))
                , symbol(sort("IndentDef"), parameterized-sort("IndentDef", [sort("Ctx1")]))
                , symbol(sort("FenceDef"), parameterized-sort("FenceDef", [sort("Ctx1")]))
                , symbol(sort("NoContinuation"), parameterized-sort("NoContinuation", [sort("Ctx1")]))
                , symbol(sort("BlockCommentDef"), parameterized-sort("BlockCommentDef", [sort("Ctx1")]))
                , symbol(sort("LanguageProperty"), parameterized-sort("LanguageProperty", [sort("Ctx1")]))
                , symbol(sort("PropertyValues"), parameterized-sort("PropertyValues", [sort("Ctx1")]))
                , symbol(sort("URL"), parameterized-sort("URL", [sort("Ctx1")]))
                , symbol(sort("PropertyValue"), parameterized-sort("PropertyValue", [sort("Ctx1")]))
                , symbol(sort("ReservedName"), parameterized-sort("ReservedName", [sort("Ctx1")]))
                , symbol(sort("Section"), parameterized-sort("Section", [sort("Ctx1")]))
                , symbol(sort("OnSaveAnno"), parameterized-sort("OnSaveAnno", [sort("Ctx1")]))
                , symbol(sort("StrategoCall"), parameterized-sort("StrategoCall", [sort("Ctx1")]))
                , symbol(sort("SemanticRule"), parameterized-sort("SemanticRule", [sort("Ctx1")]))
                , symbol(sort("SemanticNode"), parameterized-sort("SemanticNode", [sort("Ctx1")]))
                , symbol(sort("StrategoId"), parameterized-sort("StrategoId", [sort("Ctx1")]))
                , symbol(sort("ModuleName"), parameterized-sort("ModuleName", [sort("Ctx1")]))
                , symbol(sort("Node"), parameterized-sort("Node", [sort("Ctx1")]))
                , symbol(sort("ConstructorId"), parameterized-sort("ConstructorId", [sort("Ctx1")]))
                , symbol(sort("Constructor"), parameterized-sort("Constructor", [sort("Ctx1")]))
                , symbol(sort("String"), parameterized-sort("String", [sort("Ctx1")]))
                , symbol(sort("Sort"), parameterized-sort("Sort", [sort("Ctx1")]))
                , symbol(sort("SectionName"), parameterized-sort("SectionName", [sort("Ctx1")]))
                , symbol(sort("BACKSLASH"), parameterized-sort("BACKSLASH", [sort("Ctx1")]))
                , symbol(sort("StringChar"), parameterized-sort("StringChar", [sort("Ctx1")]))
                , symbol(sort("STRING"), parameterized-sort("STRING", [sort("Ctx1")]))
                , symbol(sort("Int"), parameterized-sort("Int", [sort("Ctx1")]))
                , symbol(sort("IdStar"), parameterized-sort("IdStar", [sort("Ctx1")]))
                , symbol(sort("Id"), parameterized-sort("Id", [sort("Ctx1")]))
                , symbol(sort("Grammar"), parameterized-sort("Grammar", [sort("Ctx1")]))
                , symbol(sort("Strategy"), parameterized-sort("Strategy", [sort("Ctx1")]))
                , symbol(
                    parameterized-sort("PreTerm", [sort("StrategoExpr")])
                  , parameterized-sort("PreTerm", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Term", [sort("StrategoExpr")])
                  , parameterized-sort("Term", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("StrategyMid", [sort("StrategoExpr")])
                  , parameterized-sort("StrategyMid", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                , symbol(
                    parameterized-sort("Strategy", [sort("StrategoExpr")])
                  , parameterized-sort("Strategy", [sort("Ctx1"), sort("StrategoExpr")])
                  )
                ]
              )
            )
          ]
        )
      ]
    , []
    )
  , module(
      unparameterized("TemplateLang")
    , [imports([module(unparameterized("SPXCommon"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      conc-grammars(
                        conc-grammars(
                          conc-grammars(
                            context-free-start-symbols([sort("SdfProduction"), sort("TemplateProduction"), sort("Template")])
                          , context-free-syntax(
                              [ prod(
                                  [sort("CONTENTCOMPLETE")]
                                , sort("TemplateProduction")
                                , attrs(
                                    [ term(default(fun(unquoted("recover"))))
                                    , term(
                                        default(appl(unquoted("cons"), [fun(quoted("\"WATER\""))]))
                                      )
                                    ]
                                  )
                                )
                              , prod(
                                  [sort("CONTENTCOMPLETE")]
                                , sort("PlaceholderOption")
                                , attrs(
                                    [ term(default(fun(unquoted("recover"))))
                                    , term(
                                        default(appl(unquoted("cons"), [fun(quoted("\"WATER\""))]))
                                      )
                                    ]
                                  )
                                )
                              , prod(
                                  [sort("CONTENTCOMPLETE")]
                                , sort("PlaceholderOptions")
                                , attrs(
                                    [ term(default(fun(unquoted("recover"))))
                                    , term(
                                        default(appl(unquoted("cons"), [fun(quoted("\"WATER\""))]))
                                      )
                                    ]
                                  )
                                )
                              ]
                            )
                          )
                        , context-free-syntax(
                            [ prod(
                                [lit("\"template\""), lit("\"options\""), iter-star(sort("TemplateOption"))]
                              , sort("Section")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"TemplateOptions\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [lit("\"newlines\""), lit("\":\""), sort("NewlineOptionValue")]
                              , sort("TemplateOption")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"Newlines\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [lit("\"none\"")]
                              , sort("NewlineOptionValue")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"None\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [lit("\"leading\"")]
                              , sort("NewlineOptionValue")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"Leading\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [lit("\"trailing\"")]
                              , sort("NewlineOptionValue")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"Trailing\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [lit("\"separating\"")]
                              , sort("NewlineOptionValue")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"Separating\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [lit("\"keyword\""), lit("\"-/-\""), parameterized-sort("Lookaheads", [sort("SDF")])]
                              , sort("TemplateOption")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"KeywordFollowRestriction\""))]))
                                   )]
                                )
                              )
                            ]
                          )
                        )
                      , context-free-syntax(
                          [ prod(
                              [sort("SortCons")]
                            , parameterized-sort("Group", [sort("SDF")])
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"simple-ref-group\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [lit("\"{\""), iter(sort("SortCons")), lit("\"}\"")]
                            , parameterized-sort("Group", [sort("SDF")])
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"prods-ref-group\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [ lit("\"{\"")
                              , parameterized-sort("Associativity", [sort("SDF")])
                              , lit("\":\"")
                              , iter(sort("SortCons"))
                              , lit("\"}\"")
                              ]
                            , parameterized-sort("Group", [sort("SDF")])
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"assoc-ref-group\""))]))
                                 )]
                              )
                            )
                          ]
                        )
                      )
                    , context-free-syntax(
                        [ prod(
                            [lit("\"templates\""), iter-star(sort("TemplateProduction"))]
                          , sort("Section")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"TemplateSection\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"lexical\""), lit("\"syntax\""), iter-star(sort("SdfProduction"))]
                          , parameterized-sort("Grammar", [sort("SDF")])
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"lexical-syntax\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"context-free\""), lit("\"syntax\""), iter-star(sort("SdfProduction"))]
                          , parameterized-sort("Grammar", [sort("SDF")])
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"context-free-syntax\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ sort("ID")
                            , lit("\"=\"")
                            , parameterized-sort("Symbols", [sort("SDF")])
                            , parameterized-sort("Attributes", [sort("SDF")])
                            ]
                          , sort("SdfProduction")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"SdfProduction\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ sort("SortCons")
                            , lit("\"=\"")
                            , parameterized-sort("Symbols", [sort("SDF")])
                            , parameterized-sort("Attributes", [sort("SDF")])
                            ]
                          , sort("SdfProduction")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"SdfProductionWithCons\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ sort("ID")
                            , lit("\"=\"")
                            , sort("Template")
                            , parameterized-sort("Attributes", [sort("SDF")])
                            ]
                          , sort("TemplateProduction")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"TemplateProduction\""))]))
                               )]
                            )
                          )
                        , prod(
                            [ sort("SortCons")
                            , lit("\"=\"")
                            , sort("Template")
                            , parameterized-sort("Attributes", [sort("SDF")])
                            ]
                          , sort("TemplateProduction")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"TemplateProductionWithCons\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("ID"), lit("\".\""), sort("ID")]
                          , sort("SortCons")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"SortCons\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"<\""), sort("Placeholder"), lit("\">\"")]
                          , sort("TemplatePart1")
                          , attrs([bracket()])
                          )
                        , prod(
                            [lit("\"[\""), sort("Placeholder"), lit("\"]\"")]
                          , sort("TemplatePart2")
                          , attrs([bracket()])
                          )
                        , prod(
                            [sort("PlaceholderSort"), sort("PlaceholderSuffix"), sort("PlaceholderOptions")]
                          , sort("Placeholder")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Placeholder\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("ID")]
                          , sort("PlaceholderSort")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"sort\""))]))
                               )]
                            )
                          )
                        , prod(
                            []
                          , sort("PlaceholderSuffix")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"None\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"*\"")]
                          , sort("PlaceholderSuffix")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Star\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"+\"")]
                          , sort("PlaceholderSuffix")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Plus\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"?\"")]
                          , sort("PlaceholderSuffix")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Option\""))]))
                               )]
                            )
                          )
                        , prod(
                            []
                          , sort("PlaceholderOptions")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"NoOptions\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\";\""), iter-sep(sort("PlaceholderOption"), lit("\",\""))]
                          , sort("PlaceholderOptions")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Options\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"hide\"")]
                          , sort("PlaceholderOption")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Hide\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"wrap\"")]
                          , sort("PlaceholderOption")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Wrap\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"anchor\"")]
                          , sort("PlaceholderOption")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Anchor\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"separator\""), lit("\"=\""), sort("STRING")]
                          , sort("PlaceholderOption")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Separator\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"text\""), lit("\"=\""), sort("STRING")]
                          , sort("PlaceholderOption")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Text\""))]))
                               )]
                            )
                          )
                        ]
                      )
                    )
                  , syntax(
                      [ prod(
                          [ lit("\"<\"")
                          , iter-sep(cf(sort("TemplateLine1")), lit("\"\\n\""))
                          , lit("\">\"")
                          ]
                        , cf(sort("Template"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Template\""))]))
                             )]
                          )
                        )
                      , prod(
                          [ lit("\"<<\"")
                          , iter-sep(cf(sort("TemplateLine1")), lit("\"\\n\""))
                          , lit("\">>\"")
                          ]
                        , cf(sort("Template"))
                        , attrs(
                            [ term(
                                default(appl(unquoted("cons"), [fun(quoted("\"Template\""))]))
                              )
                            , avoid()
                            , term(
                                default(appl(unquoted("deprecated"), [fun(quoted("\"Use single brackets to delimit the template\""))]))
                              )
                            ]
                          )
                        )
                      , prod(
                          [iter-star(cf(sort("TemplatePart1")))]
                        , cf(sort("TemplateLine1"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Line\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lex(sort("TemplateString1"))]
                        , cf(sort("TemplatePart1"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"String\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lex(sort("TemplateEscape1"))]
                        , cf(sort("TemplatePart1"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Escape\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lex(sort("TemplateLayout"))]
                        , cf(sort("TemplatePart1"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Layout\""))]))
                             )]
                          )
                        )
                      , prod(
                          [ lit("\"[\"")
                          , iter-sep(cf(sort("TemplateLine2")), lit("\"\\n\""))
                          , lit("\"]\"")
                          ]
                        , cf(sort("Template"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Template\""))]))
                             )]
                          )
                        )
                      , prod(
                          [ lit("\"[[\"")
                          , iter-sep(cf(sort("TemplateLine2")), lit("\"\\n\""))
                          , lit("\"]]\"")
                          ]
                        , cf(sort("Template"))
                        , attrs(
                            [ term(
                                default(appl(unquoted("cons"), [fun(quoted("\"Template\""))]))
                              )
                            , avoid()
                            , term(
                                default(appl(unquoted("deprecated"), [fun(quoted("\"Use single brackets to delimit the template\""))]))
                              )
                            ]
                          )
                        )
                      , prod(
                          [iter-star(cf(sort("TemplatePart2")))]
                        , cf(sort("TemplateLine2"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Line\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lex(sort("TemplateString2"))]
                        , cf(sort("TemplatePart2"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"String\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lex(sort("TemplateEscape2"))]
                        , cf(sort("TemplatePart2"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Escape\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lex(sort("TemplateLayout"))]
                        , cf(sort("TemplatePart2"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Layout\""))]))
                             )]
                          )
                        )
                      , prod(
                          [ci-lit("'\"'"), iter-star(cf(sort("TemplatePartQ"))), ci-lit("'\"'")]
                        , cf(sort("Template"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"SingleLineTemplate\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lex(sort("TemplateStringQ"))]
                        , cf(sort("TemplatePartQ"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"String\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lex(sort("TemplateEscapeQ"))]
                        , cf(sort("TemplatePartQ"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Escape\""))]))
                             )]
                          )
                        )
                      , prod(
                          [lex(sort("TemplateLayout"))]
                        , cf(sort("TemplatePartQ"))
                        , attrs(
                            [term(
                               default(appl(unquoted("cons"), [fun(quoted("\"Layout\""))]))
                             )]
                          )
                        )
                      ]
                    )
                  )
                , lexical-syntax(
                    [ prod(
                        [ char-class(simple-charclass(present(short("\\r"))))
                        , char-class(simple-charclass(present(short("\\n"))))
                        ]
                      , lit("\"\\n\"")
                      , no-attrs()
                      )
                    , prod(
                        [iter(
                           char-class(simple-charclass(present(conc(short("\\ "), short("\\t")))))
                         )]
                      , sort("TemplateLayout")
                      , no-attrs()
                      )
                    , prod(
                        [ iter(
                            alt(
                              char-class(
                                comp(
                                  simple-charclass(
                                    present(
                                      conc(
                                        short("\\\\")
                                      , conc(
                                          short("\\<")
                                        , conc(
                                            short("\\>")
                                          , conc(
                                              short("\\ ")
                                            , conc(short("\\t"), conc(short("\\r"), short("\\n")))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            , sort("Backslash1")
                            )
                          )
                        ]
                      , sort("TemplateString1")
                      , no-attrs()
                      )
                    , prod(
                        [ iter(
                            alt(
                              char-class(
                                comp(
                                  simple-charclass(
                                    present(
                                      conc(
                                        short("\\\\")
                                      , conc(
                                          short("\\[")
                                        , conc(
                                            short("\\]")
                                          , conc(
                                              short("\\ ")
                                            , conc(short("\\t"), conc(short("\\r"), short("\\n")))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            , sort("Backslash2")
                            )
                          )
                        ]
                      , sort("TemplateString2")
                      , no-attrs()
                      )
                    , prod(
                        [ iter(
                            char-class(
                              comp(
                                simple-charclass(
                                  present(
                                    conc(
                                      short("\\\\")
                                    , conc(short("\\\""), conc(short("\\ "), short("\\t")))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        ]
                      , sort("TemplateStringQ")
                      , no-attrs()
                      )
                    , prod(
                        [char-class(simple-charclass(present(short("\\\\"))))]
                      , sort("Backslash1")
                      , no-attrs()
                      )
                    , prod(
                        [char-class(simple-charclass(present(short("\\\\"))))]
                      , sort("Backslash2")
                      , no-attrs()
                      )
                    ]
                  )
                )
              , lexical-restrictions(
                  [ follow(
                      [sort("TemplateLayout")]
                    , single(
                        char-class(simple-charclass(present(conc(short("\\ "), short("\\t")))))
                      )
                    )
                  , follow(
                      [sort("TemplateString1")]
                    , single(
                        char-class(
                          comp(
                            simple-charclass(
                              present(
                                conc(
                                  short("\\\\")
                                , conc(
                                    short("\\<")
                                  , conc(
                                      short("\\>")
                                    , conc(
                                        short("\\ ")
                                      , conc(short("\\t"), conc(short("\\r"), short("\\n")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , follow(
                      [sort("TemplateString2")]
                    , single(
                        char-class(
                          comp(
                            simple-charclass(
                              present(
                                conc(
                                  short("\\\\")
                                , conc(
                                    short("\\[")
                                  , conc(
                                      short("\\]")
                                    , conc(
                                        short("\\ ")
                                      , conc(short("\\t"), conc(short("\\r"), short("\\n")))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , follow(
                      [sort("TemplateStringQ")]
                    , single(
                        char-class(
                          comp(
                            simple-charclass(
                              present(
                                conc(
                                  short("\\\\")
                                , conc(short("\\\""), conc(short("\\ "), short("\\t")))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , follow(
                      [sort("TemplateString1")]
                    , single(
                        seq(
                          simple-charclass(present(short("\\\\")))
                        , single(
                            char-class(
                              comp(
                                simple-charclass(
                                  present(
                                    conc(short("\\<"), conc(short("\\>"), short("\\\\")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , follow(
                      [sort("TemplateString2")]
                    , single(
                        seq(
                          simple-charclass(present(short("\\\\")))
                        , single(
                            char-class(
                              comp(
                                simple-charclass(
                                  present(
                                    conc(short("\\["), conc(short("\\]"), short("\\\\")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , follow(
                      [sort("Backslash1")]
                    , single(
                        char-class(
                          simple-charclass(
                            present(
                              conc(short("\\<"), conc(short("\\>"), short("\\\\")))
                            )
                          )
                        )
                      )
                    )
                  , follow(
                      [sort("Backslash2")]
                    , single(
                        char-class(
                          simple-charclass(
                            present(
                              conc(short("\\["), conc(short("\\]"), short("\\\\")))
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              )
            , lexical-syntax(
                [ prod([iter(sort("EscapedChar1"))], sort("TemplateEscape1"), no-attrs())
                , prod([iter(sort("EscapedChar2"))], sort("TemplateEscape2"), no-attrs())
                , prod([lit("\"\\\\<\"")], sort("EscapedChar1"), no-attrs())
                , prod([lit("\"\\\\>\"")], sort("EscapedChar1"), no-attrs())
                , prod([lit("\"\\\\\\\\\"")], sort("EscapedChar1"), no-attrs())
                , prod([lit("\"\\\\[\"")], sort("EscapedChar2"), no-attrs())
                , prod([lit("\"\\\\]\"")], sort("EscapedChar2"), no-attrs())
                , prod([lit("\"\\\\\\\\\"")], sort("EscapedChar2"), no-attrs())
                , prod(
                    [lit("\"<\""), iter-star(sort("EscapedChar")), lit("\">\"")]
                  , sort("EscapedChar1")
                  , no-attrs()
                  )
                , prod(
                    [ lit("\"<\\\\\\\\>\"")
                    , iter-star(
                        char-class(
                          simple-charclass(
                            present(
                              conc(short("\\ "), conc(short("\\t"), short("\\r")))
                            )
                          )
                        )
                      )
                    , char-class(simple-charclass(present(short("\\n"))))
                    ]
                  , sort("EscapedChar1")
                  , no-attrs()
                  )
                , prod(
                    [lit("\"[\""), iter-star(sort("EscapedChar")), lit("\"]\"")]
                  , sort("EscapedChar2")
                  , no-attrs()
                  )
                , prod(
                    [ lit("\"[\\\\\\\\]\"")
                    , iter-star(
                        char-class(
                          simple-charclass(
                            present(
                              conc(short("\\ "), conc(short("\\t"), short("\\r")))
                            )
                          )
                        )
                      )
                    , char-class(simple-charclass(present(short("\\n"))))
                    ]
                  , sort("EscapedChar2")
                  , no-attrs()
                  )
                , prod(
                    [iter(alt(lit("\"\\\\\\\\\""), sort("EscapedChar")))]
                  , sort("TemplateEscapeQ")
                  , no-attrs()
                  )
                , prod([lit("\"\\\\'\"")], sort("EscapedChar"), no-attrs())
                , prod([ci-lit("'\\\\\"'")], sort("EscapedChar"), no-attrs())
                , prod([lit("\"\\\\ \"")], sort("EscapedChar"), no-attrs())
                , prod([lit("\"\\\\t\"")], sort("EscapedChar"), no-attrs())
                , prod([lit("\"\\\\r\"")], sort("EscapedChar"), no-attrs())
                , prod([lit("\"\\\\n\"")], sort("EscapedChar"), no-attrs())
                , prod(
                    [ lit("\"\\\\u\"")
                    , iter(
                        char-class(
                          simple-charclass(
                            present(
                              conc(
                                range(short("0"), short("9"))
                              , conc(
                                  range(short("A"), short("F"))
                                , range(short("a"), short("f"))
                                )
                              )
                            )
                          )
                        )
                      )
                    ]
                  , sort("EscapedUnicodeChar")
                  , no-attrs()
                  )
                , prod([sort("EscapedUnicodeChar")], sort("EscapedChar"), no-attrs())
                , prod(
                    [lit("\"\\\\\""), char-class(comp(simple-charclass(absent())))]
                  , sort("EscapedChar")
                  , attrs(
                      [ term(default(fun(unquoted("recover"))))
                      , term(
                          default(appl(unquoted("cons"), [fun(quoted("\"WATER\""))]))
                        )
                      ]
                    )
                  )
                , prod(
                    [ lit("\"<\"")
                    , iter(char-class(comp(simple-charclass(present(short("\\>"))))))
                    , lit("\">\"")
                    ]
                  , sort("EscapedChar1")
                  , attrs(
                      [ term(default(fun(unquoted("recover"))))
                      , term(
                          default(appl(unquoted("cons"), [fun(quoted("\"WATER\""))]))
                        )
                      ]
                    )
                  )
                , prod(
                    [ lit("\"[\"")
                    , iter(char-class(comp(simple-charclass(present(short("\\]"))))))
                    , lit("\"]\"")
                    ]
                  , sort("EscapedChar2")
                  , attrs(
                      [ term(default(fun(unquoted("recover"))))
                      , term(
                          default(appl(unquoted("cons"), [fun(quoted("\"WATER\""))]))
                        )
                      ]
                    )
                  )
                ]
              )
            )
          , lexical-restrictions(
              [ follow(
                  [sort("TemplateEscape1")]
                , single(char-class(simple-charclass(present(short("\\\\")))))
                )
              , follow(
                  [sort("TemplateEscape1")]
                , single(
                    seq(
                      simple-charclass(present(short("\\<")))
                    , single(char-class(simple-charclass(present(short("\\\\")))))
                    )
                  )
                )
              , follow(
                  [sort("TemplateEscape2")]
                , single(char-class(simple-charclass(present(short("\\\\")))))
                )
              , follow(
                  [sort("TemplateEscape2")]
                , single(
                    seq(
                      simple-charclass(present(short("\\[")))
                    , single(char-class(simple-charclass(present(short("\\\\")))))
                    )
                  )
                )
              , follow(
                  [sort("TemplateEscapeQ")]
                , single(char-class(simple-charclass(present(short("\\\\")))))
                )
              , follow(
                  [sort("EscapedUnicodeChar")]
                , single(
                    char-class(
                      simple-charclass(
                        present(
                          conc(
                            range(short("0"), short("9"))
                          , conc(
                              range(short("A"), short("F"))
                            , range(short("a"), short("f"))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Naming")
    , [imports([module(unparameterized("SPXCommon"))])]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  context-free-syntax(
                    [ prod(
                        [sort("Namespace"), lit("\"@=\""), parameterized-sort("Symbol", [sort("SDF")])]
                      , parameterized-sort("Symbol", [sort("SDF")])
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"namespacedef\""))]))
                           )]
                        )
                      )
                    , prod(
                        [parameterized-sort("IdCon", [sort("SDF")])]
                      , sort("Namespace")
                      , no-attrs()
                      )
                    ]
                  )
                , syntax(
                    [ prod(
                        [lit("\"@\""), cf(sort("Namespace"))]
                      , cf(parameterized-sort("Symbol", [sort("SDF")]))
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"namespaceref\""))]))
                           )]
                        )
                      )
                    , prod(
                        [ cf(sort("Namespace"))
                        , lit("\"@\"")
                        , cf(parameterized-sort("Symbol", [sort("SDF")]))
                        ]
                      , cf(parameterized-sort("Symbol", [sort("SDF")]))
                      , attrs(
                          [term(
                             default(appl(unquoted("cons"), [fun(quoted("\"namespaceref2\""))]))
                           )]
                        )
                      )
                    ]
                  )
                )
              , context-free-syntax(
                  [ prod(
                      [ lit("\"scope\"")
                      , lit("\"(\"")
                      , iter-sep(sort("Namespace"), lit("\",\""))
                      , lit("\")\"")
                      ]
                    , parameterized-sort("Attribute", [sort("SDF")])
                    , attrs(
                        [ prefer()
                        , term(
                            default(appl(unquoted("ast"), [fun(quoted("\"term(default(appl(unquoted(\\\"scope\\\"), [fun(quoted(<1>))])))\""))]))
                          )
                        ]
                      )
                    )
                  ]
                )
              )
            , context-free-priorities(
                [ chain(
                    [ simple-group(
                        prod(
                          [parameterized-sort("Symbol", [sort("SDF")]), lit("\"?\"")]
                        , parameterized-sort("Symbol", [sort("SDF")])
                        , no-attrs()
                        )
                      )
                    , simple-group(
                        prod(
                          [sort("Symbol"), lit("\"?\"")]
                        , sort("Symbol")
                        , no-attrs()
                        )
                      )
                    , simple-group(
                        prod(
                          [sort("Namespace"), lit("\"@=\""), parameterized-sort("Symbol", [sort("SDF")])]
                        , parameterized-sort("Symbol", [sort("SDF")])
                        , no-attrs()
                        )
                      )
                    ]
                  )
                ]
              )
            )
          , lexical-restrictions(
              [ follow(
                  [parameterized-sort("Sort", [sort("SDF")])]
                , single(char-class(simple-charclass(present(short("\\@")))))
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("Concepts")
    , [imports([module(unparameterized("SPXCommon"))])]
    , [ exports(
          context-free-syntax(
            [ prod(
                [lit("\"concepts\""), iter-star(sort("ConceptDef"))]
              , sort("ConceptSection")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"Concepts\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"concepts\"")]
              , sort("ModuleName")
              , attrs([reject()])
              )
            , prod(
                [lit("\"concept\""), sort("ID"), lit("\":\""), sort("Rule")]
              , sort("ConceptDef")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"ConceptDef\""))]))
                   )]
                )
              )
            , prod(
                [lit("\"rule\""), sort("Rule"), lit("\":\""), iter-star(sort("ID"))]
              , sort("ConceptDef")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"RuleDef\""))]))
                   )]
                )
              )
            , prod(
                [sort("ID")]
              , sort("Rule")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"Rule1\""))]))
                   )]
                )
              )
            , prod(
                [sort("ID"), lit("\"->\""), sort("ID")]
              , sort("Rule")
              , attrs(
                  [term(
                     default(appl(unquoted("cons"), [fun(quoted("\"Rule2\""))]))
                   )]
                )
              )
            ]
          )
        )
      ]
    )
  , module(
      unparameterized("SPXCommon")
    , []
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      lexical-syntax(
                        [ prod(
                            [ iter-star(
                                char-class(
                                  simple-charclass(
                                    present(
                                      conc(
                                        range(short("a"), short("z"))
                                      , range(short("A"), short("Z"))
                                      )
                                    )
                                  )
                                )
                              )
                            , lit("\"CONTENTCOMPLETE\"")
                            , iter(
                                char-class(simple-charclass(present(range(short("0"), short("9")))))
                              )
                            ]
                          , sort("CONTENTCOMPLETE")
                          , attrs([avoid()])
                          )
                        , prod(
                            [ char-class(
                                simple-charclass(
                                  present(
                                    conc(
                                      range(short("a"), short("z"))
                                    , range(short("A"), short("Z"))
                                    )
                                  )
                                )
                              )
                            , iter-star(
                                char-class(
                                  simple-charclass(
                                    present(
                                      conc(
                                        range(short("a"), short("z"))
                                      , conc(
                                          range(short("A"), short("Z"))
                                        , conc(
                                            range(short("0"), short("9"))
                                          , conc(short("\\_"), short("\\-"))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            ]
                          , sort("ID")
                          , no-attrs()
                          )
                        , prod(
                            [ opt(lit("\"-\""))
                            , iter(
                                char-class(simple-charclass(present(range(short("0"), short("9")))))
                              )
                            ]
                          , sort("INT")
                          , no-attrs()
                          )
                        , prod(
                            [lit("\"\\\"\""), iter-star(sort("StringChar")), lit("\"\\\"\"")]
                          , sort("STRING")
                          , no-attrs()
                          )
                        , prod(
                            [char-class(
                               comp(simple-charclass(present(conc(short("\\\""), short("\\n")))))
                             )]
                          , sort("StringChar")
                          , no-attrs()
                          )
                        , prod([lit("\"\\\\\\\"\"")], sort("StringChar"), no-attrs())
                        , prod([sort("BackSlashChar")], sort("StringChar"), no-attrs())
                        , prod([lit("\"\\\\\"")], sort("BackSlashChar"), no-attrs())
                        , prod(
                            [ char-class(
                                simple-charclass(
                                  present(
                                    conc(
                                      short("\\ ")
                                    , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                                    )
                                  )
                                )
                              )
                            ]
                          , layout()
                          , no-attrs()
                          )
                        , prod(
                            [char-class(simple-charclass(present(short("\\*"))))]
                          , sort("CommentChar")
                          , no-attrs()
                          )
                        , prod(
                            [ lit("\"/*\"")
                            , iter-star(
                                alt(
                                  char-class(comp(simple-charclass(present(short("\\*")))))
                                , sort("CommentChar")
                                )
                              )
                            , lit("\"*/\"")
                            ]
                          , layout()
                          , no-attrs()
                          )
                        , prod(
                            [ lit("\"//\"")
                            , iter-star(
                                char-class(
                                  comp(simple-charclass(present(conc(short("\\n"), short("\\r")))))
                                )
                              )
                            , alt(
                                char-class(simple-charclass(present(conc(short("\\n"), short("\\r")))))
                              , sort("EOF")
                              )
                            ]
                          , layout()
                          , no-attrs()
                          )
                        , prod([], sort("EOF"), no-attrs())
                        ]
                      )
                    , lexical-restrictions(
                        [ follow(
                            [sort("CommentChar")]
                          , single(char-class(simple-charclass(present(short("\\/")))))
                          )
                        , follow(
                            [sort("INT")]
                          , single(
                              char-class(simple-charclass(present(range(short("0"), short("9")))))
                            )
                          )
                        , follow(
                            [sort("ID")]
                          , single(
                              char-class(
                                simple-charclass(
                                  present(
                                    conc(
                                      range(short("a"), short("z"))
                                    , conc(
                                        range(short("A"), short("Z"))
                                      , conc(
                                          range(short("0"), short("9"))
                                        , conc(short("\\_"), short("\\-"))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        , follow(
                            [sort("EOF")]
                          , single(char-class(comp(simple-charclass(absent()))))
                          )
                        , follow(
                            [sort("BackSlashChar")]
                          , single(char-class(simple-charclass(present(short("\\\"")))))
                          )
                        ]
                      )
                    )
                  , context-free-restrictions(
                      [ follow(
                          [opt(layout())]
                        , single(
                            char-class(
                              simple-charclass(
                                present(
                                  conc(
                                    short("\\ ")
                                  , conc(short("\\t"), conc(short("\\n"), short("\\r")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      , follow(
                          [opt(layout())]
                        , single(
                            seq(
                              simple-charclass(present(short("\\/")))
                            , single(char-class(simple-charclass(present(short("\\/")))))
                            )
                          )
                        )
                      , follow(
                          [opt(layout())]
                        , single(
                            seq(
                              simple-charclass(present(short("\\/")))
                            , single(char-class(simple-charclass(present(short("\\*")))))
                            )
                          )
                        )
                      ]
                    )
                  )
                , lexical-restrictions(
                    [ follow(
                        [ lit("\"main\"")
                        , lit("\"module\"")
                        , lit("\"package\"")
                        , lit("\"imports\"")
                        , lit("\"language\"")
                        , lit("\"definition\"")
                        , lit("\"keywords\"")
                        , lit("\"follow-restriction\"")
                        , lit("\"words\"")
                        ]
                      , single(
                          char-class(
                            simple-charclass(
                              present(
                                conc(
                                  range(short("A"), short("Z"))
                                , conc(
                                    range(short("a"), short("z"))
                                  , conc(range(short("0"), short("9")), short("\\_"))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    ]
                  )
                )
              , lexical-syntax(
                  [ prod([lit("\"language\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"project\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"builders\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"colorer\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"references\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"outliner\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"folding\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"completions\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"package\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"module\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"retain\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"with\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"unimports\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"imports\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"overlays\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"rules\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"signature\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"strategies\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"attributes\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"aliases\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"lexical\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"priorities\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"context-free\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"definition\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"syntax\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"variables\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"module\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"imports\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"exports\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"hiddens\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"left\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"right\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"assoc\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"non-assoc\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"bracket\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"sorts\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"bracket\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"sorts\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"restrictions\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"as\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"main\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"__default\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"__internal\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"template\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"templates\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"keywords\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"words\"")], sort("Reserved"), no-attrs())
                  , prod([lit("\"follow-restriction\"")], sort("Reserved"), no-attrs())
                  , prod(
                      [sort("Reserved")]
                    , parameterized-sort("ReservedName", [sort("ESV")])
                    , no-attrs()
                    )
                  , prod(
                      [parameterized-sort("ReservedName", [sort("ESV")])]
                    , sort("ID")
                    , attrs([reject()])
                    )
                  ]
                )
              )
            , lexical-syntax(
                [ prod([lit("\"package\"")], sort("EnclosingSymbol"), no-attrs())
                , prod([lit("\"assembly\"")], sort("EnclosingSymbol"), no-attrs())
                , prod([lit("\"module\"")], sort("EnclosingSymbol"), no-attrs())
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"main\"")]
                , sort("MainID")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Main\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , module(
      unparameterized("SpoofaxLang")
    , [ imports(
          [ module(unparameterized("SPXCommon"))
          , module(unparameterized("Concepts"))
          , module(unparameterized("Naming"))
          , module(unparameterized("TemplateLang"))
          , module(parameterized("EditorServiceMix", [sort("ESV")]))
          , renamed-module(
              parameterized("Stratego-AttributesMix", [sort("STR")])
            , renamings(
                [ production(
                    prod(
                      [lit("\"imports\""), iter-star(sort("ImportModName"))]
                    , sort("Decl")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"Imports\""))]))
                         )]
                      )
                    )
                  , prod([sort("UNDEFINED")], sort("IGNORED"), no-attrs())
                  )
                ]
              )
            )
          , renamed-module(
              parameterized("SDFMix", [sort("SDF")])
            , renamings(
                [ production(
                    prod(
                      [lit("\"definition\""), sort("Definition")]
                    , sort("SDF")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"Definition\""))]))
                         )]
                      )
                    )
                  , prod([], sort("IGNORED"), no-attrs())
                  )
                , production(
                    prod(
                      [ lit("\"module\"")
                      , sort("ModuleName")
                      , label(unquoted("list"), iter-star(sort("ImpSection")))
                      , sort("Sections")
                      ]
                    , sort("Module")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"module\""))]))
                         )]
                      )
                    )
                  , prod([], sort("IGNORED"), no-attrs())
                  )
                , production(
                    prod(
                      [ label(quoted("\"left\""), sort("Grammar"))
                      , label(quoted("\"right\""), sort("Grammar"))
                      ]
                    , sort("Grammar")
                    , attrs(
                        [ assoc(assoc())
                        , term(
                            default(appl(unquoted("cons"), [fun(quoted("\"conc-grammars\""))]))
                          )
                        ]
                      )
                    )
                  , prod([], sort("IGNORED"), no-attrs())
                  )
                , production(
                    prod(
                      [sort("ImpSection")]
                    , sort("Grammar")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"imp-section\""))]))
                         )]
                      )
                    )
                  , prod([], sort("IGNORED"), no-attrs())
                  )
                ]
              )
            )
          ]
        )
      ]
    , [ exports(
          conc-grammars(
            conc-grammars(
              conc-grammars(
                conc-grammars(
                  conc-grammars(
                    conc-grammars(
                      conc-grammars(
                        conc-grammars(
                          conc-grammars(
                            conc-grammars(
                              conc-grammars(
                                conc-grammars(
                                  context-free-start-symbols([sort("Start")])
                                , lexical-syntax(
                                    [ prod(
                                        [iter-sep(sort("ID"), lit("\"/\""))]
                                      , sort("QID")
                                      , no-attrs()
                                      )
                                    , prod(
                                        [iter-sep(sort("ID"), alt(lit("\"/\""), lit("\".\"")))]
                                      , sort("QIDWithDots")
                                      , no-attrs()
                                      )
                                    ]
                                  )
                                )
                              , context-free-syntax(
                                  [ prod(
                                      [iter-star(sort("ImportSection")), iter-star(sort("PackageDefinition"))]
                                    , sort("Start")
                                    , attrs(
                                        [term(
                                           default(appl(unquoted("cons"), [fun(quoted("\"CompilationUnit\""))]))
                                         )]
                                      )
                                    )
                                  , prod(
                                      [iter-star(sort("Module"))]
                                    , sort("Start")
                                    , attrs(
                                        [ term(
                                            default(appl(unquoted("cons"), [fun(quoted("\"CompilationUnit\""))]))
                                          )
                                        , prefer()
                                        ]
                                      )
                                    )
                                  , prod(
                                      [lit("\"package\""), sort("QName"), iter-star(sort("Module"))]
                                    , sort("PackageDefinition")
                                    , attrs(
                                        [term(
                                           default(appl(unquoted("cons"), [fun(quoted("\"Package\""))]))
                                         )]
                                      )
                                    )
                                  , prod(
                                      [ opt(sort("MainID"))
                                      , lit("\"module\"")
                                      , sort("SPXModuleName")
                                      , iter-star(sort("Section"))
                                      ]
                                    , sort("Module")
                                    , attrs(
                                        [term(
                                           default(appl(unquoted("cons"), [fun(quoted("\"Module\""))]))
                                         )]
                                      )
                                    )
                                  , prod(
                                      [parameterized-sort("Grammar", [sort("SDF")])]
                                    , sort("Section")
                                    , attrs(
                                        [term(
                                           default(appl(unquoted("cons"), [fun(quoted("\"SDFSection\""))]))
                                         )]
                                      )
                                    )
                                  , prod(
                                      [parameterized-sort("Decl", [sort("STR")])]
                                    , sort("Section")
                                    , attrs(
                                        [term(
                                           default(appl(unquoted("cons"), [fun(quoted("\"STRSection\""))]))
                                         )]
                                      )
                                    )
                                  , prod(
                                      [parameterized-sort("Section", [sort("ESV")])]
                                    , sort("Section")
                                    , attrs(
                                        [term(
                                           default(appl(unquoted("cons"), [fun(quoted("\"ESVSection\""))]))
                                         )]
                                      )
                                    )
                                  , prod([sort("ImportSection")], sort("Section"), no-attrs())
                                  , prod([sort("ConceptSection")], sort("Section"), no-attrs())
                                  , prod(
                                      [sort("ExportsOrHiddens"), parameterized-sort("Grammar", [sort("SDF")])]
                                    , sort("Section")
                                    , attrs(
                                        [ term(
                                            default(appl(unquoted("cons"), [fun(quoted("\"SDFSectionEH\""))]))
                                          )
                                        , assoc(non-assoc())
                                        ]
                                      )
                                    )
                                  , prod(
                                      [lit("\"exports\"")]
                                    , sort("ExportsOrHiddens")
                                    , attrs(
                                        [ term(
                                            default(appl(unquoted("cons"), [fun(quoted("\"Exports\""))]))
                                          )
                                        , term(default(fun(unquoted("deprecated"))))
                                        ]
                                      )
                                    )
                                  , prod(
                                      [lit("\"hiddens\"")]
                                    , sort("ExportsOrHiddens")
                                    , attrs(
                                        [ term(
                                            default(appl(unquoted("cons"), [fun(quoted("\"Hiddens\""))]))
                                          )
                                        , term(default(fun(unquoted("deprecated"))))
                                        ]
                                      )
                                    )
                                  ]
                                )
                              )
                            , context-free-syntax([])
                            )
                          , context-free-syntax(
                              [ prod(
                                  [ sort("QID")
                                  , lit("\"[\"")
                                  , parameterized-sort("Symbols", [sort("SDF")])
                                  , lit("\"]\"")
                                  ]
                                , sort("QName")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"ParamName\""))]))
                                     )]
                                  )
                                )
                              , prod(
                                  [sort("QID")]
                                , sort("LegacyImportName")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"Name\""))]))
                                     )]
                                  )
                                )
                              , prod(
                                  [iter-sep(sort("ID"), lit("\".\""))]
                                , sort("QName")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"QName\""))]))
                                     )]
                                  )
                                )
                              , prod(
                                  [sort("ID")]
                                , sort("QName")
                                , attrs(
                                    [ term(
                                        default(appl(unquoted("cons"), [fun(quoted("\"Name\""))]))
                                      )
                                    , prefer()
                                    ]
                                  )
                                )
                              , prod(
                                  [sort("ID")]
                                , sort("SPXModuleName")
                                , attrs(
                                    [term(
                                       default(appl(unquoted("cons"), [fun(quoted("\"SPXModuleName\""))]))
                                     )]
                                  )
                                )
                              ]
                            )
                          )
                        , context-free-syntax(
                            [ prod(
                                [lit("\"imports\""), iter-star(sort("Import"))]
                              , sort("ImportSection")
                              , attrs(
                                  [ term(
                                      default(appl(unquoted("cons"), [fun(quoted("\"Imports\""))]))
                                    )
                                  , prefer()
                                  ]
                                )
                              )
                            , prod(
                                [lit("\"unimports\""), iter-star(sort("Import"))]
                              , sort("ImportSection")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"Unimports\""))]))
                                   )]
                                )
                              )
                            , prod([sort("ImportedModule")], sort("Import"), no-attrs())
                            , prod(
                                [sort("ModuleName")]
                              , sort("Import")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"Import\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("ModuleName"), lit("\"retain\""), parameterized-sort("Renamings", [sort("SDF")])]
                              , sort("Import")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"ImportRetain\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [sort("ModuleName"), parameterized-sort("Renamings", [sort("SDF")])]
                              , sort("Import")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"ImportRename\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [lit("\"namespace\""), sort("QIDWithDots")]
                              , sort("Import")
                              , attrs(
                                  [term(
                                     default(appl(unquoted("cons"), [fun(quoted("\"NamespaceImport\""))]))
                                   )]
                                )
                              )
                            , prod(
                                [lit("\"(\""), sort("Import"), lit("\")\"")]
                              , sort("Import")
                              , attrs([bracket(), term(default(fun(unquoted("deprecated"))))])
                              )
                            ]
                          )
                        )
                      , context-free-syntax(
                          [ prod(
                              [sort("LegacyImportName")]
                            , sort("ImportedModule")
                            , attrs(
                                [term(
                                   default(appl(unquoted("cons"), [fun(quoted("\"ImportLegacyArtifact\""))]))
                                 )]
                              )
                            )
                          , prod(
                              [sort("QName"), lit("\"::\""), sort("SPXModuleName")]
                            , sort("ImportedModule")
                            , attrs(
                                [ term(
                                    default(appl(unquoted("cons"), [fun(quoted("\"ImportSpxModule\""))]))
                                  )
                                , prefer()
                                ]
                              )
                            )
                          , prod(
                              [sort("QName")]
                            , sort("ImportedModule")
                            , attrs(
                                [ term(
                                    default(appl(unquoted("cons"), [fun(quoted("\"ImportPackage\""))]))
                                  )
                                , prefer()
                                ]
                              )
                            )
                          , prod(
                              [sort("QName"), lit("\"as\""), sort("ID")]
                            , sort("ImportedModule")
                            , attrs(
                                [ term(
                                    default(appl(unquoted("cons"), [fun(quoted("\"ImportPackageWithAlias\""))]))
                                  )
                                , prefer()
                                ]
                              )
                            )
                          ]
                        )
                      )
                    , context-free-syntax(
                        [ prod(
                            [lit("\"[\""), iter-sep(sort("AttributeDef"), lit("\",\"")), lit("\"]\"")]
                          , sort("Attribute")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"AttributeSection\""))]))
                               )]
                            )
                          )
                        , prod([sort("ID")], sort("AttributeDef"), no-attrs())
                        , prod(
                            [sort("ID"), sort("Attribute-arguments")]
                          , sort("AttributeDef")
                          , attrs([prefer()])
                          )
                        , prod(
                            [sort("Target"), lit("\":\""), sort("Attribute")]
                          , sort("AttributeDef")
                          , attrs([assoc(non-assoc())])
                          )
                        , prod(
                            [sort("EnclosingSymbol")]
                          , sort("Target")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Target\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("ID")]
                          , sort("Argument-name")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Argument-Name\""))]))
                               )]
                            )
                          )
                        , prod([sort("ID")], sort("Attribute-argument-expression"), no-attrs())
                        , prod(
                            [opt(sort("Argument-name")), sort("Attribute-argument-expression")]
                          , sort("Positional-argument")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Positional-argument\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("STRING")]
                          , sort("Positional-argument")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Positional-argument\""))]))
                               )]
                            )
                          )
                        , prod(
                            [sort("ID"), lit("\"=\""), sort("STRING")]
                          , sort("Named-argument")
                          , attrs(
                              [term(
                                 default(appl(unquoted("cons"), [fun(quoted("\"Named-argument\""))]))
                               )]
                            )
                          )
                        , prod(
                            [lit("\"(\""), iter-sep(sort("Named-argument"), lit("\",\"")), lit("\")\"")]
                          , sort("Attribute-arguments")
                          , no-attrs()
                          )
                        , prod(
                            [lit("\"(\""), iter-sep(sort("Positional-argument"), lit("\",\"")), lit("\")\"")]
                          , sort("Attribute-arguments")
                          , no-attrs()
                          )
                        , prod(
                            [ lit("\"(\"")
                            , iter-sep(sort("Positional-argument"), lit("\",\""))
                            , lit("\",\"")
                            , iter-star-sep(sort("Named-argument"), lit("\",\""))
                            , lit("\")\"")
                            ]
                          , sort("Attribute-arguments")
                          , attrs([prefer()])
                          )
                        ]
                      )
                    )
                  , context-free-syntax(
                      [ prod(
                          [sort("Reserved")]
                        , parameterized-sort("ReservedName", [sort("ESV")])
                        , no-attrs()
                        )
                      , prod(
                          [parameterized-sort("ReservedName", [sort("ESV")])]
                        , sort("ModuleName")
                        , attrs([reject()])
                        )
                      ]
                    )
                  )
                , context-free-syntax(
                    [ prod(
                        [sort("Constructor")]
                      , parameterized-sort("Attribute", [sort("SDF")])
                      , attrs(
                          [ prefer()
                          , term(
                              default(appl(unquoted("cons"), [fun(quoted("\"Constructor\""))]))
                            )
                          ]
                        )
                      )
                    , prod(
                        [lit("\"recover\"")]
                      , parameterized-sort("Attribute", [sort("SDF")])
                      , attrs(
                          [ prefer()
                          , term(
                              default(appl(unquoted("ast"), [fun(quoted("\"term(default(fun(unquoted(\\\"recover\\\"))))\""))]))
                            )
                          ]
                        )
                      )
                    , prod(
                        [lit("\"incremental\"")]
                      , parameterized-sort("Attribute", [sort("SDF")])
                      , attrs(
                          [ prefer()
                          , term(
                              default(appl(unquoted("ast"), [fun(quoted("\"term(default(fun(unquoted(\\\"incremental\\\"))))\""))]))
                            )
                          ]
                        )
                      )
                    , prod(
                        [lit("\"deprecated\"")]
                      , parameterized-sort("Attribute", [sort("SDF")])
                      , attrs(
                          [ prefer()
                          , term(
                              default(appl(unquoted("ast"), [fun(quoted("\"term(default(fun(unquoted(\\\"deprecated\\\"))))\""))]))
                            )
                          ]
                        )
                      )
                    , prod(
                        [lit("\"deprecated\""), lit("\"(\""), sort("STRING"), lit("\")\"")]
                      , parameterized-sort("Attribute", [sort("SDF")])
                      , attrs(
                          [ prefer()
                          , term(
                              default(appl(unquoted("ast"), [fun(quoted("\"term(default(appl(unquoted(\\\"deprecated\\\"), [fun(quoted(<1>))])))\""))]))
                            )
                          ]
                        )
                      )
                    , prod(
                        [lit("\"cons\""), lit("\"(\""), sort("Constructor"), lit("\")\"")]
                      , parameterized-sort("Attribute", [sort("SDF")])
                      , attrs(
                          [ prefer()
                          , term(
                              default(appl(unquoted("ast"), [fun(quoted("\"term(default(appl(unquoted(\\\"cons\\\"), [fun(quoted(<1>))])))\""))]))
                            )
                          ]
                        )
                      )
                    , prod(
                        [parameterized-sort("StrCon", [sort("SDF")])]
                      , sort("Constructor")
                      , no-attrs()
                      )
                    ]
                  )
                )
              , context-free-syntax(
                  [ prod(
                      [ lit("\"internal\"")
                      , lit("\"strategies\"")
                      , iter-star(parameterized-sort("Def", [sort("STR")]))
                      ]
                    , parameterized-sort("Decl", [sort("STR")])
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"InternalStrategies\""))]))
                         )]
                      )
                    )
                  , prod(
                      [ lit("\"internal\"")
                      , lit("\"rules\"")
                      , iter-star(parameterized-sort("Def", [sort("STR")]))
                      ]
                    , parameterized-sort("Decl", [sort("STR")])
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"InternalRules\""))]))
                         )]
                      )
                    )
                  , prod(
                      [parameterized-sort("Var", [sort("STR")]), lit("\":\""), sort("ID")]
                    , parameterized-sort("Var", [sort("STR")])
                    , attrs(
                        [ avoid()
                        , term(
                            default(appl(unquoted("cons"), [fun(quoted("\"VarWithType\""))]))
                          )
                        ]
                      )
                    )
                  , prod(
                      [sort("QName"), lit("\".\""), parameterized-sort("Id", [sort("STR")])]
                    , parameterized-sort("SVar", [sort("STR")])
                    , attrs(
                        [ avoid()
                        , term(
                            default(appl(unquoted("cons"), [fun(quoted("\"QualifiedSVar\""))]))
                          )
                        ]
                      )
                    )
                  , prod(
                      [sort("QName"), lit("\".\""), parameterized-sort("Sort", [sort("SDF")])]
                    , sort("QualifiedSort")
                    , attrs(
                        [term(
                           default(appl(unquoted("cons"), [fun(quoted("\"QualifiedSort\""))]))
                         )]
                      )
                    )
                  , prod(
                      [sort("QualifiedSort")]
                    , parameterized-sort("Symbol", [sort("SDF")])
                    , no-attrs()
                    )
                  ]
                )
              )
            , context-free-restrictions(
                [ follow(
                    [sort("QualifiedSort")]
                  , single(
                      char-class(
                        simple-charclass(
                          present(
                            conc(
                              range(short("a"), short("z"))
                            , conc(
                                range(short("A"), short("Z"))
                              , conc(
                                  range(short("0"), short("9"))
                                , conc(short("\\."), short("\\-"))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ]
              )
            )
          , context-free-syntax(
              [ prod(
                  [lit("\"language keywords\""), sort("KeywordSymbols"), sort("Keywords"), opt(sort("KeywordRestriction"))]
                , sort("Section")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"KeywordSection\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"symbols\""), iter(parameterized-sort("Symbol", [sort("SDF")]))]
                , sort("KeywordSymbols")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"KeywordSymbols\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"words\""), iter(sort("ID"))]
                , sort("Keywords")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"Keywords\""))]))
                     )]
                  )
                )
              , prod(
                  [lit("\"follow-restriction\""), parameterized-sort("Lookaheads", [sort("SDF")])]
                , sort("KeywordRestriction")
                , attrs(
                    [term(
                       default(appl(unquoted("cons"), [fun(quoted("\"FollowRestriction\""))]))
                     )]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  ]
)