module context/template/declare

imports
  context/sdf/declare
  include/SpoofaxLang
  utils/annotations
  context/symboltable
  context/signatures
  normalize/signatures
  context/scope-tree
  common
	 
	
signature
  constructors
    // Options
    Newlines : X
    KeywordFollowRestriction : X 

strategies

  /** @type List(TemplateProduction) -> List(TemplateProduction) */
  declare-template-definition-main = map(declare-template-definition)

  /** @type List(TemplateOption) -> List(TemplateOption) */
  declare-template-options-main = map(declare-template-option)

 	init-template-options =
 		activate-global-scope(
	    if not(is-template-option-initialized) then
	    	  <index-template-option>(Newlines() ,None())
	    	; <index-template-option>(KeywordFollowRestriction() ,None())
	    	; index-template-option-flag
	  	end
  	)  

rules
  // Declarations are shared with SDF (same DR)
  // The sorts and cons declared using templates are in exactly the same
  // namespace as if they would be declared using an equivalent piece of SDF.

  declare-template-definition:
    prod @ TemplateProduction(sort, template, attrs) -> <id>
    where 
    	with-spxverify(
    		<declare-sdf-definition-internal> (prod, template, sort, attrs)
			)
		// with
		//   if not(<collect-one(?sdf-cons(<un-double-quote>))> attrs);
		//      <collect-one(?bracket())> attrs then
	    	//    rules(BracketTemplateProduction :+ sort -> template)
		//  end

rules

  // Invoked by declare-sdf-definition-internal
  declare-sdf-usage:
    Placeholder(sort(x), _, _) -> <id>
    where with-spxverify(
      <index-sdf-usage(|Unqualified())>x
    )  



rules // Options

  declare-template-option:
    Newlines(t) -> <id>
    where 
    	with-spxverify(
    			<index-template-option>(Newlines() , t)
  		)

  declare-template-option:
  	KeywordFollowRestriction(t) -> <id>
  	where 
    	with-spxverify(
      		<index-template-option>(KeywordFollowRestriction(), t)
  		)
rules 
	//resolve templatelang options 
	get-template-option =  
		? key
		; with-spxverify( 
		  	activate-global-scope(
		  		result := <resolve-symbol-definition>(key, TemplateOptions()) 
	  		)
	  		, !"Failed to get template option"
		  )
	  ; !result 
	    
	index-template-option = 
		? (key, value)
		; with-spxverify(  
		  	<index-symbol-definition>(key, TemplateOptions() ,  value) 
		  	, !"Failed to index template option"
  	  )
	
signature constructors 
	HasTemplateOptionFlag : Flag 

rules 
	
	get-keyword-follow-restriction = <get-template-option> KeywordFollowRestriction()
	 
	index-template-option-flag = 
			<get-constructor>HasTemplateOptionFlag() => cons-name
			; <index-symbol-definition>(cons-name, HasTemplateOptionFlag(),  cons-name)
	  
	is-template-option-initialized = 
		<get-constructor>HasTemplateOptionFlag() => key ; 
		<resolve-symbol-definition>(key, HasTemplateOptionFlag())   
		
	