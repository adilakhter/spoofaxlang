module templatelang-desugar-template

language SpoofaxLang
start symbol Template

test transform NoOptions() into empty list [[ <<Z>> ]]
run templatelang-template-desugar to
  SingleLineTemplate([Placeholder(_, _, [])])

test transform Options(...) into ... [[ <<Z; anchor, wrap>> ]]
run templatelang-template-desugar to
  SingleLineTemplate([Placeholder(_, _, [Anchor(), Wrap()])])

// NOTE: Do not replace the tab in the next line with a space!
test replace tabs with two spaces [[ <c  d> ]]
run templatelang-template-desugar to SingleLineTemplate([
  String("c"), Layout("  "), String("d")
])

// FIXME: Add tab char, see also spoofax-431.spt
test unescape common escape chars (1) [[ <<\ \'\"\r\n>> ]]
run templatelang-template-desugar to SingleLineTemplate([String(" '\"\r\n")])

test unescape common escape chars (2) [[ "\ \'\"\r\n" ]]
run templatelang-template-desugar to SingleLineTemplate([String(" '\"\r\n")])

test unescape escaped brackets (1) [[ <\<\>\\> ]]
run templatelang-template-desugar to SingleLineTemplate([String("<>\\")])

test unescape escaped brackets (2) [[[ [\[\]\\] ]]]
run templatelang-template-desugar to SingleLineTemplate([String("[]\\")])

test unescape line ending (1) [[ <<\\>  
> ]]
run templatelang-template-desugar to SingleLineTemplate([String("")])

test unescape line ending (2) [[[ [[\\]  
] ]]]
run templatelang-template-desugar to SingleLineTemplate([String("")])

test unescape unicode codepoints [[ <<\u41\u61>> ]]
run templatelang-template-desugar to SingleLineTemplate([String("Aa")])

test unescape separators [[ <<Z*; separator="\n">> ]]
run templatelang-template-desugar to SingleLineTemplate([
  Placeholder(_, _, [Separator("\n")])
])

test remove first and last line [[ <
  > ]]
run templatelang-template-desugar to Template([])

test don't remove middle line [[ <

  > ]]
run templatelang-template-desugar to Template([_])

test remove indentation [[ <
    one

       two
  > ]]
run templatelang-template-desugar to Template([
  Line([Layout(""), String("one")]),
  Line(_),
  Line([Layout("   "), String("two")])
])

test don't remove leading layout in single line template [[ < x> ]]
run templatelang-template-desugar to SingleLineTemplate([Layout(_), String(_)])

test don't remove trailing layout in single line template [[ <x > ]]
run templatelang-template-desugar to SingleLineTemplate([String(_), Layout(_)])

test don't put leading layout in single line template [[ <x> ]]
run templatelang-template-desugar to SingleLineTemplate([String(_)])
