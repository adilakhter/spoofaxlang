%% Adapted from org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf
%% Removed Java imports
%% Added QuotedTerms -> CompletionPart+ production
%% Added "~anno:" Term[[StrategoHost]] -> CompletionAnno production
%% Removed QuotedTerm -> CompletionPart

module Stratego-EditorService
imports
  EditorService
  StrategoMix[StrategoHost]

exports
  context-free start-symbols Module[[StrategoHost]]

  sorts
    QuotedTerm
    QuotedTerms

  context-free syntax

    %% (Anti-)quotations
    "descriptor" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}

                 "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}

    "descriptor" "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "descriptor" "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "descriptor" "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
    "descriptor" "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}

                 "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                 "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                 "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
                 "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}

    "descriptor" "|[" Section "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                 "|[" Section "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}

    QuotedTerm -> Id {cons("FromMetaExpr"), avoid}
    QuotedTerm -> PropertyValue {cons("FromMetaExpr"), avoid}
    QuotedTerm -> URL {cons("FromMetaExpr"), avoid}
    QuotedTerm -> ModuleName {cons("FromMetaExpr")}
    QuotedTerm -> Color {cons("FromMetaExpr")}
    QuotedTerm -> Font  {cons("FromMetaExpr")}
    QuotedTerm -> SectionName {cons("FromMetaExpr")}
    QuotedTerm -> SemanticRule {cons("FromMetaExpr"), avoid}
    %% QuotedTerm -> CompletionPart {cons("FromMetaExpr")}
    QuotedTerm -> Section {cons("FromMetaExpr")}
    QuotedTerm -> String {cons("FromMetaExpr")}

    QuotedTerms -> OutlineRule*   {cons("FromMetaExpr")}
    QuotedTerms -> ColorRule*     {cons("FromMetaExpr")}
    QuotedTerms -> FoldingRule*   {cons("FromMetaExpr")}
    QuotedTerms -> PropertyValues {cons("FromMetaExpr")}
    QuotedTerms -> SemanticRule*  {cons("FromMetaExpr")}
    QuotedTerms -> CompletionPart+ {cons("FromMetaExpr")}
    QuotedTerms -> Section*        {cons("FromMetaExpr")}

    "~"  Term[[StrategoHost]] -> QuotedTerm  {bracket}
    "~*" Term[[StrategoHost]] -> QuotedTerms {bracket}

    "~sort:" Term[[StrategoHost]] -> Sort {cons("FromMetaExpr"), prefer}
    "~anno:" Term[[StrategoHost]] -> CompletionAnno {cons("FromMetaExpr"), prefer}

    %% Stratego applications as anti-quotation
    "<" Strategy[[StrategoHost]] ">" Term[[StrategoHost]] -> QuotedTerm {cons("App")}
    StrategyAngle[[StrategoHost]]                         -> QuotedTerm {cons("RootApp"), avoid}

  lexical syntax

    "<" ~[]* ">" -> PropertyValue {reject}
    "~" ~[]*     -> PropertyValue {reject}
