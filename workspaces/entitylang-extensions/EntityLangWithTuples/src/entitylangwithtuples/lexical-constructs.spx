package EntityLangWithTuples   

module L
	imports SimpleEntityLang
	lexical syntax 
		[a-zA-Z][a-zA-Z0-9]*  -> SimpleEntityLang.ID
		
		
	lexical syntax
		"-"? [0-9]+           -> INT
		//[a-zA-Z][a-zA-Z0-9]* -> ID

		"\"" StringChar* "\"" -> STRING
		~[\"\n]               -> StringChar
		"\\\""                -> StringChar
		
		BackSlashChar         -> StringChar
		"\\"                  -> BackSlashChar
	
	lexical restrictions
	
		//Ensure greedy matching for lexicals
		CommentChar   -/- [\/]
		INT           -/- [0-9]
		
		//Backslash chars in strings may not be followed by "
		
		BackSlashChar -/- [\"]


module K
	
	lexical syntax 
		"Int"					  		-> RESERVED
		"String"			  			-> RESERVED
		RESERVED 						-> ID{reject}

	lexical restrictions
		//Ensure greedy matching for lexicals
		"Int" 
		"String"  -/- [A-Za-z0-9\_]



module layout
	lexical syntax
		[\ \t\n\r] -> LAYOUT
	    
		[\*]                             -> CommentChar
		"/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
		"//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT   
	    
		-> EOF
	  
	lexical restrictions 
		//Ensure greedy matching for lexicals
		//EOF may not be followed by any char
		EOF           -/- ~[]
	
	context-free restrictions 
  
		//Ensure greedy matching for comments
		LAYOUT? -/- [\ \t\n\r]
		LAYOUT? -/- [\/].[\/]
		LAYOUT? -/- [\/].[\*]		
