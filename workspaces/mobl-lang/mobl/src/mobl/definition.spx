package org.lang.mobl 

module DefDecl
	 
context-free syntax
	"dynamic" "import" QId         -> Definition {"DynamicImport"}
    "import" QId                   -> Definition {"Import"}
    "load" Path                    -> Definition {"Load"}
    "resource" Path                -> Definition {"Resource"}

    "mixin" QId                    -> Definition {"Mixin"}
    
context-free syntax   
      Statement                    -> Definition


context-free syntax // mobl-javascript integration 
	"<javascript>" JSModule "</javascript>"     -> Definition {cons("Javascript")}
    QId "@<javascript>" JSModule "</javascript>"     -> Definition {cons("ModuleJavascript")}
    "<javascript" "for" "=" QId ">" JSModule "</javascript>"     -> Definition {cons("JavascriptFor")}
    QId "@<javascript" "for" "=" QId ">" JSModule "</javascript>"     -> Definition {cons("ModuleJavascriptFor")}
 
	
completions 
  completion template : Definition =
    "control " <name> "() {\n\t\n}" (blank)

  completion template : Definition =
    "screen " <name> "() {\n\t\n}" (blank)

  completion template : Definition =
    "entity " <name> " {\n\t\n}" (blank)

  completion template : Definition =
    "service " <name> " {\n\tresource someResource() : Dynamic {\n\t\turi = \"/someResource\"\n\t}\n}" (blank)

  completion template : Definition =
    "resource " <some/file.png> (blank)

  completion template : Definition =
    "load " <some/file.js> (blank)

  completion template : Definition =
    "external type " <name> "{\n\t\n}" (blank)

  completion template : Definition =
    "type " <name> "{\n\t\n}" (blank)

  completion template : Definition =
    "external function " <name> "() {\n\t\n\}" (blank)

  completion template : Definition =
    "style " <name> " {\n\t\n}" (blank)

  completion template : Definition =
    "style mixin " <name> "() {\n\t\n}" (blank)

  completion template : Definition =
    "style $" <name> " = rgb(255, 255, 255)" (blank)
		