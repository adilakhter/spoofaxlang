PP-Table([PP-Entry(Path1("FunctionDef"),[FBOX(KW,S("\"def\"")),Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),Arg("3"),Arg("4")]),PP-Entry(Path("FunctionDef",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("FunctionDef",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("FunctionCall"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("FunctionCall",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Module"),[FBOX(KW,S("\"module\"")),Arg("1"),Arg("2")]),PP-Entry(Path("Module",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("Imports"),[FBOX(KW,S("\"imports\"")),Arg("1")]),PP-Entry(Path1("Entity"),[FBOX(KW,S("\"entity\"")),Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("Entity",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("QId"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("New"),[FBOX(KW,S("\"new\"")),Arg("1"),FBOX(KW,S("\"(\"")),FBOX(KW,S("\")\""))]),PP-Entry(Path1("VarRef"),[Arg("1")]),PP-Entry(Path1("QVarRef"),[Arg("1")]),PP-Entry(Path1("LT"),[Arg("1"),FBOX(KW,S("\"<\"")),Arg("2")]),PP-Entry(Path1("This"),[FBOX(KW,S("\"this\""))]),PP-Entry(Path1("Int"),[Arg("1")]),PP-Entry(Path1("String"),[Arg("1")]),PP-Entry(Path1("Plus"),[Arg("1"),FBOX(KW,S("\"+\"")),Arg("2")]),PP-Entry(Path1("Times"),[Arg("1"),FBOX(KW,S("\"*\"")),Arg("2")]),PP-Entry(Path1("Type"),[Arg("1")]),PP-Entry(Path1("IntegerType"),[FBOX(KW,S("\"Int\""))]),PP-Entry(Path1("StringType"),[FBOX(KW,S("\"String\""))]),PP-Entry(Path1("Assign"),[Arg("1"),FBOX(KW,S("\":=\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Block"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"{\"")),Arg("1")])],FBOX(KW,S("\"}\""))])),PP-Entry(Path("Block",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("Statement"),[Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("VarDecl"),[FBOX(KW,S("\"var\"")),Arg("1"),FBOX(KW,S("\":\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("If"),[FBOX(KW,S("\"if\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2"),FBOX(KW,S("\"else\"")),Arg("3")]),PP-Entry(Path1("While"),[FBOX(KW,S("\"while\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("Return"),[FBOX(KW,S("\"return\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Param"),[Arg("1"),FBOX(KW,S("\":\"")),Arg("2")]),PP-Entry(Path1("ReturnType"),[FBOX(KW,S("\":\"")),Arg("1")]),PP-Entry(Path1("Property"),[Arg("1"),FBOX(KW,S("\":\"")),Arg("2")]),PP-Entry(Path1("PropertyAccess"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("Tuple"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\",\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("Tuple",[selector("1","parameterized-sort")]),[Arg("1"),Arg("2")]),PP-Entry(Path("Tuple",[selector("1","parameterized-sort"),selector("1","\"Exp\"")]),[]),PP-Entry(Path("Tuple",[selector("2","parameterized-sort")]),[Arg("1"),Arg("2")]),PP-Entry(Path("Tuple",[selector("2","parameterized-sort"),selector("1","\"Exp\"")]),[]),PP-Entry(Path1("TupleType"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\",\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("TupleType",[selector("1","parameterized-sort")]),[Arg("1"),Arg("2")]),PP-Entry(Path("TupleType",[selector("1","parameterized-sort"),selector("1","\"Type\"")]),[]),PP-Entry(Path("TupleType",[selector("2","parameterized-sort")]),[Arg("1"),Arg("2")]),PP-Entry(Path("TupleType",[selector("2","parameterized-sort"),selector("1","\"Type\"")]),[])])