package org.lang.EntityLang

module Statement  

context-free syntax
  	Exp ":=" Exp ";"   -> Statement {"Assign"}
  	"{" Statement* "}" -> Block {"Block"}
  	Block              -> Statement
  	VarDecl            -> Statement
  	Exp ";"            -> Statement {"Statement"}
  	 
context-free syntax  	
  	"var" EID ":" Type ";" -> VarDecl {"VarDecl"} 

context-free syntax
  	"if" "(" Exp ")" Block "else" Block -> Statement {"If"}
  	"while" "(" Exp ")" Block           -> Statement {"While"}

  	
module StatementAnalysis
rules 	
  rename:
  	Block(stats) -> Block(stats')
  	where new-scope(<rename-all>stats => stats')

module StatementStaticChecking
rules 
	editor-error:
  		s@Assign(e1, e2) -> (s, $[Cannot assign [<pp>type2] to [<pp>type1]])
  		where 
  	  		type1 := <type-of> e1;
  	  		type2 := <type-of> e2;
	  	  	not( <type-compatible>(type1, type2))  



	  